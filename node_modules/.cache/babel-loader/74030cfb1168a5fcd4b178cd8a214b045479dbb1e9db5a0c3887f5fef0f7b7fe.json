{"ast":null,"code":"import'./Sidebar.css';import{CDBNavLink,CDBSidebar,CDBSidebarContent,CDBSidebarHeader,CDBSidebarMenu,CDBSidebarMenuItem}from'cdbreact';import React,{useEffect,useState}from'react';import{useLocation}from'react-router-dom';import Constants from'../../Constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Sidebar(){const[activeSidebarMenuItem,setActiveSidebarMenuItem]=useState(null);const[expandedMenus,setExpandedMenus]=useState({});const location=useLocation();const userType=localStorage.getItem('breezeUserType');const exponentTypeList=JSON.parse(localStorage.getItem('breezeExponentType'));const selectedExponentType=localStorage.getItem(\"breezeSelectedExponentType\");const toggleMenu=menuName=>{setExpandedMenus(prevState=>({...prevState,[menuName]:!prevState[menuName]}));};// Define menu items based on userType  \nconst getMenuItems=()=>{switch(userType){case Constants.ADMIN:return[{path:\"/dashboard\",name:\"Home\",icon:\"home\"},{path:\"/dashboard/create-admin\",name:\"Create Admin\",icon:\"edit\"},{path:\"/dashboard/admin-users\",name:\"Users\",icon:\"users\"},{path:\"/dashboard/technology\",name:\"Technical Stack\",icon:\"microchip\"},{name:\"Training\",icon:\"book\",submenu:[{path:\"/dashboard/course\",name:\"Course\",icon:\"book\"},{path:\"/dashboard/created-trainings\",name:\"Created Trainings\",icon:\"check-circle\"},{path:\"/dashboard/add-sample\",name:\"Add Sample Intro Video\",icon:\"video-slash\"},{path:\"/dashboard/admin-enrolled-trainings\",name:\"Enrolled Trainings\",icon:\"registered\"},{path:\"/dashboard/admin-started-trainings\",name:\"Started Trainings\",icon:\"arrow-right\"},{path:\"/dashboard/admin-completed-trainings\",name:\"Completed Trainings\",icon:\"history\"}]},{name:\"Interview Support\",icon:\"chalkboard-teacher\",submenu:[{path:\"/dashboard/created-interview-supports\",name:\"Created Interview Supports\",icon:\"check-circle\"},{path:\"/dashboard/updated-interview-supports\",name:\"Updated Interview Supports\",icon:\"pen\"},{path:\"/dashboard/admin-booked-interview-supports\",name:\"Booked Interview Supports\",icon:\"bookmark\"},{path:\"/dashboard/admin-rescheduled-interview-supports\",name:\"Rescheduled Bookings\",icon:\"calendar-plus\"},{path:\"/dashboard/admin-today-interview-support-bookings\",name:\"Today Interview Support Bookings\",icon:\"calendar-alt\"},{path:\"/dashboard/admin-completed-interview-support-bookings\",name:\"Completed Interview Support Bookings\",icon:\"history\"}]},{name:\"Job Support\",icon:\"book\",submenu:[{path:\"/dashboard/created-job-supports\",name:\"Created Job Supports\",icon:\"check-circle\"},{path:\"/dashboard/updated-job-supports\",name:\"Updated Job Supports\",icon:\"pen\"},{path:\"/dashboard/admin-booked-job-supports\",name:\"Booked Job Supports\",icon:\"bookmark\"},{path:\"/dashboard/admin-rescheduled-job-supports\",name:\"Rescheduled Bookings\",icon:\"calendar-plus\"},{path:\"/dashboard/admin-stopped-job-supports\",name:\"Stopped Bookings\",icon:\"stop-circle\"},{path:\"/dashboard/admin-continued-job-supports\",name:\"Continued Bookings\",icon:\"play\"},{path:\"/dashboard/admin-assigned-job-supports\",name:\"Assigned Bookings\",icon:\"file-alt\"},{path:\"/dashboard/admin-today-job-support-bookings\",name:\"Today Job Support Bookings\",icon:\"calendar-alt\"},{path:\"/dashboard/admin-completed-job-support-bookings\",name:\"Completed Job Support Bookings\",icon:\"history\"}]}// Add more admin specific menu items if needed\n];case Constants.EXPONENT:switch(selectedExponentType){case Constants.TRAINER:return[{path:\"/dashboard\",name:\"Home\",icon:\"home\"},{path:\"/dashboard/create-training\",name:\"Create Training\",icon:\"edit\"},{path:\"/dashboard/trainer-rejected-trainings\",name:\"Rejected Trainings\",icon:\"times\"},{path:\"/dashboard/trainer-approved-trainings\",name:\"Approved Trainings\",icon:\"check\"},{path:\"/dashboard/trainer-started-trainings\",name:\"Scheduled Trainings\",icon:\"arrow-right\"},{path:\"/dashboard/trainer-completed-trainings\",name:\"Completed Trainings\",icon:\"history\"}// Add trainer specific menu items\n];case Constants.INTERVIEW_SUPPORTER:return[{path:\"/dashboard\",name:\"Home\",icon:\"home\"},{path:\"/dashboard/create-interview-support\",name:\"Create Interview Support\",icon:\"edit\"},{path:\"/dashboard/exponent-rejected-interview-support\",name:\"Rejected Interview Support\",icon:\"times\"},{path:\"/dashboard/exponent-approved-interview-support\",name:\"Approved Interview Support\",icon:\"check\"},{path:\"/dashboard/interview-supporter-bookings\",name:\"Interview Support Bookings\",icon:\"book-reader\"},{path:\"/dashboard/interview-supporter-today-bookings\",name:\"Scheduled Bookings\",icon:\"arrow-right\"},{path:\"/dashboard/interview-supporter-completed-bookings\",name:\"Completed Bookings\",icon:\"history\"}];case Constants.JOB_SUPPORTER:return[{path:\"/dashboard\",name:\"Home\",icon:\"home\"},{path:\"/dashboard/create-job-support\",name:\"Create Job Support\",icon:\"edit\"},{path:\"/dashboard/exponent-rejected-job-support\",name:\"Rejected Job Support\",icon:\"times\"},{path:\"/dashboard/exponent-approved-job-support\",name:\"Approved Job Support\",icon:\"check\"},{path:\"/dashboard/job-supporter-bookings\",name:\"Job Support Bookings\",icon:\"book-reader\"},{path:\"/dashboard/job-supporter-today-bookings\",name:\"Scheduled Bookings\",icon:\"arrow-right\"},{path:\"/dashboard/job-supporter-completed-bookings\",name:\"Completed Bookings\",icon:\"history\"}];default:return[];}case Constants.CANDIDATE:return[{path:\"/dashboard\",name:\"Home\",icon:\"home\"},{name:\"Training\",icon:\"book\",submenu:[{path:\"/dashboard/candidate-search-training\",name:\"Search Trainings\",icon:\"search\"},{path:\"/dashboard/enrolled-trainings\",name:\"Enrolled Trainings\",icon:\"registered\"},{path:\"/dashboard/candidate-started-trainings\",name:\"Scheduled Trainings\",icon:\"arrow-right\"},{path:\"/dashboard/candidate-completed-trainings\",name:\"Completed Trainings\",icon:\"history\"}]},{name:\"Interview Support\",icon:\"chalkboard-teacher\",submenu:[{path:\"/dashboard/candidate-search-interview-supports\",name:\"Search Interview Supports\",icon:\"search\"},{path:\"/dashboard/candidate-interview-support-bookings\",name:\"Interview Support Bookings\",icon:\"book-reader\"},{path:\"/dashboard/candidate-today-interview-support-bookings\",name:\"Scheduled Bookings\",icon:\"arrow-right\"},{path:\"/dashboard/candidate-completed-interview-support-bookings\",name:\"Completed Bookings\",icon:\"history\"}]},{name:\"Job Support\",icon:\"book\",submenu:[{path:\"/dashboard/candidate-search-job-supports\",name:\"Search Job Supports\",icon:\"search\"},{path:\"/dashboard/candidate-job-support-bookings\",name:\"Job Support Bookings\",icon:\"book-reader\"},{path:\"/dashboard/candidate-today-job-support-bookings\",name:\"Scheduled Bookings\",icon:\"arrow-right\"},{path:\"/dashboard/candidate-completed-job-support-bookings\",name:\"Completed Bookings\",icon:\"history\"}]}// Add candidate specific menu items\n];default:return[];}};const sidebarMenuItems=getMenuItems();useEffect(()=>{const pathname=location.pathname;setActiveSidebarMenuItem(pathname);},[location]);// exponent type change code\nconst handleExponentTypeChange=event=>{const selectedValue=event.target.value;localStorage.setItem(\"breezeSelectedExponentType\",selectedValue);window.location.href='/dashboard';};return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(CDBSidebar,{className:\"app-bg-color\",children:[/*#__PURE__*/_jsx(CDBSidebarHeader,{prefix:/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-bars\"}),children:userType===Constants.ADMIN||userType===Constants.CANDIDATE?userType:/*#__PURE__*/_jsx(\"select\",{className:\"sidebar-exponent-dropdown\",value:selectedExponentType,onChange:handleExponentTypeChange,style:{cursor:'pointer'},children:exponentTypeList.map((item,index)=>/*#__PURE__*/_jsx(\"option\",{className:\"sidebar-exponent-dropdown-option\",value:item,children:item},index))})}),/*#__PURE__*/_jsx(CDBSidebarContent,{children:/*#__PURE__*/_jsx(CDBSidebarMenu,{children:sidebarMenuItems.map((item,index)=>/*#__PURE__*/_jsx(React.Fragment,{children:item.submenu?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CDBNavLink,{to:\"#\",className:\"nav-link\",onClick:()=>toggleMenu(item.name),children:/*#__PURE__*/_jsxs(CDBSidebarMenuItem,{icon:item.icon,iconSize:\"lg\",className:\"sidebar-menu-item \".concat(expandedMenus[item.name]?'active':''),children:[item.name,/*#__PURE__*/_jsx(\"i\",{className:\"fa fa-caret-\".concat(expandedMenus[item.name]?'up':'down'),style:{float:'right',marginTop:'5px',marginRight:'5px'}})]})}),expandedMenus[item.name]&&item.submenu.map((subitem,subindex)=>/*#__PURE__*/_jsx(CDBNavLink,{to:subitem.path,className:\"nav-link\",children:/*#__PURE__*/_jsx(CDBSidebarMenuItem,{icon:subitem.icon,iconSize:\"lg\",className:\"sidebar-submenu-item \".concat(activeSidebarMenuItem===subitem.path?'active':''),children:subitem.name})},subindex))]}):/*#__PURE__*/_jsx(CDBNavLink,{to:item.path,className:\"nav-link\",children:/*#__PURE__*/_jsx(CDBSidebarMenuItem,{icon:item.icon,iconSize:\"lg\",className:\"sidebar-menu-item \".concat(activeSidebarMenuItem===item.path?'active':''),children:item.name})})},index))})})]})});}export default Sidebar;// with sub mneu\n// import './Sidebar.css';\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import Constants from '../../Constants';\n// function Sidebar() {\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\n//     const [expandedMenus, setExpandedMenus] = useState({});\n//     const location = useLocation();\n//     const userType = localStorage.getItem('breezeUserType');\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\n//     const toggleMenu = (menuName) => {\n//         setExpandedMenus(prevState => ({\n//             ...prevState,\n//             [menuName]: !prevState[menuName]\n//         }));\n//     };\n//     const getMenuItems = () => {\n//         switch (userType) {\n//             case Constants.ADMIN:\n//                 return [\n//                     { path: \"/dashboard\", name: \"Home\", icon: \"home\" },\n//                     {\n//                         name: \"Training\",\n//                         icon: \"book\",\n//                         submenu: [\n//                             { path: \"/dashboard/technology\", name: \"Technology\", icon: \"th-large\" },\n//                             { path: \"/dashboard/course\", name: \"Course\", icon: \"sticky-note\" },\n//                             { path: \"/dashboard/created-trainings\", name: \"Created Trainings\", icon: \"th-large\" },\n//                             { path: \"/dashboard/add-sample\", name: \"Add Sample Intro Video\", icon: \"sticky-note\" },\n//                             { path: \"/dashboard/admin-enrolled-trainings\", name: \"Enrolled Trainings\", icon: \"th-large\" }\n//                         ]\n//                     },\n//                     // Add more admin specific menu items if needed\n//                 ];\n//             // Add other user types similarly\n//             default:\n//                 return [];\n//         }\n//     };\n//     const sidebarMenuItems = getMenuItems();\n//     useEffect(() => {\n//         const pathname = location.pathname;\n//         setActiveSidebarMenuItem(pathname);\n//     }, [location]);\n//     const handleExponentTypeChange = (event) => {\n//         const selectedValue = event.target.value;\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\n//         window.location.href = '/dashboard';\n//     };\n//     return (\n//         <div>\n//             <CDBSidebar className='app-bg-color'>\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\n//                             {exponentTypeList.map((item, index) => (\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\n//                             ))}\n//                         </select>\n//                     )}\n//                 </CDBSidebarHeader>\n//                 <CDBSidebarContent>\n//                     <CDBSidebarMenu>\n//                         {sidebarMenuItems.map((item, index) => (\n//                             <React.Fragment key={index}>\n//                                 {item.submenu ? (\n//                                     <div>\n//                                         <CDBNavLink\n//                                             to=\"#\"\n//                                             className=\"nav-link\"\n//                                             onClick={() => toggleMenu(item.name)}\n//                                         >\n//                                             <CDBSidebarMenuItem\n//                                                 icon={item.icon}\n//                                                 iconSize='lg'\n//                                                 className={`sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`}\n//                                             >\n//                                                 {item.name}\n//                                                 <i className={`fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`} style={{ float: 'right' }} />\n//                                             </CDBSidebarMenuItem>\n//                                         </CDBNavLink>\n//                                         {expandedMenus[item.name] && (\n//                                             item.submenu.map((subitem, subindex) => (\n//                                                 <CDBNavLink\n//                                                     key={subindex}\n//                                                     to={subitem.path}\n//                                                     className=\"nav-link\"\n//                                                 >\n//                                                     <CDBSidebarMenuItem\n//                                                         icon={subitem.icon}\n//                                                         iconSize='lg'\n//                                                         className={`sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`}\n//                                                     >\n//                                                         {subitem.name}\n//                                                     </CDBSidebarMenuItem>\n//                                                 </CDBNavLink>\n//                                             ))\n//                                         )}\n//                                     </div>\n//                                 ) : (\n//                                     <CDBNavLink\n//                                         to={item.path}\n//                                         className=\"nav-link\"\n//                                     >\n//                                         <CDBSidebarMenuItem\n//                                             icon={item.icon}\n//                                             iconSize='lg'\n//                                             className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\n//                                         >\n//                                             {item.name}\n//                                         </CDBSidebarMenuItem>\n//                                     </CDBNavLink>\n//                                 )}\n//                             </React.Fragment>\n//                         ))}\n//                     </CDBSidebarMenu>\n//                 </CDBSidebarContent>\n//             </CDBSidebar>\n//         </div>\n//     );\n// }\n// export default Sidebar;\n// without sub menu\n// import './Sidebar.css';\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import Constants from '../../Constants';\n// function Sidebar() {\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\n//     const location = useLocation();\n//     const userType = localStorage.getItem('breezeUserType');\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\n//     // Define menu items based on userType\n//     const getMenuItems = () => {\n//         switch (userType) {\n//             case Constants.ADMIN:\n//                 return [\n//                     {\n//                         path: \"/dashboard\",\n//                         name: \"Home\",\n//                         icon: \"home\",\n//                     },\n//                     {\n//                         path: \"/dashboard/create-admin\",\n//                         name: \"Create Admin\",\n//                         icon: \"edit\",\n//                     },\n//                     {\n//                         path: \"/dashboard/technology\",\n//                         name: \"Technology\",\n//                         icon: \"microchip\",\n//                     },\n//                     {\n//                         path: \"/dashboard/course\",\n//                         name: \"Course\",\n//                         icon: \"book\",\n//                     },\n//                     {\n//                         path: \"/dashboard/created-trainings\",\n//                         name: \"Created Trainings\",\n//                         icon: \"check-circle\",\n//                     },\n//                     {\n//                         path: \"/dashboard/add-sample\",\n//                         name: \"Add Sample Intro Video\",\n//                         icon: \"video-slash\",\n//                     },\n//                     {\n//                         path: \"/dashboard/admin-enrolled-trainings\",\n//                         name: \"Enrolled Trainings\",\n//                         icon: \"registered\",\n//                     },\n//                     {\n//                         path: \"/dashboard/admin-started-trainings\",\n//                         name: \"Started Trainings\",\n//                         icon: \"arrow-right\",\n//                     },\n//                     {\n//                         path: \"/dashboard/admin-completed-trainings\",\n//                         name: \"Completed Trainings\",\n//                         icon: \"history\",\n//                     },\n//                     // Add more admin specific menu items if needed\n//                 ];\n//             case Constants.EXPONENT:\n//                 switch (selectedExponentType) {\n//                     case Constants.TRAINER:\n//                         return [\n//                             {\n//                                 path: \"/dashboard\",\n//                                 name: \"Home\",\n//                                 icon: \"home\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/create-training\",\n//                                 name: \"Create Training\",\n//                                 icon: \"edit\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-rejected-trainings\",\n//                                 name: \"Rejected Trainings\",\n//                                 icon: \"times\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-approved-trainings\",\n//                                 name: \"Approved Training\",\n//                                 icon: \"check\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-started-trainings\",\n//                                 name: \"Scheduled Trainings\",\n//                                 icon: \"arrow-right\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-completed-trainings\",\n//                                 name: \"Completed Training\",\n//                                 icon: \"history\",\n//                             },\n//                             // Add trainer specific menu items\n//                         ];\n//                     case Constants.JOB_SUPPORTER:\n//                         return [\n//                             {\n//                                 path: \"/dashboard\",\n//                                 name: \"Home\",\n//                                 icon: \"home\",\n//                             },\n//                         ];\n//                     case Constants.INTERVIEW_SUPPORTER:\n//                         return [\n//                             {\n//                                 path: \"/dashboard\",\n//                                 name: \"Home\",\n//                                 icon: \"home\",\n//                             },\n//                         ];\n//                     default:\n//                         return [];\n//                 }\n//             case Constants.CANDIDATE:\n//                 return [\n//                     {\n//                         path: \"/dashboard\",\n//                         name: \"Home\",\n//                         icon: \"home\",\n//                     },\n//                     {\n//                         path: \"/dashboard/candidate-search-training\",\n//                         name: \"Search Trainings\",\n//                         icon: \"search\",\n//                     },\n//                     {\n//                         path: \"/dashboard/enrolled-trainings\",\n//                         name: \"Enrolled Trainings\",\n//                         icon: \"registered\",\n//                     },\n//                     {\n//                         path: \"/dashboard/candidate-started-trainings\",\n//                         name: \"Scheduled Trainings\",\n//                         icon: \"arrow-right\",\n//                     },\n//                     {\n//                         path: \"/dashboard/candidate-completed-trainings\",\n//                         name: \"Completed Trainings\",\n//                         icon: \"history\",\n//                     },\n//                     // Add candidate specific menu items\n//                 ];\n//             default:\n//                 return [];\n//         }\n//     };\n//     const sidebarMenuItems = getMenuItems();\n//     useEffect(() => {\n//         const pathname = location.pathname;\n//         setActiveSidebarMenuItem(pathname);\n//     }, [location]);\n//     // exponent type change code\n//     const handleExponentTypeChange = (event) => {\n//         const selectedValue = event.target.value;\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\n//         window.location.href = '/dashboard';\n//     };\n//     return (\n//         <div>\n//             <CDBSidebar className='app-bg-color' >\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\n//                             {exponentTypeList.map((item, index) => (\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\n//                             ))}\n//                         </select>\n//                     )}\n//                 </CDBSidebarHeader>\n//                 <CDBSidebarContent>\n//                     <CDBSidebarMenu>\n//                         {\n//                             sidebarMenuItems.map((item, index) => (\n//                                 <CDBNavLink\n//                                     to={item.path} className=\"nav-link\"\n//                                 >\n//                                     <CDBSidebarMenuItem\n//                                         key={index}\n//                                         icon={item.icon}\n//                                         iconSize='lg'\n//                                         className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\n//                                     >\n//                                         {item.name}\n//                                     </CDBSidebarMenuItem>\n//                                 </CDBNavLink>\n//                             ))\n//                         }\n//                     </CDBSidebarMenu>\n//                 </CDBSidebarContent>\n//             </CDBSidebar>\n//         </div>\n//     );\n// }\n// export default Sidebar;","map":{"version":3,"names":["CDBNavLink","CDBSidebar","CDBSidebarContent","CDBSidebarHeader","CDBSidebarMenu","CDBSidebarMenuItem","React","useEffect","useState","useLocation","Constants","jsx","_jsx","jsxs","_jsxs","Sidebar","activeSidebarMenuItem","setActiveSidebarMenuItem","expandedMenus","setExpandedMenus","location","userType","localStorage","getItem","exponentTypeList","JSON","parse","selectedExponentType","toggleMenu","menuName","prevState","getMenuItems","ADMIN","path","name","icon","submenu","EXPONENT","TRAINER","INTERVIEW_SUPPORTER","JOB_SUPPORTER","CANDIDATE","sidebarMenuItems","pathname","handleExponentTypeChange","event","selectedValue","target","value","setItem","window","href","children","className","prefix","onChange","style","cursor","map","item","index","Fragment","to","onClick","iconSize","concat","float","marginTop","marginRight","subitem","subindex"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/sidebar_component/Sidebar.js"],"sourcesContent":["import './Sidebar.css';\r\nimport { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Constants from '../../Constants';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\r\n    const [expandedMenus, setExpandedMenus] = useState({});\r\n    const location = useLocation();\r\n    const userType = localStorage.getItem('breezeUserType');\r\n    const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\r\n    const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\r\n\r\n    const toggleMenu = (menuName) => {\r\n        setExpandedMenus(prevState => ({\r\n            ...prevState,\r\n            [menuName]: !prevState[menuName]\r\n        }));\r\n    };\r\n\r\n    // Define menu items based on userType  \r\n    const getMenuItems = () => {\r\n        switch (userType) {\r\n            case Constants.ADMIN:\r\n                return [\r\n                    {\r\n                        path: \"/dashboard\",\r\n                        name: \"Home\",\r\n                        icon: \"home\",\r\n                    },\r\n                    {\r\n                        path: \"/dashboard/create-admin\",\r\n                        name: \"Create Admin\",\r\n                        icon: \"edit\",\r\n                    },\r\n                    {\r\n                        path: \"/dashboard/admin-users\",\r\n                        name: \"Users\",\r\n                        icon: \"users\",\r\n                    },\r\n                    {\r\n                        path: \"/dashboard/technology\",\r\n                        name: \"Technical Stack\",\r\n                        icon: \"microchip\",\r\n                    },\r\n                    {\r\n                        name: \"Training\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/course\",\r\n                                name: \"Course\",\r\n                                icon: \"book\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/created-trainings\",\r\n                                name: \"Created Trainings\",\r\n                                icon: \"check-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/add-sample\",\r\n                                name: \"Add Sample Intro Video\",\r\n                                icon: \"video-slash\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-enrolled-trainings\",\r\n                                name: \"Enrolled Trainings\",\r\n                                icon: \"registered\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-started-trainings\",\r\n                                name: \"Started Trainings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-completed-trainings\",\r\n                                name: \"Completed Trainings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Interview Support\",\r\n                        icon: \"chalkboard-teacher\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/created-interview-supports\",\r\n                                name: \"Created Interview Supports\",\r\n                                icon: \"check-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/updated-interview-supports\",\r\n                                name: \"Updated Interview Supports\",\r\n                                icon: \"pen\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-booked-interview-supports\",\r\n                                name: \"Booked Interview Supports\", \r\n                                icon: \"bookmark\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-rescheduled-interview-supports\",\r\n                                name: \"Rescheduled Bookings\", \r\n                                icon: \"calendar-plus\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-today-interview-support-bookings\",\r\n                                name: \"Today Interview Support Bookings\",\r\n                                icon: \"calendar-alt\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-completed-interview-support-bookings\",\r\n                                name: \"Completed Interview Support Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Job Support\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/created-job-supports\",\r\n                                name: \"Created Job Supports\",\r\n                                icon: \"check-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/updated-job-supports\",\r\n                                name: \"Updated Job Supports\",\r\n                                icon: \"pen\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-booked-job-supports\",\r\n                                name: \"Booked Job Supports\", \r\n                                icon: \"bookmark\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-rescheduled-job-supports\",\r\n                                name: \"Rescheduled Bookings\", \r\n                                icon: \"calendar-plus\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-stopped-job-supports\",\r\n                                name: \"Stopped Bookings\", \r\n                                icon: \"stop-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-continued-job-supports\",\r\n                                name: \"Continued Bookings\", \r\n                                icon: \"play\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-assigned-job-supports\",\r\n                                name: \"Assigned Bookings\", \r\n                                icon: \"file-alt\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-today-job-support-bookings\",\r\n                                name: \"Today Job Support Bookings\",\r\n                                icon: \"calendar-alt\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-completed-job-support-bookings\",\r\n                                name: \"Completed Job Support Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    // Add more admin specific menu items if needed\r\n                ];\r\n            case Constants.EXPONENT:\r\n                switch (selectedExponentType) {\r\n                    case Constants.TRAINER:\r\n                        return [\r\n                            {\r\n                                path: \"/dashboard\",\r\n                                name: \"Home\",\r\n                                icon: \"home\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/create-training\",\r\n                                name: \"Create Training\",\r\n                                icon: \"edit\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-rejected-trainings\",\r\n                                name: \"Rejected Trainings\",\r\n                                icon: \"times\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-approved-trainings\",\r\n                                name: \"Approved Trainings\",\r\n                                icon: \"check\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-started-trainings\",\r\n                                name: \"Scheduled Trainings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-completed-trainings\",\r\n                                name: \"Completed Trainings\",\r\n                                icon: \"history\",\r\n                            },\r\n                            // Add trainer specific menu items\r\n                        ];\r\n                    case Constants.INTERVIEW_SUPPORTER:\r\n                        return [\r\n                            {\r\n                                path: \"/dashboard\",\r\n                                name: \"Home\",\r\n                                icon: \"home\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/create-interview-support\",\r\n                                name: \"Create Interview Support\",\r\n                                icon: \"edit\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-rejected-interview-support\",\r\n                                name: \"Rejected Interview Support\",\r\n                                icon: \"times\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-approved-interview-support\",\r\n                                name: \"Approved Interview Support\",\r\n                                icon: \"check\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/interview-supporter-bookings\",\r\n                                name: \"Interview Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/interview-supporter-today-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/interview-supporter-completed-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ];\r\n                    case Constants.JOB_SUPPORTER:\r\n                        return [\r\n                            {\r\n                                path: \"/dashboard\",\r\n                                name: \"Home\",\r\n                                icon: \"home\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/create-job-support\",\r\n                                name: \"Create Job Support\",\r\n                                icon: \"edit\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-rejected-job-support\",\r\n                                name: \"Rejected Job Support\",\r\n                                icon: \"times\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-approved-job-support\",\r\n                                name: \"Approved Job Support\",\r\n                                icon: \"check\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/job-supporter-bookings\",\r\n                                name: \"Job Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/job-supporter-today-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/job-supporter-completed-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ];\r\n                    default:\r\n                        return [];\r\n                }\r\n            case Constants.CANDIDATE:\r\n                return [\r\n                    {\r\n                        path: \"/dashboard\",\r\n                        name: \"Home\",\r\n                        icon: \"home\",\r\n                    },\r\n                    {\r\n                        name: \"Training\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/candidate-search-training\",\r\n                                name: \"Search Trainings\",\r\n                                icon: \"search\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/enrolled-trainings\",\r\n                                name: \"Enrolled Trainings\",\r\n                                icon: \"registered\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-started-trainings\",\r\n                                name: \"Scheduled Trainings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-completed-trainings\",\r\n                                name: \"Completed Trainings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Interview Support\",\r\n                        icon: \"chalkboard-teacher\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/candidate-search-interview-supports\",\r\n                                name: \"Search Interview Supports\",\r\n                                icon: \"search\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-interview-support-bookings\",\r\n                                name: \"Interview Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-today-interview-support-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-completed-interview-support-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Job Support\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/candidate-search-job-supports\",\r\n                                name: \"Search Job Supports\",\r\n                                icon: \"search\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-job-support-bookings\",\r\n                                name: \"Job Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-today-job-support-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-completed-job-support-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    // Add candidate specific menu items\r\n                ];\r\n            default:\r\n                return [];\r\n        }\r\n    };\r\n\r\n    const sidebarMenuItems = getMenuItems();\r\n\r\n    useEffect(() => {\r\n        const pathname = location.pathname;\r\n        setActiveSidebarMenuItem(pathname);\r\n    }, [location]);\r\n\r\n    // exponent type change code\r\n    const handleExponentTypeChange = (event) => {\r\n        const selectedValue = event.target.value;\r\n        localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\r\n        window.location.href = '/dashboard';\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CDBSidebar className='app-bg-color'>\r\n                <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\r\n                    {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\r\n                        <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{ cursor: 'pointer' }}>\r\n                            {exponentTypeList.map((item, index) => (\r\n                                <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </CDBSidebarHeader>\r\n                <CDBSidebarContent>\r\n                    <CDBSidebarMenu>\r\n                        {sidebarMenuItems.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {item.submenu ? (\r\n                                    <div>\r\n                                        <CDBNavLink\r\n                                            to=\"#\"\r\n                                            className=\"nav-link\"\r\n                                            onClick={() => toggleMenu(item.name)}\r\n                                        >\r\n                                            <CDBSidebarMenuItem\r\n                                                icon={item.icon}\r\n                                                iconSize='lg'\r\n                                                className={`sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`}\r\n                                            >\r\n                                                {item.name}\r\n                                                <i className={`fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`} style={{ float: 'right',marginTop: '5px',marginRight: '5px' }} />\r\n                                            </CDBSidebarMenuItem>\r\n                                        </CDBNavLink>\r\n                                        {expandedMenus[item.name] && (\r\n                                            item.submenu.map((subitem, subindex) => (\r\n                                                <CDBNavLink\r\n                                                    key={subindex}\r\n                                                    to={subitem.path}\r\n                                                    className=\"nav-link\"\r\n                                                >\r\n                                                    <CDBSidebarMenuItem\r\n                                                        icon={subitem.icon}\r\n                                                        iconSize='lg'\r\n                                                        className={`sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`}\r\n                                                    >\r\n                                                        {subitem.name}\r\n                                                    </CDBSidebarMenuItem>\r\n                                                </CDBNavLink>\r\n                                            ))\r\n                                        )}\r\n                                    </div>\r\n                                ) : (\r\n                                    <CDBNavLink\r\n                                        to={item.path}\r\n                                        className=\"nav-link\"\r\n                                    >\r\n                                        <CDBSidebarMenuItem\r\n                                            icon={item.icon}\r\n                                            iconSize='lg'\r\n                                            className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\r\n                                        >\r\n                                            {item.name}\r\n                                        </CDBSidebarMenuItem>\r\n                                    </CDBNavLink>\r\n                                )}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CDBSidebarMenu>\r\n                </CDBSidebarContent>\r\n            </CDBSidebar>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// with sub mneu\r\n// import './Sidebar.css';\r\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import Constants from '../../Constants';\r\n\r\n// function Sidebar() {\r\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\r\n//     const [expandedMenus, setExpandedMenus] = useState({});\r\n//     const location = useLocation();\r\n//     const userType = localStorage.getItem('breezeUserType');\r\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\r\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\r\n\r\n//     const toggleMenu = (menuName) => {\r\n//         setExpandedMenus(prevState => ({\r\n//             ...prevState,\r\n//             [menuName]: !prevState[menuName]\r\n//         }));\r\n//     };\r\n\r\n//     const getMenuItems = () => {\r\n//         switch (userType) {\r\n//             case Constants.ADMIN:\r\n//                 return [\r\n//                     { path: \"/dashboard\", name: \"Home\", icon: \"home\" },\r\n//                     {\r\n//                         name: \"Training\",\r\n//                         icon: \"book\",\r\n//                         submenu: [\r\n//                             { path: \"/dashboard/technology\", name: \"Technology\", icon: \"th-large\" },\r\n//                             { path: \"/dashboard/course\", name: \"Course\", icon: \"sticky-note\" },\r\n//                             { path: \"/dashboard/created-trainings\", name: \"Created Trainings\", icon: \"th-large\" },\r\n//                             { path: \"/dashboard/add-sample\", name: \"Add Sample Intro Video\", icon: \"sticky-note\" },\r\n//                             { path: \"/dashboard/admin-enrolled-trainings\", name: \"Enrolled Trainings\", icon: \"th-large\" }\r\n//                         ]\r\n//                     },\r\n//                     // Add more admin specific menu items if needed\r\n//                 ];\r\n//             // Add other user types similarly\r\n//             default:\r\n//                 return [];\r\n//         }\r\n//     };\r\n\r\n//     const sidebarMenuItems = getMenuItems();\r\n\r\n//     useEffect(() => {\r\n//         const pathname = location.pathname;\r\n//         setActiveSidebarMenuItem(pathname);\r\n//     }, [location]);\r\n\r\n//     const handleExponentTypeChange = (event) => {\r\n//         const selectedValue = event.target.value;\r\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\r\n//         window.location.href = '/dashboard';\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <CDBSidebar className='app-bg-color'>\r\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\r\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\r\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\r\n//                             {exponentTypeList.map((item, index) => (\r\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                     )}\r\n//                 </CDBSidebarHeader>\r\n//                 <CDBSidebarContent>\r\n//                     <CDBSidebarMenu>\r\n//                         {sidebarMenuItems.map((item, index) => (\r\n//                             <React.Fragment key={index}>\r\n//                                 {item.submenu ? (\r\n//                                     <div>\r\n//                                         <CDBNavLink\r\n//                                             to=\"#\"\r\n//                                             className=\"nav-link\"\r\n//                                             onClick={() => toggleMenu(item.name)}\r\n//                                         >\r\n//                                             <CDBSidebarMenuItem\r\n//                                                 icon={item.icon}\r\n//                                                 iconSize='lg'\r\n//                                                 className={`sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`}\r\n//                                             >\r\n//                                                 {item.name}\r\n//                                                 <i className={`fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`} style={{ float: 'right' }} />\r\n//                                             </CDBSidebarMenuItem>\r\n//                                         </CDBNavLink>\r\n//                                         {expandedMenus[item.name] && (\r\n//                                             item.submenu.map((subitem, subindex) => (\r\n//                                                 <CDBNavLink\r\n//                                                     key={subindex}\r\n//                                                     to={subitem.path}\r\n//                                                     className=\"nav-link\"\r\n//                                                 >\r\n//                                                     <CDBSidebarMenuItem\r\n//                                                         icon={subitem.icon}\r\n//                                                         iconSize='lg'\r\n//                                                         className={`sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`}\r\n//                                                     >\r\n//                                                         {subitem.name}\r\n//                                                     </CDBSidebarMenuItem>\r\n//                                                 </CDBNavLink>\r\n//                                             ))\r\n//                                         )}\r\n//                                     </div>\r\n//                                 ) : (\r\n//                                     <CDBNavLink\r\n//                                         to={item.path}\r\n//                                         className=\"nav-link\"\r\n//                                     >\r\n//                                         <CDBSidebarMenuItem\r\n//                                             icon={item.icon}\r\n//                                             iconSize='lg'\r\n//                                             className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\r\n//                                         >\r\n//                                             {item.name}\r\n//                                         </CDBSidebarMenuItem>\r\n//                                     </CDBNavLink>\r\n//                                 )}\r\n//                             </React.Fragment>\r\n//                         ))}\r\n//                     </CDBSidebarMenu>\r\n//                 </CDBSidebarContent>\r\n//             </CDBSidebar>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// without sub menu\r\n// import './Sidebar.css';\r\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import Constants from '../../Constants';\r\n\r\n// function Sidebar() {\r\n\r\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\r\n//     const location = useLocation();\r\n//     const userType = localStorage.getItem('breezeUserType');\r\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\r\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\r\n\r\n//     // Define menu items based on userType\r\n//     const getMenuItems = () => {\r\n//         switch (userType) {\r\n//             case Constants.ADMIN:\r\n//                 return [\r\n//                     {\r\n//                         path: \"/dashboard\",\r\n//                         name: \"Home\",\r\n//                         icon: \"home\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/create-admin\",\r\n//                         name: \"Create Admin\",\r\n//                         icon: \"edit\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/technology\",\r\n//                         name: \"Technology\",\r\n//                         icon: \"microchip\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/course\",\r\n//                         name: \"Course\",\r\n//                         icon: \"book\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/created-trainings\",\r\n//                         name: \"Created Trainings\",\r\n//                         icon: \"check-circle\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/add-sample\",\r\n//                         name: \"Add Sample Intro Video\",\r\n//                         icon: \"video-slash\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/admin-enrolled-trainings\",\r\n//                         name: \"Enrolled Trainings\",\r\n//                         icon: \"registered\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/admin-started-trainings\",\r\n//                         name: \"Started Trainings\",\r\n//                         icon: \"arrow-right\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/admin-completed-trainings\",\r\n//                         name: \"Completed Trainings\",\r\n//                         icon: \"history\",\r\n//                     },\r\n//                     // Add more admin specific menu items if needed\r\n//                 ];\r\n//             case Constants.EXPONENT:\r\n//                 switch (selectedExponentType) {\r\n//                     case Constants.TRAINER:\r\n//                         return [\r\n//                             {\r\n//                                 path: \"/dashboard\",\r\n//                                 name: \"Home\",\r\n//                                 icon: \"home\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/create-training\",\r\n//                                 name: \"Create Training\",\r\n//                                 icon: \"edit\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-rejected-trainings\",\r\n//                                 name: \"Rejected Trainings\",\r\n//                                 icon: \"times\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-approved-trainings\",\r\n//                                 name: \"Approved Training\",\r\n//                                 icon: \"check\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-started-trainings\",\r\n//                                 name: \"Scheduled Trainings\",\r\n//                                 icon: \"arrow-right\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-completed-trainings\",\r\n//                                 name: \"Completed Training\",\r\n//                                 icon: \"history\",\r\n//                             },\r\n//                             // Add trainer specific menu items\r\n//                         ];\r\n//                     case Constants.JOB_SUPPORTER:\r\n//                         return [\r\n//                             {\r\n//                                 path: \"/dashboard\",\r\n//                                 name: \"Home\",\r\n//                                 icon: \"home\",\r\n//                             },\r\n//                         ];\r\n//                     case Constants.INTERVIEW_SUPPORTER:\r\n//                         return [\r\n//                             {\r\n//                                 path: \"/dashboard\",\r\n//                                 name: \"Home\",\r\n//                                 icon: \"home\",\r\n//                             },\r\n//                         ];\r\n//                     default:\r\n//                         return [];\r\n//                 }\r\n//             case Constants.CANDIDATE:\r\n//                 return [\r\n//                     {\r\n//                         path: \"/dashboard\",\r\n//                         name: \"Home\",\r\n//                         icon: \"home\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/candidate-search-training\",\r\n//                         name: \"Search Trainings\",\r\n//                         icon: \"search\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/enrolled-trainings\",\r\n//                         name: \"Enrolled Trainings\",\r\n//                         icon: \"registered\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/candidate-started-trainings\",\r\n//                         name: \"Scheduled Trainings\",\r\n//                         icon: \"arrow-right\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/candidate-completed-trainings\",\r\n//                         name: \"Completed Trainings\",\r\n//                         icon: \"history\",\r\n//                     },\r\n//                     // Add candidate specific menu items\r\n//                 ];\r\n//             default:\r\n//                 return [];\r\n//         }\r\n//     };\r\n\r\n//     const sidebarMenuItems = getMenuItems();\r\n\r\n//     useEffect(() => {\r\n//         const pathname = location.pathname;\r\n//         setActiveSidebarMenuItem(pathname);\r\n//     }, [location]);\r\n\r\n//     // exponent type change code\r\n//     const handleExponentTypeChange = (event) => {\r\n//         const selectedValue = event.target.value;\r\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\r\n//         window.location.href = '/dashboard';\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <CDBSidebar className='app-bg-color' >\r\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\r\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\r\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\r\n//                             {exponentTypeList.map((item, index) => (\r\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                     )}\r\n//                 </CDBSidebarHeader>\r\n//                 <CDBSidebarContent>\r\n//                     <CDBSidebarMenu>\r\n//                         {\r\n//                             sidebarMenuItems.map((item, index) => (\r\n//                                 <CDBNavLink\r\n//                                     to={item.path} className=\"nav-link\"\r\n//                                 >\r\n//                                     <CDBSidebarMenuItem\r\n//                                         key={index}\r\n//                                         icon={item.icon}\r\n//                                         iconSize='lg'\r\n//                                         className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\r\n//                                     >\r\n//                                         {item.name}\r\n//                                     </CDBSidebarMenuItem>\r\n//                                 </CDBNavLink>\r\n//                             ))\r\n//                         }\r\n//                     </CDBSidebarMenu>\r\n//                 </CDBSidebarContent>\r\n//             </CDBSidebar>\r\n//         </div>\r\n//     );\r\n\r\n// }\r\n\r\n// export default Sidebar;"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze(15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\fetchuser\\\\CompanyUsersComponent.js\\\\CompanyUsersComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport AdminService from '../../../../../Services/admin_service/AdminService';\nimport Constants from '../../../../Constants';\nimport { CDBDataTable } from 'cdbreact';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyUsersComponent = () => {\n  _s();\n  const [searchUsers, setSearchUsers] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState('');\n  const [loadingBar, setLoadingBar] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [companyName, setCompanyName] = useState('');\n  const fetchUsersWithCompanyName = async () => {\n    if (!companyName.trim()) {\n      displayErrorMessage('Please enter a valid company name.');\n      return;\n    }\n    setLoadingBar(true);\n    setErrorMessage(''); // Clear previous error messages\n    try {\n      const requestPayload = {\n        companyName\n      };\n      const responseData = await AdminService.fetchCandidatesByCompany(requestPayload);\n      if (!responseData || responseData.length === 0) {\n        displayErrorMessage('No candidates found for this company.');\n        setSearchUsers([]);\n        return;\n      }\n\n      // Remove duplicates by `userId`\n      const uniqueData = responseData.reduce((acc, user) => {\n        if (!acc.find(item => item.userId === user.userId)) {\n          acc.push({\n            userId: user.userId,\n            userFirstname: user.userFirstname,\n            userLastname: user.userLastname,\n            username: user.username,\n            phoneNumberWithCountryCode: user.phoneNumberWithCountryCode,\n            gender: user.gender\n          });\n        }\n        return acc;\n      }, []);\n      setSearchUsers(uniqueData);\n      setSelectedCompany(companyName);\n    } catch (error) {\n      console.error(error.message);\n      handleFetchCandidatesErrors(error.message);\n    } finally {\n      setLoadingBar(false);\n    }\n  };\n  const handleFetchCandidatesErrors = errorStatus => {\n    if (errorStatus === Constants.INVALID_REQUEST_FIELD) {\n      displayErrorMessage('The company name is invalid.');\n    } else if (errorStatus === Constants.BREEZE_DATABASE_EXCEPTION) {\n      displayErrorMessage('Sorry, our service is currently unavailable.');\n    } else {\n      displayErrorMessage('An unexpected error occurred. Please try again later.');\n    }\n  };\n  const displayErrorMessage = message => {\n    setErrorMessage(message);\n    setTimeout(() => setErrorMessage(''), Constants.SET_TIME_OUT_FOR_ERROR_MSG || 3000);\n  };\n\n  // Data table columns\n  const columns = [{\n    label: 'User ID',\n    field: 'userId'\n  }, {\n    label: 'First Name',\n    field: 'userFirstname'\n  }, {\n    label: 'Last Name',\n    field: 'userLastname'\n  }, {\n    label: 'Email',\n    field: 'username'\n  }, {\n    label: 'Phone',\n    field: 'phoneNumberWithCountryCode'\n  }, {\n    label: 'Gender',\n    field: 'gender'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      style: {\n        color: 'red',\n        marginBottom: '10px'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        style: {\n          marginRight: '10px'\n        },\n        children: \"Enter Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value),\n        placeholder: \"Enter company name\",\n        style: {\n          padding: '5px',\n          fontSize: '14px',\n          borderRadius: '5px',\n          border: '1px solid #ccc',\n          marginRight: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchUsersWithCompanyName,\n        style: {\n          padding: '5px 10px',\n          fontSize: '14px',\n          borderRadius: '5px',\n          backgroundColor: '#007bff',\n          color: '#fff',\n          border: 'none',\n          cursor: 'pointer'\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), loadingBar && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 28\n    }, this), searchUsers.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Enrolled Candidates for \", selectedCompany]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CDBDataTable, {\n        rows: searchUsers // Pass the processed user data\n        ,\n        columns: columns // Pass the column configuration\n        ,\n        striped: true,\n        bordered: true,\n        hover: true,\n        noRecordsFoundLabel: \"No records available.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }, this) : !loadingBar && selectedCompany && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"No users found for the company \\\"\", selectedCompany, \"\\\".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 36\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyUsersComponent, \"OqorJq/WMvfqgHfGDwSPX3eNE7Q=\");\n_c = CompanyUsersComponent;\nexport default CompanyUsersComponent;\nvar _c;\n$RefreshReg$(_c, \"CompanyUsersComponent\");","map":{"version":3,"names":["React","useState","AdminService","Constants","CDBDataTable","jsxDEV","_jsxDEV","CompanyUsersComponent","_s","searchUsers","setSearchUsers","selectedCompany","setSelectedCompany","loadingBar","setLoadingBar","errorMessage","setErrorMessage","companyName","setCompanyName","fetchUsersWithCompanyName","trim","displayErrorMessage","requestPayload","responseData","fetchCandidatesByCompany","length","uniqueData","reduce","acc","user","find","item","userId","push","userFirstname","userLastname","username","phoneNumberWithCountryCode","gender","error","console","message","handleFetchCandidatesErrors","errorStatus","INVALID_REQUEST_FIELD","BREEZE_DATABASE_EXCEPTION","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","columns","label","field","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","color","marginBottom","htmlFor","marginRight","type","id","value","onChange","e","target","placeholder","padding","fontSize","borderRadius","border","onClick","backgroundColor","cursor","rows","striped","bordered","hover","noRecordsFoundLabel","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/fetchuser/CompanyUsersComponent.js/CompanyUsersComponent.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport AdminService from '../../../../../Services/admin_service/AdminService';\r\nimport Constants from '../../../../Constants';\r\nimport { CDBDataTable } from 'cdbreact';\r\n\r\nconst CompanyUsersComponent = () => {\r\n    const [searchUsers, setSearchUsers] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState('');\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n    const [companyName, setCompanyName] = useState('');\r\n\r\n    const fetchUsersWithCompanyName = async () => {\r\n        if (!companyName.trim()) {\r\n            displayErrorMessage('Please enter a valid company name.');\r\n            return;\r\n        }\r\n\r\n        setLoadingBar(true);\r\n        setErrorMessage(''); // Clear previous error messages\r\n        try {\r\n            const requestPayload = { companyName };\r\n            const responseData = await AdminService.fetchCandidatesByCompany(requestPayload);\r\n\r\n            if (!responseData || responseData.length === 0) {\r\n                displayErrorMessage('No candidates found for this company.');\r\n                setSearchUsers([]);\r\n                return;\r\n            }\r\n\r\n            // Remove duplicates by `userId`\r\n            const uniqueData = responseData.reduce((acc, user) => {\r\n                if (!acc.find((item) => item.userId === user.userId)) {\r\n                    acc.push({\r\n                        userId: user.userId,\r\n                        userFirstname: user.userFirstname,\r\n                        userLastname: user.userLastname,\r\n                        username: user.username,\r\n                        phoneNumberWithCountryCode: user.phoneNumberWithCountryCode,\r\n                        gender: user.gender,\r\n                    });\r\n                }\r\n                return acc;\r\n            }, []);\r\n\r\n            setSearchUsers(uniqueData);\r\n            setSelectedCompany(companyName);\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            handleFetchCandidatesErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    };\r\n\r\n    const handleFetchCandidatesErrors = (errorStatus) => {\r\n        if (errorStatus === Constants.INVALID_REQUEST_FIELD) {\r\n            displayErrorMessage('The company name is invalid.');\r\n        } else if (errorStatus === Constants.BREEZE_DATABASE_EXCEPTION) {\r\n            displayErrorMessage('Sorry, our service is currently unavailable.');\r\n        } else {\r\n            displayErrorMessage('An unexpected error occurred. Please try again later.');\r\n        }\r\n    };\r\n\r\n    const displayErrorMessage = (message) => {\r\n        setErrorMessage(message);\r\n        setTimeout(() => setErrorMessage(''), Constants.SET_TIME_OUT_FOR_ERROR_MSG || 3000);\r\n    };\r\n\r\n    // Data table columns\r\n    const columns = [\r\n        { label: 'User ID', field: 'userId' },\r\n        { label: 'First Name', field: 'userFirstname' },\r\n        { label: 'Last Name', field: 'userLastname' },\r\n        { label: 'Email', field: 'username' },\r\n        { label: 'Phone', field: 'phoneNumberWithCountryCode' },\r\n        { label: 'Gender', field: 'gender' },\r\n    ];\r\n\r\n    return (\r\n        <div>\r\n            <h1>Company Users</h1>\r\n\r\n            {errorMessage && <div className=\"error-message\" style={{ color: 'red', marginBottom: '10px' }}>{errorMessage}</div>}\r\n\r\n            <div style={{ marginBottom: '10px' }}>\r\n                <label htmlFor=\"companyName\" style={{ marginRight: '10px' }}>\r\n                    Enter Company Name:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"companyName\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Enter company name\"\r\n                    style={{\r\n                        padding: '5px',\r\n                        fontSize: '14px',\r\n                        borderRadius: '5px',\r\n                        border: '1px solid #ccc',\r\n                        marginRight: '10px',\r\n                    }}\r\n                />\r\n                <button\r\n                    onClick={fetchUsersWithCompanyName}\r\n                    style={{\r\n                        padding: '5px 10px',\r\n                        fontSize: '14px',\r\n                        borderRadius: '5px',\r\n                        backgroundColor: '#007bff',\r\n                        color: '#fff',\r\n                        border: 'none',\r\n                        cursor: 'pointer',\r\n                    }}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n\r\n            {loadingBar && <p>Loading...</p>}\r\n\r\n            {searchUsers.length > 0 ? (\r\n                <div>\r\n                    <h2>Enrolled Candidates for {selectedCompany}</h2>\r\n                    <CDBDataTable\r\n                        rows={searchUsers} // Pass the processed user data\r\n                        columns={columns} // Pass the column configuration\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        noRecordsFoundLabel=\"No records available.\"\r\n                    />\r\n                </div>\r\n            ) : (\r\n                !loadingBar &&\r\n                selectedCompany && <p>No users found for the company \"{selectedCompany}\".</p>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompanyUsersComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze (15)-frontend\\\\breeze\\\\src\\\\components\\\\reset_password_component\\\\ResetPasswordForm.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './ResetPassword.css';\nimport Constants from '../Constants';\nimport LoadingBar from '../loading_bar_component/LoadingBar';\nimport UserService from '../../Services/user_service/UserService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPasswordForm() {\n  _s();\n  const [loadingBar, setLoadingBar] = useState(false);\n  const [isEmailVerified, setIsEmailVerified] = useState(false);\n  const [resetPasswordFormData, setResetPasswordFormData] = useState({\n    username: '',\n    emailOtp: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  //Fields for to display err msg div and label\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const passwordPatternRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$/;\n\n  //JS for to display err msg when validation for pattern fails for inputs\n  const resetPasswordFormDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n\n  //Fields for to display success msg div and label\n  const [sucMsgDiv, setSucMsgDiv] = useState(false);\n  const [sucMsg, setSucMsg] = useState(\"\");\n\n  //JS for to display suc msg\n  const resetPasswordDisplaySucMsg = errorMessage => {\n    setSucMsg(errorMessage);\n    setSucMsgDiv(true);\n    setTimeout(() => {\n      setSucMsg(\"\");\n      setSucMsgDiv(false);\n    }, 2000);\n  };\n  const handleResetPasswordFormData = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setResetPasswordFormData({\n      ...resetPasswordFormData,\n      [name]: value\n    });\n  };\n  const resetPasswordVerifyEmailForm = async e => {\n    e.preventDefault();\n    setLoadingBar(true);\n    const request = {\n      username: resetPasswordFormData.username\n    };\n    console.log(resetPasswordFormData);\n    try {\n      const responseData = await UserService.verifyMailForResetPassword(request);\n      console.log(responseData);\n      setIsEmailVerified(true);\n      resetPasswordDisplaySucMsg('OTP Sent to your Mail-Id');\n    } catch (error) {\n      handleResetPasswordUserError(error.message);\n    } finally {\n      setLoadingBar(false);\n    }\n  };\n  const resetPasswordSubmitForm = async e => {\n    e.preventDefault();\n    const matchConfirmPassword = resetPasswordFormData.password === resetPasswordFormData.confirmPassword;\n    if (!passwordPatternRegex.test(resetPasswordFormData.password)) {\n      resetPasswordFormDisplayErrMsg(\"Password is not matching the pattern\");\n    } else if (!matchConfirmPassword) {\n      resetPasswordFormDisplayErrMsg(\"Confirm Password is not matching given Password\");\n    } else {\n      setLoadingBar(true);\n      console.log(resetPasswordFormData);\n      const request = {\n        username: resetPasswordFormData.username,\n        emailOtp: resetPasswordFormData.emailOtp,\n        password: resetPasswordFormData.password\n      };\n      console.log(request);\n      try {\n        const responseData = await UserService.resetPassword(request);\n        console.log(responseData);\n        resetPasswordDisplaySucMsg('Password changed successfully...');\n        setTimeout(() => {\n          window.location.href = '/login';\n        }, 2000);\n      } catch (error) {\n        handleResetPasswordUserError(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleResetPasswordUserError = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) resetPasswordFormDisplayErrMsg(\"Please enter valid input fields\");else if (Constants.ENTITY_NOT_FOUND === errorStatus) resetPasswordFormDisplayErrMsg(\"You are not registered\");else if (Constants.INACTIVE === errorStatus) resetPasswordFormDisplayErrMsg(\"User is inactive\");else if (Constants.OTP_NOT_MATCHED === errorStatus) resetPasswordFormDisplayErrMsg(\"Please enter correct otp\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) resetPasswordFormDisplayErrMsg(\"Sorry, Our service is down\");else resetPasswordFormDisplayErrMsg(\"Could not process your request\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Reset-password-form-component\",\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reset-password-form-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-3\",\n        children: \"Reset Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Reset-password-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: resetPasswordVerifyEmailForm,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Reset-password-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            disabled: isEmailVerified,\n            name: \"username\",\n            value: resetPasswordFormData.username,\n            onChange: handleResetPasswordFormData,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: !isEmailVerified && 'Mail-Id'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), !isEmailVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn Reset-password-breeze-small-button px-4\",\n            children: \"Verify\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 30\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: resetPasswordSubmitForm,\n        className: \"form\",\n        children: [isEmailVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"Reset-password-txt-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"emailOtp\",\n              value: resetPasswordFormData.emailOtp,\n              onChange: handleResetPasswordFormData,\n              pattern: \"\\\\d{6}\",\n              required: true,\n              title: \"Only numbers are allowed, and length should be 6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Enter OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"Reset-password-txt-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              required: true,\n              value: resetPasswordFormData.password,\n              onChange: handleResetPasswordFormData,\n              pattern: \"^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\\\d).{8,15}$\",\n              title: \"Password should contain 1 uppercase, 1 digit, 1 Special Character, and length between 8-15.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"New Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"Reset-password-txt-field\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"confirmPassword\",\n              value: resetPasswordFormData.confirmPassword,\n              onChange: handleResetPasswordFormData,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this), errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reset-password-div-for-err-msg\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 25\n        }, this), sucMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reset-password-div-for-suc-msg\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: sucMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: 'flex',\n            gap: '10px'\n          },\n          children: isEmailVerified && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn Reset-password-breeze-button px-4\",\n              children: \"Reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Reset-password-label-already-have\",\n          children: [\"Dont Want to Reset?\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./login\",\n            className: \"Reset-password-anchor-navigate\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 9\n  }, this);\n}\n_s(ResetPasswordForm, \"HeMuDi5Kog4GJHhiNazEN89Gcws=\");\n_c = ResetPasswordForm;\nexport default ResetPasswordForm;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordForm\");","map":{"version":3,"names":["useState","Constants","LoadingBar","UserService","jsxDEV","_jsxDEV","ResetPasswordForm","_s","loadingBar","setLoadingBar","isEmailVerified","setIsEmailVerified","resetPasswordFormData","setResetPasswordFormData","username","emailOtp","password","confirmPassword","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","passwordPatternRegex","resetPasswordFormDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","sucMsgDiv","setSucMsgDiv","sucMsg","setSucMsg","resetPasswordDisplaySucMsg","handleResetPasswordFormData","e","name","value","target","resetPasswordVerifyEmailForm","preventDefault","request","console","log","responseData","verifyMailForResetPassword","error","handleResetPasswordUserError","message","resetPasswordSubmitForm","matchConfirmPassword","test","resetPassword","window","location","href","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","INACTIVE","OTP_NOT_MATCHED","BREEZE_DATABASE_EXCEPTION","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","type","disabled","onChange","required","pattern","title","style","display","gap","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/reset_password_component/ResetPasswordForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './ResetPassword.css';\r\nimport Constants from '../Constants';\r\nimport LoadingBar from '../loading_bar_component/LoadingBar';\r\nimport UserService from '../../Services/user_service/UserService';\r\n\r\nfunction ResetPasswordForm() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [isEmailVerified, setIsEmailVerified] = useState(false);\r\n    const [resetPasswordFormData, setResetPasswordFormData] = useState({\r\n        username: '',\r\n        emailOtp: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n    });\r\n\r\n    //Fields for to display err msg div and label\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n    const passwordPatternRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$/;\r\n\r\n    //JS for to display err msg when validation for pattern fails for inputs\r\n    const resetPasswordFormDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    //Fields for to display success msg div and label\r\n    const [sucMsgDiv, setSucMsgDiv] = useState(false);\r\n    const [sucMsg, setSucMsg] = useState(\"\");\r\n\r\n    //JS for to display suc msg\r\n    const resetPasswordDisplaySucMsg = (errorMessage) => {\r\n        setSucMsg(errorMessage);\r\n        setSucMsgDiv(true);\r\n        setTimeout(() => {\r\n            setSucMsg(\"\");\r\n            setSucMsgDiv(false);\r\n        }, 2000);\r\n    }\r\n\r\n    const handleResetPasswordFormData = (e) => {\r\n        const { name, value } = e.target;\r\n        setResetPasswordFormData({\r\n            ...resetPasswordFormData,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const resetPasswordVerifyEmailForm = async (e) => {\r\n        e.preventDefault();\r\n        setLoadingBar(true);\r\n        const request = {\r\n            username: resetPasswordFormData.username,\r\n        }\r\n        console.log(resetPasswordFormData);\r\n        try {\r\n            const responseData = await UserService.verifyMailForResetPassword(request);\r\n            console.log(responseData);\r\n            setIsEmailVerified(true);\r\n            resetPasswordDisplaySucMsg('OTP Sent to your Mail-Id');\r\n        } catch (error) {\r\n            handleResetPasswordUserError(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n\r\n    const resetPasswordSubmitForm = async (e) => {\r\n        e.preventDefault();\r\n        const matchConfirmPassword = resetPasswordFormData.password === resetPasswordFormData.confirmPassword;\r\n\r\n        if (!passwordPatternRegex.test(resetPasswordFormData.password)) {\r\n            resetPasswordFormDisplayErrMsg(\"Password is not matching the pattern\");\r\n        } else if (!matchConfirmPassword) {\r\n            resetPasswordFormDisplayErrMsg(\"Confirm Password is not matching given Password\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            console.log(resetPasswordFormData);\r\n            const request = {\r\n                username: resetPasswordFormData.username,\r\n                emailOtp: resetPasswordFormData.emailOtp,\r\n                password: resetPasswordFormData.password,\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.resetPassword(request);\r\n                console.log(responseData);\r\n                resetPasswordDisplaySucMsg('Password changed successfully...');\r\n                setTimeout(() => {\r\n                    window.location.href = '/login';\r\n                }, 2000);\r\n            } catch (error) {\r\n                handleResetPasswordUserError(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleResetPasswordUserError = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            resetPasswordFormDisplayErrMsg(\"Please enter valid input fields\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            resetPasswordFormDisplayErrMsg(\"You are not registered\");\r\n        else if (Constants.INACTIVE === errorStatus)\r\n            resetPasswordFormDisplayErrMsg(\"User is inactive\");\r\n        else if (Constants.OTP_NOT_MATCHED === errorStatus)\r\n            resetPasswordFormDisplayErrMsg(\"Please enter correct otp\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            resetPasswordFormDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            resetPasswordFormDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"Reset-password-form-component\">\r\n            {loadingBar && <LoadingBar />}\r\n            <div className=\"Reset-password-form-heading\">\r\n                <h2 className='my-3'>Reset Password</h2>\r\n            </div>\r\n            <div className=\"Reset-password-form\">\r\n                <form onSubmit={resetPasswordVerifyEmailForm} className=\"form\">\r\n                    <div class=\"Reset-password-txt-field\">\r\n                        <input type=\"text\" disabled={isEmailVerified} name=\"username\" value={resetPasswordFormData.username} onChange={handleResetPasswordFormData} required />\r\n                        <span></span>\r\n                        <label>{!isEmailVerified && ('Mail-Id')}</label>\r\n                    </div>\r\n                    {!isEmailVerified && (\r\n                        <div><button type=\"submit\" className=\"btn Reset-password-breeze-small-button px-4\" >Verify</button></div>\r\n                    )}\r\n                </form>\r\n                <form onSubmit={resetPasswordSubmitForm} className=\"form\" >\r\n                    {isEmailVerified && (\r\n                        <div>\r\n                            <div class=\"Reset-password-txt-field\">\r\n                                <input type=\"text\" name=\"emailOtp\" value={resetPasswordFormData.emailOtp} onChange={handleResetPasswordFormData} pattern=\"\\d{6}\" required title='Only numbers are allowed, and length should be 6' />\r\n                                <span></span>\r\n                                <label>Enter OTP</label>\r\n                            </div>\r\n                            <div class=\"Reset-password-txt-field\">\r\n                                <input type=\"password\" name=\"password\" required value={resetPasswordFormData.password} onChange={handleResetPasswordFormData}\r\n                                    pattern=\"^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$\" title='Password should contain 1 uppercase, 1 digit, 1 Special Character, and length between 8-15.' />\r\n                                <span></span>\r\n                                <label>New Password</label>\r\n                            </div>\r\n                            <div class=\"Reset-password-txt-field\">\r\n                                <input type=\"password\" name=\"confirmPassword\" value={resetPasswordFormData.confirmPassword} onChange={handleResetPasswordFormData} required />\r\n                                <span></span>\r\n                                <label>Confirm Password</label>\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                    {errMsgDiv &&\r\n                        <div className=\"Reset-password-div-for-err-msg\">\r\n                            <label>{errMsg}</label>\r\n                        </div>}\r\n                    {sucMsgDiv &&\r\n                        <div className=\"Reset-password-div-for-suc-msg\">\r\n                            <label>{sucMsg}</label>\r\n                        </div>}\r\n                    <div style={{ display: 'flex', gap: '10px' }}>\r\n                        {isEmailVerified && (\r\n                            <div><button type=\"submit\" className=\"btn Reset-password-breeze-button px-4\" >Reset</button></div>\r\n                        )}\r\n                    </div>\r\n                    <div className=\"Reset-password-label-already-have\">\r\n                        Dont Want to Reset?&nbsp;\r\n                        <a href=\"./login\" className=\"Reset-password-anchor-navigate\" >Login</a>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ResetPasswordForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
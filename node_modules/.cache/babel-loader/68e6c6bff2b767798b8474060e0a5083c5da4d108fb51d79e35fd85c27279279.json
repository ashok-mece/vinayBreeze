{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze(15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\exponent_feature_component\\\\trainer_feature_component\\\\create_training_component\\\\CreateTraining.js\",\n  _s = $RefreshSig$();\nimport './CreateTraining.css';\nimport { useEffect, useState } from 'react';\nimport Select from 'react-select';\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\nimport Multiselect from 'multiselect-react-dropdown';\nimport { Button } from 'react-bootstrap';\nimport TrainerService from '../../../../../../Services/exponent_service/TrainerService';\nimport Constants from '../../../../../Constants';\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateTraining() {\n  _s();\n  const [loadingBar, setLoadingBar] = useState(false);\n  const userId = localStorage.getItem(\"breezeUserId\");\n\n  // course code\n  const [course, setCourse] = useState(null);\n  const onSelectCourse = item => {\n    setCourse(item);\n    console.log(course);\n  };\n  const [courseList, setCourseList] = useState([]);\n\n  // technology code\n  const [technologies, setTechnologies] = useState([]);\n  const [technologiesList, setTechnologiesList] = useState([]);\n  const onSelectTechnology = (selectedList, selectedItem) => {\n    setTechnologies([...selectedList]);\n    console.log(technologies);\n  };\n  const onRemoveTechnology = (selectedList, removedItem) => {\n    setTechnologies([...selectedList]);\n    console.log(technologies);\n  };\n\n  // course content code\n  const [courseContent, setCourseContent] = useState(null);\n  const handleCourseContentFile = event => {\n    const file = event.target.files[0];\n    if (file && (file.type === 'application/pdf' || file.type === 'application/msword' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\n      setCourseContent(file);\n    } else {\n      alert('Please select a PDF or Word document');\n      event.target.value = ''; // Clear the file input\n      setCourseContent(null);\n    }\n  };\n\n  // intro video code\n  const [introVideo, setIntroVideo] = useState(null);\n  const handleIntroVideoFile = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('video/')) {\n      setIntroVideo(file);\n    } else {\n      alert('Please select a video file');\n      event.target.value = ''; // Clear the file input\n      setIntroVideo(null);\n    }\n  };\n\n  // corse duration\n  const [courseDuration, setCourseDuration] = useState(0);\n  const handleCourseDurationChange = event => {\n    setCourseDuration(event.target.value);\n  };\n\n  // date and time\n  const [courseStartDateAndTime, setCourseStartDateAndTime] = useState(null);\n  const minDate = new Date();\n  minDate.setDate(minDate.getDate() + 3);\n  const maxDate = new Date();\n  maxDate.setDate(maxDate.getDate() + 17);\n  const isValidDate = current => {\n    return current.isAfter(minDate) && current.isBefore(maxDate);\n  };\n  const handleCourseStartDateChange = date => {\n    setCourseStartDateAndTime(date);\n  };\n  useEffect(() => {\n    const request = {\n      userId: userId\n    };\n    const getTechStackByExponentId = async () => {\n      setLoadingBar(true);\n      try {\n        const responseData = await GlobalService.getTechStackByExponentId(request);\n        console.log(responseData);\n        const jsonResponseData = responseData.map((item, index) => {\n          return {\n            technologyName: item\n          };\n        });\n        console.log(jsonResponseData);\n        setTechnologiesList(jsonResponseData);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    };\n    getTechStackByExponentId();\n    const getAllCourse = async () => {\n      setLoadingBar(true);\n      try {\n        const responseData = await GlobalService.getAllCourse();\n        console.log(responseData);\n        setCourseList(responseData);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    };\n    getAllCourse();\n  }, [userId]);\n  const handleCreateTraining = async () => {\n    console.log(course);\n    console.log(technologies);\n    console.log(technologies.map(tech => tech.technologyName));\n    console.log(courseStartDateAndTime);\n    console.log(courseDuration);\n    if (course === null || course === '') {\n      createTrainingFieldsDisplayErrMsg('Please select one course');\n    } else if (technologies === null || technologies.length === 0) {\n      createTrainingFieldsDisplayErrMsg('Please add your technical stack');\n    } else if (!courseContent) {\n      createTrainingFieldsDisplayErrMsg('Please upload course content');\n    } else if (!introVideo) {\n      createTrainingFieldsDisplayErrMsg('Please upload your 1 minute intro video');\n    } else if (courseDuration > 120 || courseDuration < 30) {\n      createTrainingFieldsDisplayErrMsg('Please give course duration between 30 to 120 (in days)');\n    } else if (courseStartDateAndTime === null) {\n      createTrainingFieldsDisplayErrMsg('Please select start date and time');\n    } else if (courseContent.size > 5 * 1024 * 1024) {\n      createTrainingFieldsDisplayErrMsg('Course content file size exceeds the maximum limit of 5MB');\n    } else if (introVideo.size > 5 * 1024 * 1024) {\n      createTrainingFieldsDisplayErrMsg('Intro video file size exceeds the maximum limit of 5MB');\n    } else {\n      setLoadingBar(true);\n      // Create FormData object\n      const formData = new FormData();\n      formData.append('exponentId', userId);\n      formData.append('courseId', course.courseId);\n      formData.append('courseName', course.courseName);\n      formData.append('technologyList', technologies.map(tech => tech.technologyName));\n      formData.append('courseContentFile', courseContent);\n      formData.append('introVideoFile', introVideo);\n      formData.append('courseDuration', courseDuration);\n      formData.append('courseStartDateAndTime', courseStartDateAndTime);\n      formData.append('sessionDuration', Constants.SESSION_DURATION);\n      console.log(formData);\n      try {\n        const responseData = await TrainerService.createTraining(formData);\n        console.log(responseData);\n        createTrainingFieldsDisplaySucMsg('Training Created Successfully');\n      } catch (error) {\n        handleCreateTrianingErrors(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleCreateTrianingErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) createTrainingFieldsDisplayErrMsg(\"Please enter valid inputs fields\");else if (Constants.EXISTING_COURSE === errorStatus) createTrainingFieldsDisplayErrMsg(\"Already you created training for selected course\");else if (Constants.FILES_NOT_UPLOADED === errorStatus) createTrainingFieldsDisplayErrMsg(\"Files could not uploaded\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) createTrainingFieldsDisplayErrMsg(\"Sorry, Our service is down\");else createTrainingFieldsDisplayErrMsg(\"Could not process your request\");\n  };\n\n  //Fields for to display err msg div and label\n  const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  //JS for to display err msg\n  const createTrainingFieldsDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n  //JS for to display success msg\n  const createTrainingFieldsDisplaySucMsg = errorMessage => {\n    setMessageColor('green');\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n      setMessageColor(Constants.MESSAGE_COLOR);\n    }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\n  };\n  const customCssForMsg = {\n    fontSize: 'medium',\n    fontWeight: '700',\n    color: messageColor\n  };\n  const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\n  const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\n\n  // custom css for course input fields for Select component from react-select\n  const customCssForCourseFlds = {\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isFocused ? childColor : '',\n      color: state.isFocused ? whiteColor : '',\n      ':hover': {\n        backgroundColor: childColor,\n        color: whiteColor\n      }\n    }),\n    control: (provided, state) => ({\n      ...provided\n      // maxWidth: '400px',\n    }),\n    menu: (provided, state) => ({\n      ...provided\n      // maxWidth: '400px',\n    })\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-training\",\n    style: {\n      fontSize: '14px'\n    },\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"training-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Choose Course\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: courseList,\n            getOptionLabel: options => {\n              return options[\"courseName\"];\n            },\n            getOptionValue: options => {\n              return options[\"courseName\"];\n            },\n            onChange: onSelectCourse,\n            placeholder: \"Present Courses\",\n            styles: customCssForCourseFlds\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"technology-multiselect mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Add Technical Stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n            id: \"technology\",\n            options: technologiesList,\n            onSelect: onSelectTechnology,\n            onRemove: onRemoveTechnology,\n            displayValue: \"technologyName\" //technologyName\n            ,\n            placeholder: \"Your Technical Stack\",\n            avoidHighlightFirstOption: true,\n            style: {\n              chips: {\n                background: childColor\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-content-file mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Upload Course Content \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(max size is 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 54\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            id: \"courseContentFile\",\n            accept: \".pdf,.doc,.docx\",\n            onChange: handleCourseContentFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"intro-video-file mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Upload Your Intro Video \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(1 minute) (max size is 5MB)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 56\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            className: \"form-control\",\n            id: \"introVideoFile\",\n            accept: \"video/*\",\n            onChange: handleIntroVideoFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"course-duration mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Course Duration \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(Number of days)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 48\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            min: 30,\n            max: 120,\n            className: \"form-control\",\n            placeholder: \"Duration\",\n            value: courseDuration,\n            onChange: handleCourseDurationChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"date-time mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Select Training Start Date and Time \", /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"(You can select after 3 days to current date)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Datetime, {\n            value: courseStartDateAndTime,\n            onChange: handleCourseStartDateChange,\n            isValidDate: isValidDate,\n            inputProps: {\n              placeholder: 'Select Date and Time',\n              readOnly: true\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: customCssForMsg,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: errMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"* \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 51\n              }, this), \"Daily Session Duration is Fixed to 90 mins.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 29\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 143\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"* \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 51\n              }, this), \"Course Duration Should be Between 30 to 120 days.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"dashboard-button mt-1\",\n            onClick: handleCreateTraining,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateTraining, \"Aoc3Pq43qMxaWTvabZp2RlJro/Q=\");\n_c = CreateTraining;\nexport default CreateTraining;\nvar _c;\n$RefreshReg$(_c, \"CreateTraining\");","map":{"version":3,"names":["useEffect","useState","Select","GlobalService","Multiselect","Button","TrainerService","Constants","Datetime","LoadingBar","jsxDEV","_jsxDEV","CreateTraining","_s","loadingBar","setLoadingBar","userId","localStorage","getItem","course","setCourse","onSelectCourse","item","console","log","courseList","setCourseList","technologies","setTechnologies","technologiesList","setTechnologiesList","onSelectTechnology","selectedList","selectedItem","onRemoveTechnology","removedItem","courseContent","setCourseContent","handleCourseContentFile","event","file","target","files","type","alert","value","introVideo","setIntroVideo","handleIntroVideoFile","startsWith","courseDuration","setCourseDuration","handleCourseDurationChange","courseStartDateAndTime","setCourseStartDateAndTime","minDate","Date","setDate","getDate","maxDate","isValidDate","current","isAfter","isBefore","handleCourseStartDateChange","date","request","getTechStackByExponentId","responseData","jsonResponseData","map","index","technologyName","error","message","getAllCourse","handleCreateTraining","tech","createTrainingFieldsDisplayErrMsg","length","size","formData","FormData","append","courseId","courseName","SESSION_DURATION","createTraining","createTrainingFieldsDisplaySucMsg","handleCreateTrianingErrors","errorStatus","INVALID_REQUEST_FIELD","EXISTING_COURSE","FILES_NOT_UPLOADED","BREEZE_DATABASE_EXCEPTION","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","SET_TIME_OUT_FOR_SUCCESS_MSG","customCssForMsg","fontSize","fontWeight","color","childColor","getComputedStyle","document","documentElement","getPropertyValue","whiteColor","customCssForCourseFlds","option","provided","state","backgroundColor","isFocused","control","menu","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","options","getOptionLabel","getOptionValue","onChange","placeholder","styles","id","onSelect","onRemove","displayValue","avoidHighlightFirstOption","chips","background","accept","min","max","inputProps","readOnly","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/exponent_feature_component/trainer_feature_component/create_training_component/CreateTraining.js"],"sourcesContent":["import './CreateTraining.css';\r\nimport { useEffect, useState } from 'react';\r\nimport Select from 'react-select';\r\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport { Button } from 'react-bootstrap';\r\nimport TrainerService from '../../../../../../Services/exponent_service/TrainerService';\r\nimport Constants from '../../../../../Constants';\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\r\n\r\nfunction CreateTraining() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n\r\n    // course code\r\n    const [course, setCourse] = useState(null);\r\n    const onSelectCourse = (item) => {\r\n        setCourse(item);\r\n        console.log(course);\r\n    }\r\n    const [courseList, setCourseList] = useState([]);\r\n\r\n    // technology code\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [technologiesList, setTechnologiesList] = useState([]);\r\n    const onSelectTechnology = (selectedList, selectedItem) => {\r\n        setTechnologies([...selectedList]);\r\n        console.log(technologies);\r\n    }\r\n    const onRemoveTechnology = (selectedList, removedItem) => {\r\n        setTechnologies([...selectedList]);\r\n        console.log(technologies);\r\n    }\r\n\r\n    // course content code\r\n    const [courseContent, setCourseContent] = useState(null);\r\n    const handleCourseContentFile = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && (file.type === 'application/pdf' || file.type === 'application/msword' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\r\n            setCourseContent(file);\r\n        } else {\r\n            alert('Please select a PDF or Word document');\r\n            event.target.value = ''; // Clear the file input\r\n            setCourseContent(null);\r\n        }\r\n    };\r\n\r\n    // intro video code\r\n    const [introVideo, setIntroVideo] = useState(null);\r\n    const handleIntroVideoFile = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && file.type.startsWith('video/')) {\r\n            setIntroVideo(file);\r\n        } else {\r\n            alert('Please select a video file');\r\n            event.target.value = ''; // Clear the file input\r\n            setIntroVideo(null);\r\n        }\r\n    };\r\n\r\n    // corse duration\r\n    const [courseDuration, setCourseDuration] = useState(0);\r\n    const handleCourseDurationChange = (event) => {\r\n        setCourseDuration(event.target.value);\r\n    }\r\n\r\n    // date and time\r\n    const [courseStartDateAndTime, setCourseStartDateAndTime] = useState(null);\r\n    const minDate = new Date();\r\n    minDate.setDate(minDate.getDate() + 3);\r\n    const maxDate = new Date();\r\n    maxDate.setDate(maxDate.getDate() + 17);\r\n    const isValidDate = (current) => {\r\n        return current.isAfter(minDate) && current.isBefore(maxDate);\r\n    };\r\n    const handleCourseStartDateChange = (date) => {\r\n        setCourseStartDateAndTime(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const request = {\r\n            userId: userId,\r\n        }\r\n\r\n        const getTechStackByExponentId = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getTechStackByExponentId(request);\r\n                console.log(responseData);\r\n                const jsonResponseData = responseData.map((item, index) => {\r\n                    return { technologyName: item }\r\n                });\r\n                console.log(jsonResponseData);\r\n                setTechnologiesList(jsonResponseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getTechStackByExponentId();\r\n\r\n        const getAllCourse = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getAllCourse();\r\n                console.log(responseData);\r\n                setCourseList(responseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getAllCourse();\r\n\r\n    }, [userId]);\r\n\r\n    const handleCreateTraining = async () => {\r\n        console.log(course);\r\n        console.log(technologies);\r\n        console.log(technologies.map(tech => tech.technologyName));\r\n        console.log(courseStartDateAndTime);\r\n        console.log(courseDuration);\r\n\r\n        if (course === null || course === '') {\r\n            createTrainingFieldsDisplayErrMsg('Please select one course');\r\n        } else if (technologies === null || technologies.length === 0) {\r\n            createTrainingFieldsDisplayErrMsg('Please add your technical stack');\r\n        } else if (!courseContent) {\r\n            createTrainingFieldsDisplayErrMsg('Please upload course content');\r\n        } else if (!introVideo) {\r\n            createTrainingFieldsDisplayErrMsg('Please upload your 1 minute intro video');\r\n        } else if (courseDuration > 120 || courseDuration < 30) {\r\n            createTrainingFieldsDisplayErrMsg('Please give course duration between 30 to 120 (in days)');\r\n        } else if (courseStartDateAndTime === null) {\r\n            createTrainingFieldsDisplayErrMsg('Please select start date and time');\r\n        } else if (courseContent.size > 5 * 1024 * 1024) { \r\n            createTrainingFieldsDisplayErrMsg('Course content file size exceeds the maximum limit of 5MB');\r\n        } else if (introVideo.size > 5 * 1024 * 1024) { \r\n            createTrainingFieldsDisplayErrMsg('Intro video file size exceeds the maximum limit of 5MB');\r\n        } else {\r\n            setLoadingBar(true);\r\n            // Create FormData object\r\n            const formData = new FormData();\r\n            formData.append('exponentId', userId);\r\n            formData.append('courseId', course.courseId);\r\n            formData.append('courseName', course.courseName);\r\n            formData.append('technologyList', (technologies.map(tech => tech.technologyName)));\r\n            formData.append('courseContentFile', courseContent);\r\n            formData.append('introVideoFile', introVideo);\r\n            formData.append('courseDuration', courseDuration);\r\n            formData.append('courseStartDateAndTime', courseStartDateAndTime);\r\n            formData.append('sessionDuration', Constants.SESSION_DURATION);\r\n            console.log(formData);\r\n            try {\r\n                const responseData = await TrainerService.createTraining(formData);\r\n                console.log(responseData);\r\n                createTrainingFieldsDisplaySucMsg('Training Created Successfully');\r\n            } catch (error) {\r\n                handleCreateTrianingErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const handleCreateTrianingErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            createTrainingFieldsDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.EXISTING_COURSE === errorStatus)\r\n            createTrainingFieldsDisplayErrMsg(\"Already you created training for selected course\");\r\n        else if (Constants.FILES_NOT_UPLOADED === errorStatus)\r\n            createTrainingFieldsDisplayErrMsg(\"Files could not uploaded\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            createTrainingFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            createTrainingFieldsDisplayErrMsg(\"Could not process your request\"); \r\n    }\r\n\r\n    //Fields for to display err msg div and label\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const createTrainingFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n    //JS for to display success msg\r\n    const createTrainingFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor(Constants.MESSAGE_COLOR);\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n    const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\r\n\r\n    // custom css for course input fields for Select component from react-select\r\n    const customCssForCourseFlds = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            backgroundColor: state.isFocused ? childColor : '',\r\n            color: state.isFocused ? whiteColor : '',\r\n            ':hover': {\r\n                backgroundColor: childColor,\r\n                color: whiteColor,\r\n            },\r\n        }),\r\n        control: (provided, state) => ({\r\n            ...provided,\r\n            // maxWidth: '400px',\r\n        }),\r\n        menu: (provided, state) => ({\r\n            ...provided,\r\n            // maxWidth: '400px',\r\n        }),\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-training\" style={{ fontSize: '14px' }}>\r\n            { loadingBar && <LoadingBar /> }\r\n            <div className=\"training-form\">\r\n                <form>\r\n                    <div className='course'>\r\n                        <label>Choose Course</label>\r\n                        <Select\r\n                            options={courseList}\r\n                            getOptionLabel={(options) => {\r\n                                return options[\"courseName\"];\r\n                            }}\r\n                            getOptionValue={(options) => {\r\n                                return options[\"courseName\"];\r\n                            }}\r\n                            onChange={onSelectCourse}\r\n                            placeholder='Present Courses'\r\n                            styles={customCssForCourseFlds}\r\n                        />\r\n                    </div>\r\n                    <div className='technology-multiselect mt-3'>\r\n                        <label>Add Technical Stack</label>\r\n                        <Multiselect\r\n                            id='technology'\r\n                            options={technologiesList}\r\n                            onSelect={onSelectTechnology}\r\n                            onRemove={onRemoveTechnology}\r\n                            displayValue=\"technologyName\" //technologyName\r\n                            placeholder=\"Your Technical Stack\"\r\n                            avoidHighlightFirstOption={true}\r\n                            style={{\r\n                                chips: {\r\n                                    background: childColor,\r\n                                },\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className=\"course-content-file mt-3\">\r\n                        <label>Upload Course Content <strong>(max size is 5MB)</strong></label>\r\n                        <input\r\n                            type=\"file\"\r\n                            className=\"form-control\"\r\n                            id=\"courseContentFile\"\r\n                            accept=\".pdf,.doc,.docx\"\r\n                            onChange={handleCourseContentFile}\r\n                        />\r\n                    </div>\r\n                    <div className='intro-video-file mt-3'>\r\n                        <label>Upload Your Intro Video <strong>(1 minute) (max size is 5MB)</strong></label>\r\n                        <input\r\n                            type=\"file\"\r\n                            className=\"form-control\"\r\n                            id=\"introVideoFile\"\r\n                            accept=\"video/*\"\r\n                            onChange={handleIntroVideoFile}\r\n                        />\r\n                    </div>\r\n                    <div className='course-duration mt-3'>\r\n                        <label>Course Duration <strong>(Number of days)</strong></label>\r\n                        <input\r\n                            type='number'\r\n                            min={30}\r\n                            max={120}\r\n                            className='form-control'\r\n                            placeholder='Duration'\r\n                            value={courseDuration}\r\n                            onChange={handleCourseDurationChange}\r\n                        />\r\n                    </div>\r\n                    <div className='date-time mt-3'>\r\n                        <label>Select Training Start Date and Time <strong>(You can select after 3 days to current date)</strong></label>\r\n                        <Datetime\r\n                            value={courseStartDateAndTime}\r\n                            onChange={handleCourseStartDateChange}\r\n                            isValidDate={isValidDate}\r\n                            inputProps={{\r\n                                placeholder: 'Select Date and Time',\r\n                                readOnly: true,\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className='mt-2'>\r\n                        {errMsgDiv &&\r\n                            <div style={customCssForMsg}>\r\n                                <label>{errMsg}</label>\r\n                            </div>}\r\n                    </div>\r\n                    <div className='mt-3'>\r\n                        <div style={{fontSize:'12px'}}>\r\n                            <label htmlFor=\"name\"><span style={{ color: 'red' }}>* </span>Daily Session Duration is Fixed to 90 mins.</label> <br />\r\n                            <label htmlFor=\"name\"><span style={{ color: 'red' }}>* </span>Course Duration Should be Between 30 to 120 days.</label>\r\n                        </div>\r\n                        <Button\r\n                            className='dashboard-button mt-1'\r\n                            onClick={handleCreateTraining}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default CreateTraining;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
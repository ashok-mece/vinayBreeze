{"ast":null,"code":"import Constants from\"../../../../Constants\";import AdminService from'../../../../../Services/admin_service/AdminService';import Select from'react-select';import{useEffect,useState}from\"react\";import GlobalService from\"../../../../../Services/global_service/GlobalService\";import'./Course.css';import LoadingBar from\"../../../../loading_bar_component/LoadingBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Course(){const[loadingBar,setLoadingBar]=useState(false);const[messageColor,setMessageColor]=useState(Constants.MESSAGE_COLOR);const[courseName,setCourseName]=useState('');const handleCourseName=e=>setCourseName(e.target.value);const[courseList,setCourseList]=useState([]);useEffect(()=>{const getAllCourse=async()=>{setLoadingBar(true);try{const responseData=await GlobalService.getAllCourse();console.log(responseData);setCourseList(responseData);}catch(error){console.log(error.message);}finally{setLoadingBar(false);}};getAllCourse();},[]);//Fields for to display err msg div and label\nconst[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//JS for to display err msg when validation for pattern fails for inputs\nconst createCourseDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};//JS for to display success msg\nconst createCourseDisplaySucMsg=errorMessage=>{setMessageColor('green');setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);setMessageColor(Constants.MESSAGE_COLOR);},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};const handleCreateCourse=async()=>{if(courseName===null||courseName===''){createCourseDisplayErrMsg('Course should not be null or empty');}else{setLoadingBar(true);const request={courseName:courseName};try{const responseData=await AdminService.createCourse(request);console.log(responseData);createCourseDisplaySucMsg('Course Created Succesfully');}catch(error){handleCreateCourseError(error.message);}finally{setLoadingBar(false);}}};const handleCreateCourseError=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)createCourseDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.EXISTING_COURSE===errorStatus)createCourseDisplayErrMsg(\"Course already existed\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)createCourseDisplayErrMsg(\"Sorry, Our service is down\");else createCourseDisplayErrMsg(\"Could not process your request\");};const childColor=getComputedStyle(document.documentElement).getPropertyValue('--child-color');const whiteColor=getComputedStyle(document.documentElement).getPropertyValue('--white-color');// custom css for course input fields for Select component from react-select\nconst customCssForCourseFlds={option:(provided,state)=>({...provided,backgroundColor:state.isFocused?childColor:'',color:state.isFocused?whiteColor:'',':hover':{backgroundColor:childColor,color:whiteColor}}),control:(provided,state)=>({...provided,maxWidth:'400px'}),menu:(provided,state)=>({...provided,maxWidth:'400px'})};const customCssForMsg={fontSize:'medium',fontWeight:'700',color:messageColor};return/*#__PURE__*/_jsxs(\"div\",{className:\"course\",children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"create-course\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Create Course\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"create-course-input\",value:courseName,onChange:handleCourseName}),errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})}),/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-button\",onClick:handleCreateCourse,children:\"Create\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"view-course mt-5\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"View Courses\"}),/*#__PURE__*/_jsx(Select,{options:courseList,getOptionLabel:options=>{return options[\"courseName\"];},getOptionValue:options=>{return options[\"courseName\"];},placeholder:\"Present Courses\",styles:customCssForCourseFlds})]})]});}export default Course;","map":{"version":3,"names":["Constants","AdminService","Select","useEffect","useState","GlobalService","LoadingBar","jsx","_jsx","jsxs","_jsxs","Course","loadingBar","setLoadingBar","messageColor","setMessageColor","MESSAGE_COLOR","courseName","setCourseName","handleCourseName","e","target","value","courseList","setCourseList","getAllCourse","responseData","console","log","error","message","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","createCourseDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","createCourseDisplaySucMsg","SET_TIME_OUT_FOR_SUCCESS_MSG","handleCreateCourse","request","createCourse","handleCreateCourseError","errorStatus","INVALID_REQUEST_FIELD","EXISTING_COURSE","BREEZE_DATABASE_EXCEPTION","childColor","getComputedStyle","document","documentElement","getPropertyValue","whiteColor","customCssForCourseFlds","option","provided","state","backgroundColor","isFocused","color","control","maxWidth","menu","customCssForMsg","fontSize","fontWeight","className","children","type","onChange","style","onClick","options","getOptionLabel","getOptionValue","placeholder","styles"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/feature_component/admin_feature_component/course_component/Course.js"],"sourcesContent":["import Constants from \"../../../../Constants\";\r\nimport AdminService from '../../../../../Services/admin_service/AdminService';\r\nimport Select from 'react-select';\r\nimport { useEffect, useState } from \"react\";\r\nimport GlobalService from \"../../../../../Services/global_service/GlobalService\";\r\nimport './Course.css';\r\nimport LoadingBar from \"../../../../loading_bar_component/LoadingBar\";\r\n\r\nfunction Course() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n\r\n    const [courseName, setCourseName] = useState('');\r\n    const handleCourseName = (e) => setCourseName(e.target.value);\r\n\r\n    const [courseList, setCourseList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getAllCourse = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getAllCourse();\r\n                console.log(responseData);\r\n                setCourseList(responseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getAllCourse();\r\n    }, []);\r\n\r\n    //Fields for to display err msg div and label\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n    //JS for to display err msg when validation for pattern fails for inputs\r\n    const createCourseDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    //JS for to display success msg\r\n    const createCourseDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor(Constants.MESSAGE_COLOR);\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n\r\n    const handleCreateCourse = async () => {\r\n        if (courseName === null || courseName === '') {\r\n            createCourseDisplayErrMsg('Course should not be null or empty');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                courseName: courseName,\r\n            }\r\n            try {\r\n                const responseData = await AdminService.createCourse(request);\r\n                console.log(responseData);\r\n                createCourseDisplaySucMsg('Course Created Succesfully');\r\n            } catch (error) {\r\n                handleCreateCourseError(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCreateCourseError = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            createCourseDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.EXISTING_COURSE === errorStatus)\r\n            createCourseDisplayErrMsg(\"Course already existed\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            createCourseDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            createCourseDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n    const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\r\n\r\n    // custom css for course input fields for Select component from react-select\r\n    const customCssForCourseFlds = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            backgroundColor: state.isFocused ? childColor : '',\r\n            color: state.isFocused ? whiteColor : '',\r\n            ':hover': {\r\n                backgroundColor: childColor,\r\n                color: whiteColor,\r\n            },\r\n        }),\r\n        control: (provided, state) => ({\r\n            ...provided,\r\n            maxWidth: '400px',\r\n        }),\r\n        menu: (provided, state) => ({\r\n            ...provided,\r\n            maxWidth: '400px',\r\n        }),\r\n    };\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div className='course'>\r\n            { loadingBar && <LoadingBar /> }\r\n            <div className=\"create-course\">\r\n                <label>Create Course</label>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"create-course-input\"\r\n                    value={courseName}\r\n                    onChange={handleCourseName}\r\n                />\r\n                {errMsgDiv &&\r\n                    <div style={customCssForMsg}>\r\n                        <label>{errMsg}</label>\r\n                    </div>}\r\n                <button\r\n                    className='dashboard-button'\r\n                    onClick={handleCreateCourse}\r\n                >\r\n                    Create\r\n                </button>\r\n            </div>\r\n            <div className='view-course mt-5'>\r\n                <label>View Courses</label>\r\n                <Select \r\n                    options={courseList}\r\n                    getOptionLabel={(options) => {\r\n                        return options[\"courseName\"];\r\n                    }}\r\n                    getOptionValue={(options) => {\r\n                        return options[\"courseName\"];\r\n                    }}\r\n                    placeholder='Present Courses'\r\n                    styles={customCssForCourseFlds}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Course;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
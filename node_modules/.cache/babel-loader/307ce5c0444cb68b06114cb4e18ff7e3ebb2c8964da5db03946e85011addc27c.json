{"ast":null,"code":"import{useEffect,useState}from'react';import'./CandidateSearchInterviewSupport.css';import GlobalService from'../../../../../../Services/global_service/GlobalService';import Constants from'../../../../../Constants';import{Button,Card,Col,Container,Modal,Row}from'react-bootstrap';import Multiselect from'multiselect-react-dropdown';import LoadingBar from'../../../../../loading_bar_component/LoadingBar';import{Rating}from'react-simple-star-rating';import Datetime from'react-datetime';import\"react-datetime/css/react-datetime.css\";import CandidateService from\"../../../../../../Services/candidate_service/CandidateService\";import{FaRedo}from'react-icons/fa';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CandidateSearchInterviewSupport(){const[loadingBar,setLoadingBar]=useState(false);const userId=localStorage.getItem(\"breezeUserId\");const childColor=getComputedStyle(document.documentElement).getPropertyValue('--child-color');// const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\n// technology code\nconst[technologies,setTechnologies]=useState([]);const[technologiesList,setTechnologiesList]=useState([]);const onSelectTechnology=(selectedList,selectedItem)=>{setTechnologies([...selectedList]);console.log(selectedItem);};const onRemoveTechnology=(selectedList,removedItem)=>{setTechnologies([...selectedList]);console.log(technologies);console.log(removedItem);};// err msg\nconst[messageColor,setMessageColor]=useState(Constants.MESSAGE_COLOR);const[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//JS for to display err msg\nconst getAllTechnologyDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};useEffect(()=>{getAllTechnology();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const getAllTechnology=async()=>{setLoadingBar(true);try{const responseData=await GlobalService.getAllTechnology();console.log(responseData);if(responseData.length===0){getAllTechnologyDisplayErrMsg('Technical Stack are not found');}else{setTechnologiesList(responseData);}}catch(error){console.log(error.message);handleGetAllTechnologyErrors(error.message);}finally{setLoadingBar(false);}};const handleGetAllTechnologyErrors=errorStatus=>{if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)getAllTechnologyDisplayErrMsg(\"Sorry, Our service is down\");else getAllTechnologyDisplayErrMsg(\"Could not process your request\");};const[page,setPage]=useState(0);const[isLastPage,setIsLastPage]=useState(false);const size=6;const disablePrevious=page===0;const disableNext=isLastPage;const handlePreviousNext=async event=>{const buttonId=event.target.id;if(buttonId==='prevBtn'){if(page>0){setPage(page-1);}}else{setPage(page+1);}};useEffect(()=>{handleSearchInterviewSupportsByTechnologies();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[page]);const[approvedInterviewSupports,setApprovedInterviewSupports]=useState([]);const handleSearchInterviewSupportsByTechnologies=async()=>{console.log(technologies);if(!Array.isArray(technologies)||technologies.length===0){getAllTechnologyDisplayErrMsg(\"please select atleast one technical stack to search Interview Supports\");setApprovedInterviewSupports([]);}else{setLoadingBar(true);const request={technologyList:technologies,page:page,size:size};try{const responseData=await GlobalService.searchInterviewSupportsByTechnologies(request);console.log(responseData);setIsLastPage(responseData.isLastPage);if(responseData.interviewSupportWithInterviewSupporterList.length===0){getAllTechnologyDisplayErrMsg('Interview Supports are not found');setApprovedInterviewSupports([]);}else{setApprovedInterviewSupports(responseData.interviewSupportWithInterviewSupporterList);}}catch(error){console.log(error.message);// handleGetAllTechnologyErrors(error.message);\n}finally{setLoadingBar(false);}}};const[interviewSupportsCard,setInterviewSupportsCard]=useState(0);const[interviewSupportsCardErr,setInterviewSupportsCardErr]=useState('');const handleInterviewSupportsCardErrMsg=(errorMessage,interviewSupportId)=>{setInterviewSupportsCardErr(errorMessage);setInterviewSupportsCard(interviewSupportId);setTimeout(()=>{setInterviewSupportsCardErr('');setInterviewSupportsCard(0);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};const[selectedInterviewSupport,setSelectedInterviewSupport]=useState(null);const handleInterviewSupportBookClick=async interviewSupportId=>{setLoadingBar(true);const request={interviewSupportId:interviewSupportId};try{const responseData=await CandidateService.viewCandidateSelectedInterviewSupport(request);console.log(responseData);setSelectedInterviewSupport(responseData);setShowModal(true);}catch(error){console.log(error.message);handleInterviewSupportBookClickErrors(error.message,interviewSupportId);}finally{setLoadingBar(false);}};const handleInterviewSupportBookClickErrors=(errorStatus,interviewSupportId)=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)handleInterviewSupportsCardErrMsg(\"Inputs are invalid\",interviewSupportId);else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)handleInterviewSupportsCardErrMsg(\"Sorry, Our service is down\",interviewSupportId);else handleInterviewSupportsCardErrMsg(\"Could not process your request\",interviewSupportId);};const[showModal,setShowModal]=useState(false);const handleModalClose=()=>{setShowModal(false);setSelectedInterviewSupport(null);setSelectedInterviewSupportDate(null);setTimeSlotList([]);setSelectedSlots([]);setDescription('');setResume(null);};// date\nconst[selectedInterviewSupportDate,setSelectedInterviewSupportDate]=useState(null);const minDate=new Date();minDate.setDate(minDate.getDate()-1);const maxDate=new Date();maxDate.setDate(maxDate.getDate()+6);const isValidDate=current=>{return current.isAfter(minDate)&&current.isBefore(maxDate);};const handleSelectedInterviewSupportDate=date=>{setSelectedInterviewSupportDate(date);};useEffect(()=>{if(selectedInterviewSupportDate){loadAvailableSlotsOnSelectedDate();}// eslint-disable-next-line react-hooks/exhaustive-deps\n},[selectedInterviewSupportDate]);// time slot code\nconst[timeSlotList,setTimeSlotList]=useState([]);const[selectedSlots,setSelectedSlots]=useState([]);const handleTimeSlotClick=slot=>{if(selectedSlots.includes(slot)){setSelectedSlots(selectedSlots.filter(s=>s!==slot));}else{setSelectedSlots([...selectedSlots,slot]);}console.log(selectedSlots);};const handleTimeSlotReload=()=>{setSelectedSlots([]);};const[description,setDescription]=useState('');const handleDescription=event=>{setDescription(event.target.value);};// resume code\nconst[resume,setResume]=useState(null);const handleResumeFile=event=>{const file=event.target.files[0];if(file&&(file.type==='application/pdf'||file.type==='application/msword'||file.type==='application/vnd.openxmlformats-officedocument.wordprocessingml.document')){setResume(file);}else{alert('Please select a PDF or Word document');event.target.value='';// Clear the file input\nsetResume(null);}};const loadAvailableSlotsOnSelectedDate=async()=>{if(selectedInterviewSupportDate===null){selectedInterviewSupportModalDisplayErrMsg('Please Select a date');}else{setLoadingBar(true);const formData=new FormData();formData.append('interviewSupportId',selectedInterviewSupport.interviewSupport.interviewSupportId);formData.append('bookedDateString',selectedInterviewSupportDate);console.log(formData);try{const responseData=await CandidateService.loadAvailableSlotsOnSelectedDate(formData);console.log(responseData);setTimeSlotList(responseData);}catch(error){console.log(error.message);loadAvailableSlotsOnSelectedDateErrors(error.message);}finally{setLoadingBar(false);}}};const loadAvailableSlotsOnSelectedDateErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Inputs are invalid\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Selected Entity is Not Found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Sorry, Our service is down\");else selectedInterviewSupportModalDisplayErrMsg(\"Could not process your request\");};const handleConfirmBooking=async()=>{if(selectedSlots===null||selectedSlots.length===0){selectedInterviewSupportModalDisplayErrMsg('select slots to book interview support');}// else if (resume && resume.size > 5 * 1024 * 1024) { \n//     selectedInterviewSupportModalDisplayErrMsg('Resume file size exceeds the maximum limit of 5MB');\n// } \nelse if(description.trim()===''){selectedInterviewSupportModalDisplayErrMsg('Job Description is mandatory');}else{setLoadingBar(true);const formData=new FormData();formData.append('interviewSupportId',selectedInterviewSupport.interviewSupport.interviewSupportId);formData.append('candidateId',userId);formData.append('bookedDateString',selectedInterviewSupportDate);formData.append('timeSlotList',selectedSlots.map(slot=>slot.timeSlotId));formData.append('jobDescription',description);formData.append('resume',resume);console.log(formData);try{const responseData=await CandidateService.confirmInterviewSupportBooking(formData);console.log(responseData);selectedInterviewSupportModalDisplaySucMsg('Your Booking has Confirmed, Our Backend Team will Verify Shortly...');}catch(error){console.log(error.message);handleConfirmBookingErrors(error.message);}finally{setLoadingBar(false);}}};const handleConfirmBookingErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.EXISTING_INTERVIEW_SUPPORT===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"You Have Already Booked Slots for Existing Interview Support\");else if(Constants.SLOTS_BLOCKED===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Selected slots are booked or blocked in a while\");else if(Constants.SLOTS_BLOCKED_FOR_CANDIDATE===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Selected slots are already blocked by you for selected date\");else if(Constants.FILES_NOT_UPLOADED===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Files could not uploaded\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)selectedInterviewSupportModalDisplayErrMsg(\"Sorry, Our service is down\");else selectedInterviewSupportModalDisplayErrMsg(\"Could not process your request\");};const[selectedInterviewSupportModalErrMsgDiv,setSelectedInterviewSupportModalErrMsgDiv]=useState(false);const[selectedInterviewSupportModalErrMsg,setSelectedInterviewSupportModalErrMsg]=useState(\"\");//JS for to display err msg\nconst selectedInterviewSupportModalDisplayErrMsg=errorMessage=>{setSelectedInterviewSupportModalErrMsg(errorMessage);setSelectedInterviewSupportModalErrMsgDiv(true);setTimeout(()=>{setSelectedInterviewSupportModalErrMsg(\"\");setSelectedInterviewSupportModalErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};const selectedInterviewSupportModalDisplaySucMsg=errorMessage=>{setMessageColor('green');setSelectedInterviewSupportModalErrMsg(errorMessage);setSelectedInterviewSupportModalErrMsgDiv(true);setTimeout(()=>{setSelectedInterviewSupportModalErrMsg(\"\");setSelectedInterviewSupportModalErrMsgDiv(false);setMessageColor(Constants.MESSAGE_COLOR);handleModalClose();},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};const customCssForMsg={fontSize:'medium',fontWeight:'700',color:messageColor};return/*#__PURE__*/_jsxs(\"div\",{className:\"interview-support-list\",children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"technology-multiselect\",style:{fontSize:'13px'},children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Technical Stack\"}),/*#__PURE__*/_jsxs(Row,{className:\"d-flex justify-content-between flex-wrap\",children:[/*#__PURE__*/_jsx(Col,{xs:12,sm:8,className:\"mb-2\",children:/*#__PURE__*/_jsx(Multiselect,{id:\"technology\",options:technologiesList,onSelect:onSelectTechnology,onRemove:onRemoveTechnology,displayValue:\"technologyName\",placeholder:\"Technical Stack\",avoidHighlightFirstOption:true,style:{chips:{background:childColor}}})}),/*#__PURE__*/_jsx(Col,{xs:12,sm:4,className:\"mb-2\",children:/*#__PURE__*/_jsx(Button,{className:\"search-button-horizontal\",onClick:handleSearchInterviewSupportsByTechnologies,children:\"Search\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"\",style:{display:'flex',flexWrap:'wrap'},children:approvedInterviewSupports.map((item,index)=>/*#__PURE__*/_jsx(Card,{style:{width:'22rem',margin:'0.5rem',fontSize:'13px'},className:\"card\",children:/*#__PURE__*/_jsx(Card.Body,{children:/*#__PURE__*/_jsxs(Card.Text,{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Interview Supporter-Name : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:item.interviewSupporter.userFirstname+\" \"+item.interviewSupporter.userLastname}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Interview Supporter-Experience : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:item.interviewSupporter.userExperience}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Technical-Stack : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:item.interviewSupport.technologyList.map(tech=>tech.technologyName).join(', ')}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{verticalAlign:'middle'},children:\"Rating : \\xA0\"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Rating,{size:20,initialValue:item.interviewSupport.rating,allowFraction:true,fillColor:\"#1b4962\",readonly:true})})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"book-button\",onClick:()=>handleInterviewSupportBookClick(item.interviewSupport.interviewSupportId),children:\"Book\"})})]}),/*#__PURE__*/_jsx(\"div\",{children:interviewSupportsCard===item.interviewSupport.interviewSupportId&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:interviewSupportsCardErr})})})]})})},index))}),approvedInterviewSupports.length!==0&&/*#__PURE__*/_jsxs(\"div\",{className:\"prev-next-div\",children:[/*#__PURE__*/_jsxs(\"button\",{className:\"dashboard-button\",id:\"prevBtn\",onClick:handlePreviousNext,disabled:disablePrevious,children:['< ',\"previous\"]}),/*#__PURE__*/_jsxs(\"button\",{className:\"dashboard-button\",id:\"nextBtn\",style:{marginLeft:'20px'},onClick:handlePreviousNext,disabled:disableNext,children:[\"next\",' >']})]}),showModal&&/*#__PURE__*/_jsx(Modal,{className:\"view-selected-interview-support-modal\",size:\"lg\",show:showModal,onHide:handleModalClose,centered:true,backdrop:\"static\",children:/*#__PURE__*/_jsxs(Container,{className:\"px-5\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{style:{fontSize:'18px'},children:\"Book Interview Support\"})}),/*#__PURE__*/_jsx(Modal.Body,{style:{fontSize:'13px'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"interview-support-and-interview-supporter-data\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"interview-supporter-data\",children:[/*#__PURE__*/_jsx(\"label\",{style:{textDecoration:'underline',fontSize:'16px'},children:\"Interview Supporter Data\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Interview Supporter-Name : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:selectedInterviewSupport.interviewSupporter.userFirstname+\" \"+selectedInterviewSupport.interviewSupporter.userLastname}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Interview Supporter-Experience : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:selectedInterviewSupport.interviewSupporter.userExperience}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Technical-Stack : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:selectedInterviewSupport.interviewSupport.technologyList.map(tech=>tech.technologyName).join(', ')}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{style:{verticalAlign:'middle'},children:\"Rating : \\xA0\"}),/*#__PURE__*/_jsx(\"span\",{children:/*#__PURE__*/_jsx(Rating,{size:20,initialValue:selectedInterviewSupport.interviewSupport.rating,allowFraction:true,fillColor:\"#1b4962\",readonly:true})})]})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"div\",{className:\"select-date mt-3\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[\"Select Date to Book Available slots for Interview Support \",/*#__PURE__*/_jsx(\"strong\",{children:\"(You can select from current date to next 7 days)\"})]}),/*#__PURE__*/_jsx(Datetime,{value:selectedInterviewSupportDate,onChange:handleSelectedInterviewSupportDate,isValidDate:isValidDate,inputProps:{placeholder:'Select Date',readOnly:true},timeFormat:false})]})}),timeSlotList.length!==0&&/*#__PURE__*/_jsxs(\"div\",{className:\"time-slots mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"label-container\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Select Available Time Slots\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"reload-container\",onClick:handleTimeSlotReload,children:[/*#__PURE__*/_jsx(FaRedo,{className:\"reload-icon\"}),/*#__PURE__*/_jsx(\"span\",{className:\"reload-text\",children:\"Uncheck All Slots\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"time-slot-container\",children:timeSlotList.map((item,index)=>/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"time-slot-button \".concat(selectedSlots.includes(item)?'selected':''),onClick:()=>handleTimeSlotClick(item),disabled:item.isBooked,title:item.isBooked?'Slot is Booked':'',children:Constants.formatTime(Constants.convertUserTimezoneTime(item.slotStartTime))+' - '+Constants.formatTime(Constants.convertUserTimezoneTime(item.slotEndTime))},index)}))}),/*#__PURE__*/_jsxs(\"div\",{className:\"description col-12 mt-1\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Job Description is mandatory, If not please mention your Role\"}),/*#__PURE__*/_jsx(\"textarea\",{className:\"form-control\",value:description,onChange:handleDescription,placeholder:\"your job description...\",maxLength:2000})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:selectedInterviewSupportModalErrMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:selectedInterviewSupportModalErrMsg})})})]})}),timeSlotList.length!==0&&/*#__PURE__*/_jsx(Modal.Footer,{children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',gap:'15px'},children:/*#__PURE__*/_jsx(\"button\",{className:\"modal-button\",onClick:handleConfirmBooking,children:\"Confirm Booking\"})})})]})})]});}export default CandidateSearchInterviewSupport;","map":{"version":3,"names":["useEffect","useState","GlobalService","Constants","Button","Card","Col","Container","Modal","Row","Multiselect","LoadingBar","Rating","Datetime","CandidateService","FaRedo","jsx","_jsx","jsxs","_jsxs","CandidateSearchInterviewSupport","loadingBar","setLoadingBar","userId","localStorage","getItem","childColor","getComputedStyle","document","documentElement","getPropertyValue","technologies","setTechnologies","technologiesList","setTechnologiesList","onSelectTechnology","selectedList","selectedItem","console","log","onRemoveTechnology","removedItem","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","getAllTechnologyDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","getAllTechnology","responseData","length","error","message","handleGetAllTechnologyErrors","errorStatus","BREEZE_DATABASE_EXCEPTION","page","setPage","isLastPage","setIsLastPage","size","disablePrevious","disableNext","handlePreviousNext","event","buttonId","target","id","handleSearchInterviewSupportsByTechnologies","approvedInterviewSupports","setApprovedInterviewSupports","Array","isArray","request","technologyList","searchInterviewSupportsByTechnologies","interviewSupportWithInterviewSupporterList","interviewSupportsCard","setInterviewSupportsCard","interviewSupportsCardErr","setInterviewSupportsCardErr","handleInterviewSupportsCardErrMsg","interviewSupportId","selectedInterviewSupport","setSelectedInterviewSupport","handleInterviewSupportBookClick","viewCandidateSelectedInterviewSupport","setShowModal","handleInterviewSupportBookClickErrors","INVALID_REQUEST_FIELD","showModal","handleModalClose","setSelectedInterviewSupportDate","setTimeSlotList","setSelectedSlots","setDescription","setResume","selectedInterviewSupportDate","minDate","Date","setDate","getDate","maxDate","isValidDate","current","isAfter","isBefore","handleSelectedInterviewSupportDate","date","loadAvailableSlotsOnSelectedDate","timeSlotList","selectedSlots","handleTimeSlotClick","slot","includes","filter","s","handleTimeSlotReload","description","handleDescription","value","resume","handleResumeFile","file","files","type","alert","selectedInterviewSupportModalDisplayErrMsg","formData","FormData","append","interviewSupport","loadAvailableSlotsOnSelectedDateErrors","ENTITY_NOT_FOUND","handleConfirmBooking","trim","map","timeSlotId","confirmInterviewSupportBooking","selectedInterviewSupportModalDisplaySucMsg","handleConfirmBookingErrors","EXISTING_INTERVIEW_SUPPORT","SLOTS_BLOCKED","SLOTS_BLOCKED_FOR_CANDIDATE","FILES_NOT_UPLOADED","selectedInterviewSupportModalErrMsgDiv","setSelectedInterviewSupportModalErrMsgDiv","selectedInterviewSupportModalErrMsg","setSelectedInterviewSupportModalErrMsg","SET_TIME_OUT_FOR_SUCCESS_MSG","customCssForMsg","fontSize","fontWeight","color","className","children","style","xs","sm","options","onSelect","onRemove","displayValue","placeholder","avoidHighlightFirstOption","chips","background","onClick","display","flexWrap","item","index","width","margin","Body","Text","interviewSupporter","userFirstname","userLastname","userExperience","tech","technologyName","join","justifyContent","verticalAlign","initialValue","rating","allowFraction","fillColor","readonly","disabled","marginLeft","show","onHide","centered","backdrop","Header","closeButton","Title","textDecoration","onChange","inputProps","readOnly","timeFormat","concat","isBooked","title","formatTime","convertUserTimezoneTime","slotStartTime","slotEndTime","maxLength","Footer","gap"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/feature_component/candidate_feature_component/interview_support/search_interview_support_component/CandidateSearchInterviewSupport.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './CandidateSearchInterviewSupport.css';\r\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\r\nimport Constants from '../../../../../Constants';\r\nimport { Button, Card, Col, Container, Modal, Row } from 'react-bootstrap';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\r\nimport { Rating } from 'react-simple-star-rating';\r\nimport Datetime from 'react-datetime';\r\nimport \"react-datetime/css/react-datetime.css\";\r\nimport CandidateService from \"../../../../../../Services/candidate_service/CandidateService\";\r\nimport { FaRedo } from 'react-icons/fa';\r\n\r\nfunction CandidateSearchInterviewSupport() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n    // const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\r\n\r\n    // technology code\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [technologiesList, setTechnologiesList] = useState([]);\r\n    const onSelectTechnology = (selectedList, selectedItem) => {\r\n        setTechnologies([...selectedList]);\r\n        console.log(selectedItem);\r\n    }\r\n    const onRemoveTechnology = (selectedList, removedItem) => {\r\n        setTechnologies([...selectedList]);\r\n        console.log(technologies);\r\n        console.log(removedItem);\r\n    }\r\n\r\n    // err msg\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const getAllTechnologyDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAllTechnology();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const getAllTechnology = async () => {\r\n        setLoadingBar(true);\r\n        try {\r\n            const responseData = await GlobalService.getAllTechnology();\r\n            console.log(responseData);\r\n            if (responseData.length === 0) {\r\n                getAllTechnologyDisplayErrMsg('Technical Stack are not found');\r\n            } else {\r\n                setTechnologiesList(responseData);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            handleGetAllTechnologyErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    };\r\n\r\n    const handleGetAllTechnologyErrors = (errorStatus) => {\r\n        if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            getAllTechnologyDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            getAllTechnologyDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const [page, setPage] = useState(0);\r\n    const [isLastPage, setIsLastPage] = useState(false);\r\n    const size = 6;\r\n    const disablePrevious = page === 0;\r\n    const disableNext = isLastPage;\r\n    const handlePreviousNext = async (event) => {\r\n        const buttonId = event.target.id;\r\n        if (buttonId === 'prevBtn') {\r\n            if (page > 0) {\r\n                setPage(page - 1);\r\n            }\r\n        } else {\r\n            setPage(page + 1);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleSearchInterviewSupportsByTechnologies();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page]);\r\n\r\n    const [approvedInterviewSupports, setApprovedInterviewSupports] = useState([]);\r\n    const handleSearchInterviewSupportsByTechnologies = async () => {\r\n        console.log(technologies);\r\n        if (!Array.isArray(technologies) || technologies.length === 0) {\r\n            getAllTechnologyDisplayErrMsg(\"please select atleast one technical stack to search Interview Supports\");\r\n            setApprovedInterviewSupports([]);\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                technologyList: technologies,\r\n                page: page,\r\n                size: size,\r\n            }\r\n            try {\r\n                const responseData = await GlobalService.searchInterviewSupportsByTechnologies(request);\r\n                console.log(responseData);\r\n                setIsLastPage(responseData.isLastPage);\r\n                if (responseData.interviewSupportWithInterviewSupporterList.length === 0) {\r\n                    getAllTechnologyDisplayErrMsg('Interview Supports are not found');\r\n                    setApprovedInterviewSupports([]);\r\n                } else {\r\n                    setApprovedInterviewSupports(responseData.interviewSupportWithInterviewSupporterList);\r\n                }\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                // handleGetAllTechnologyErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const [interviewSupportsCard, setInterviewSupportsCard] = useState(0);\r\n    const [interviewSupportsCardErr, setInterviewSupportsCardErr] = useState('');\r\n    const handleInterviewSupportsCardErrMsg = (errorMessage, interviewSupportId) => {\r\n        setInterviewSupportsCardErr(errorMessage);\r\n        setInterviewSupportsCard(interviewSupportId);\r\n        setTimeout(() => {\r\n            setInterviewSupportsCardErr('');\r\n            setInterviewSupportsCard(0);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    const [selectedInterviewSupport, setSelectedInterviewSupport] = useState(null);\r\n    const handleInterviewSupportBookClick = async (interviewSupportId) => {\r\n        setLoadingBar(true);\r\n        const request = {\r\n            interviewSupportId: interviewSupportId,\r\n        }\r\n        try {\r\n            const responseData = await CandidateService.viewCandidateSelectedInterviewSupport(request);\r\n            console.log(responseData);\r\n            setSelectedInterviewSupport(responseData);\r\n            setShowModal(true);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            handleInterviewSupportBookClickErrors(error.message, interviewSupportId);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n\r\n    const handleInterviewSupportBookClickErrors = (errorStatus, interviewSupportId) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            handleInterviewSupportsCardErrMsg(\"Inputs are invalid\", interviewSupportId);\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            handleInterviewSupportsCardErrMsg(\"Sorry, Our service is down\", interviewSupportId);\r\n        else\r\n            handleInterviewSupportsCardErrMsg(\"Could not process your request\", interviewSupportId);\r\n    }\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const handleModalClose = () => {\r\n        setShowModal(false);\r\n        setSelectedInterviewSupport(null);\r\n        setSelectedInterviewSupportDate(null);\r\n        setTimeSlotList([]);\r\n        setSelectedSlots([]);\r\n        setDescription('');\r\n        setResume(null);\r\n    };\r\n\r\n    // date\r\n    const [selectedInterviewSupportDate, setSelectedInterviewSupportDate] = useState(null);\r\n    const minDate = new Date();\r\n    minDate.setDate(minDate.getDate() - 1);\r\n    const maxDate = new Date();\r\n    maxDate.setDate(maxDate.getDate() + 6);\r\n    const isValidDate = (current) => {\r\n        return current.isAfter(minDate) && current.isBefore(maxDate);\r\n    };\r\n    const handleSelectedInterviewSupportDate = (date) => {\r\n        setSelectedInterviewSupportDate(date);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (selectedInterviewSupportDate) {\r\n            loadAvailableSlotsOnSelectedDate();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedInterviewSupportDate]);\r\n\r\n    // time slot code\r\n    const [timeSlotList, setTimeSlotList] = useState([]);\r\n    const [selectedSlots, setSelectedSlots] = useState([]);\r\n    const handleTimeSlotClick = (slot) => {\r\n        if (selectedSlots.includes(slot)) {\r\n            setSelectedSlots(selectedSlots.filter(s => s !== slot));\r\n        } else {\r\n            setSelectedSlots([...selectedSlots, slot]);\r\n        }\r\n        console.log(selectedSlots);\r\n    };\r\n    const handleTimeSlotReload = () => {\r\n        setSelectedSlots([]);\r\n    };\r\n\r\n    const [description, setDescription] = useState('')\r\n    const handleDescription = (event) => {\r\n        setDescription(event.target.value);\r\n    }\r\n\r\n    // resume code\r\n    const [resume, setResume] = useState(null);\r\n    const handleResumeFile = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && (file.type === 'application/pdf' || file.type === 'application/msword' || file.type === 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) {\r\n            setResume(file);\r\n        } else {\r\n            alert('Please select a PDF or Word document');\r\n            event.target.value = ''; // Clear the file input\r\n            setResume(null);\r\n        }\r\n    };\r\n\r\n    const loadAvailableSlotsOnSelectedDate = async () => {\r\n        if (selectedInterviewSupportDate === null) {\r\n            selectedInterviewSupportModalDisplayErrMsg('Please Select a date');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const formData = new FormData();\r\n            formData.append('interviewSupportId', selectedInterviewSupport.interviewSupport.interviewSupportId);\r\n            formData.append('bookedDateString', selectedInterviewSupportDate);\r\n            console.log(formData);\r\n            try {\r\n                const responseData = await CandidateService.loadAvailableSlotsOnSelectedDate(formData);\r\n                console.log(responseData);\r\n                setTimeSlotList(responseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                loadAvailableSlotsOnSelectedDateErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const loadAvailableSlotsOnSelectedDateErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Inputs are invalid\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Selected Entity is Not Found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleConfirmBooking = async () => {\r\n        if (selectedSlots === null || selectedSlots.length === 0) {\r\n            selectedInterviewSupportModalDisplayErrMsg('select slots to book interview support');\r\n        } \r\n        // else if (resume && resume.size > 5 * 1024 * 1024) { \r\n        //     selectedInterviewSupportModalDisplayErrMsg('Resume file size exceeds the maximum limit of 5MB');\r\n        // } \r\n        else if (description.trim() === '') {\r\n            selectedInterviewSupportModalDisplayErrMsg('Job Description is mandatory');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const formData = new FormData();\r\n            formData.append('interviewSupportId', selectedInterviewSupport.interviewSupport.interviewSupportId);\r\n            formData.append('candidateId', userId);\r\n            formData.append('bookedDateString', selectedInterviewSupportDate);\r\n            formData.append('timeSlotList', (selectedSlots.map(slot => slot.timeSlotId)));\r\n            formData.append('jobDescription', description);\r\n            formData.append('resume', resume);\r\n            console.log(formData);\r\n            try {\r\n                const responseData = await CandidateService.confirmInterviewSupportBooking(formData);\r\n                console.log(responseData);\r\n                selectedInterviewSupportModalDisplaySucMsg('Your Booking has Confirmed, Our Backend Team will Verify Shortly...');\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                handleConfirmBookingErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleConfirmBookingErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.EXISTING_INTERVIEW_SUPPORT === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"You Have Already Booked Slots for Existing Interview Support\");\r\n        else if (Constants.SLOTS_BLOCKED === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Selected slots are booked or blocked in a while\");\r\n        else if (Constants.SLOTS_BLOCKED_FOR_CANDIDATE === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Selected slots are already blocked by you for selected date\");\r\n        else if (Constants.FILES_NOT_UPLOADED === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Files could not uploaded\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            selectedInterviewSupportModalDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const [selectedInterviewSupportModalErrMsgDiv, setSelectedInterviewSupportModalErrMsgDiv] = useState(false);\r\n    const [selectedInterviewSupportModalErrMsg, setSelectedInterviewSupportModalErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const selectedInterviewSupportModalDisplayErrMsg = (errorMessage) => {\r\n        setSelectedInterviewSupportModalErrMsg(errorMessage);\r\n        setSelectedInterviewSupportModalErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setSelectedInterviewSupportModalErrMsg(\"\");\r\n            setSelectedInterviewSupportModalErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n    const selectedInterviewSupportModalDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setSelectedInterviewSupportModalErrMsg(errorMessage);\r\n        setSelectedInterviewSupportModalErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setSelectedInterviewSupportModalErrMsg(\"\");\r\n            setSelectedInterviewSupportModalErrMsgDiv(false);\r\n            setMessageColor(Constants.MESSAGE_COLOR);\r\n            handleModalClose();\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div className=\"interview-support-list\">\r\n            {loadingBar && <LoadingBar />}\r\n            <div className='technology-multiselect' style={{ fontSize: '13px' }}>\r\n                <label>Select Technical Stack</label>\r\n                <Row className='d-flex justify-content-between flex-wrap'>\r\n                    <Col xs={12} sm={8} className='mb-2'>\r\n                        <Multiselect\r\n                            id='technology'\r\n                            options={technologiesList}\r\n                            onSelect={onSelectTechnology}\r\n                            onRemove={onRemoveTechnology}\r\n                            displayValue=\"technologyName\"\r\n                            placeholder=\"Technical Stack\"\r\n                            avoidHighlightFirstOption={true}\r\n                            style={{\r\n                                chips: {\r\n                                    background: childColor,\r\n                                },\r\n                            }}\r\n                        />\r\n                    </Col>\r\n                    <Col xs={12} sm={4} className='mb-2'>\r\n                        <Button\r\n                            className='search-button-horizontal'\r\n                            onClick={handleSearchInterviewSupportsByTechnologies}\r\n                        >\r\n                            Search\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n                <div className=''>\r\n                    {errMsgDiv &&\r\n                        <div style={customCssForMsg}>\r\n                            <label>{errMsg}</label>\r\n                        </div>}\r\n                </div>\r\n            </div>\r\n            <div className='' style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                {approvedInterviewSupports.map((item, index) => (\r\n                    <Card key={index} style={{ width: '22rem', margin: '0.5rem', fontSize: '13px' }} className='card'>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <label>Interview Supporter-Name : </label> <span>{item.interviewSupporter.userFirstname + \" \" + item.interviewSupporter.userLastname}</span> <br />\r\n                                <label>Interview Supporter-Experience : </label> <span>{item.interviewSupporter.userExperience}</span> <br />\r\n                                <label>Technical-Stack : </label> <span>{item.interviewSupport.technologyList.map(tech => tech.technologyName).join(', ')}</span> <br />\r\n                                <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n                                    <div>\r\n                                        <label style={{ verticalAlign: 'middle' }}>Rating : &nbsp;</label>\r\n                                        <span>\r\n                                            <Rating\r\n                                                size={20}\r\n                                                initialValue={item.interviewSupport.rating}\r\n                                                allowFraction\r\n                                                fillColor='#1b4962'\r\n                                                readonly={true}\r\n                                            />\r\n                                        </span>\r\n                                    </div>\r\n                                    <div>\r\n                                        <button\r\n                                            className='book-button'\r\n                                            onClick={() => handleInterviewSupportBookClick(item.interviewSupport.interviewSupportId)}\r\n                                        >\r\n                                            Book\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    {interviewSupportsCard === item.interviewSupport.interviewSupportId && (\r\n                                        <div style={customCssForMsg}>\r\n                                            <label>{interviewSupportsCardErr}</label>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n            {approvedInterviewSupports.length !== 0 && (\r\n                <div className='prev-next-div'>\r\n                    <button className='dashboard-button'\r\n                        id='prevBtn'\r\n                        onClick={handlePreviousNext}\r\n                        disabled={disablePrevious}\r\n                    >\r\n                        {'< '}previous\r\n                    </button>\r\n                    <button className='dashboard-button'\r\n                        id='nextBtn'\r\n                        style={{ marginLeft: '20px' }}\r\n                        onClick={handlePreviousNext}\r\n                        disabled={disableNext}\r\n                    >\r\n                        next{' >'}\r\n                    </button>\r\n                </div>\r\n            )}\r\n            {showModal && (\r\n                <Modal className='view-selected-interview-support-modal' size='lg' show={showModal} onHide={handleModalClose} centered backdrop=\"static\">\r\n                    <Container className='px-5'>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title style={{ fontSize: '18px' }}>\r\n                                Book Interview Support\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body style={{ fontSize: '13px' }}>\r\n                            <div className='interview-support-and-interview-supporter-data'>\r\n                                <div className='interview-supporter-data'>\r\n                                    <label style={{ textDecoration: 'underline', fontSize: '16px' }}>Interview Supporter Data</label> <br />\r\n                                    <label>Interview Supporter-Name : </label> <span>{selectedInterviewSupport.interviewSupporter.userFirstname + \" \" + selectedInterviewSupport.interviewSupporter.userLastname}</span> <br />\r\n                                    <label>Interview Supporter-Experience : </label> <span>{selectedInterviewSupport.interviewSupporter.userExperience}</span> <br />\r\n                                    <label>Technical-Stack : </label> <span>{selectedInterviewSupport.interviewSupport.technologyList.map(tech => tech.technologyName).join(', ')}</span> <br />\r\n                                    <div>\r\n                                        <label style={{ verticalAlign: 'middle' }}>Rating : &nbsp;</label>\r\n                                        <span>\r\n                                            <Rating\r\n                                                size={20}\r\n                                                initialValue={selectedInterviewSupport.interviewSupport.rating}\r\n                                                allowFraction\r\n                                                fillColor='#1b4962'\r\n                                                readonly={true}\r\n                                            />\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                                <div>\r\n                                    <div className='select-date mt-3'>\r\n                                        <label>Select Date to Book Available slots for Interview Support <strong>(You can select from current date to next 7 days)</strong></label>\r\n                                        <Datetime\r\n                                            value={selectedInterviewSupportDate}\r\n                                            onChange={handleSelectedInterviewSupportDate}\r\n                                            isValidDate={isValidDate}\r\n                                            inputProps={{\r\n                                                placeholder: 'Select Date',\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            timeFormat={false}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                {timeSlotList.length !== 0 && (\r\n                                    <div className='time-slots mt-3'>\r\n                                        <div className=\"label-container\">\r\n                                            <label>Select Available Time Slots</label>\r\n                                            <div className=\"reload-container\" onClick={handleTimeSlotReload}>\r\n                                                <FaRedo className=\"reload-icon\" />\r\n                                                <span className=\"reload-text\">Uncheck All Slots</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"time-slot-container\" >\r\n                                            {timeSlotList.map((item, index) => (\r\n                                                <div>\r\n                                                    <button\r\n                                                        key={index}\r\n                                                        type='button'\r\n                                                        className={`time-slot-button ${selectedSlots.includes(item) ? 'selected' : ''}`}\r\n                                                        onClick={() => handleTimeSlotClick(item)}\r\n                                                        disabled={item.isBooked}\r\n                                                        title={item.isBooked ? 'Slot is Booked' : ''}\r\n                                                    >\r\n                                                        {Constants.formatTime(Constants.convertUserTimezoneTime(item.slotStartTime)) + ' - ' + Constants.formatTime(Constants.convertUserTimezoneTime(item.slotEndTime))}\r\n                                                    </button>\r\n                                                </div>\r\n                                            ))}\r\n                                        </div>\r\n                                        <div className='description col-12 mt-1'>\r\n                                            <label>Job Description is mandatory, If not please mention your Role</label>\r\n                                            <textarea\r\n                                                className='form-control'\r\n                                                value={description}\r\n                                                onChange={handleDescription}\r\n                                                placeholder=\"your job description...\"\r\n                                                maxLength={2000}\r\n                                            >\r\n                                            </textarea>\r\n                                        </div>\r\n                                        {/* <div className=\"resume-file mt-1\">\r\n                                            <label>Upload Resume (optional)</label>\r\n                                            <input\r\n                                                type=\"file\"\r\n                                                className=\"form-control\"\r\n                                                id=\"resumeFile\"\r\n                                                accept=\".pdf,.doc,.docx\"\r\n                                                onChange={handleResumeFile}\r\n                                            />\r\n                                        </div> */}\r\n                                    </div>\r\n                                )}\r\n                                <div className='mt-2'>\r\n                                    {selectedInterviewSupportModalErrMsgDiv &&\r\n                                        <div style={customCssForMsg}>\r\n                                            <label>{selectedInterviewSupportModalErrMsg}</label>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                        {timeSlotList.length !== 0 && (\r\n                            <Modal.Footer>\r\n                                <div style={{ display: 'flex', gap: '15px' }}>\r\n                                    <button\r\n                                        className='modal-button'\r\n                                        onClick={handleConfirmBooking}\r\n                                    >\r\n                                        Confirm Booking\r\n                                    </button>\r\n                                </div>\r\n                            </Modal.Footer>\r\n                        )}\r\n                    </Container>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandidateSearchInterviewSupport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze (15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\sidebar_component\\\\Sidebar.js\",\n  _s = $RefreshSig$();\nimport './Sidebar.css';\nimport { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\nimport React, { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport Constants from '../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar() {\n  _s();\n  const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\n  const [expandedMenus, setExpandedMenus] = useState({});\n  const location = useLocation();\n  const userType = localStorage.getItem('breezeUserType');\n  const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\n  const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\n  const toggleMenu = menuName => {\n    setExpandedMenus(prevState => ({\n      ...prevState,\n      [menuName]: !prevState[menuName]\n    }));\n  };\n\n  // Define menu items based on userType  \n  const getMenuItems = () => {\n    switch (userType) {\n      case Constants.ADMIN:\n        return [{\n          path: \"/dashboard\",\n          name: \"Home\",\n          icon: \"home\"\n        }, {\n          path: \"/dashboard/create-admin\",\n          name: \"Create Admin\",\n          icon: \"edit\"\n        }, {\n          path: \"/dashboard/admin-users\",\n          name: \"Users\",\n          icon: \"users\"\n        }, {\n          path: \"/dashboard/technology\",\n          name: \"Technical Stack\",\n          icon: \"microchip\"\n        }, {\n          name: \"Training\",\n          icon: \"book\",\n          submenu: [{\n            path: \"/dashboard/course\",\n            name: \"Course\",\n            icon: \"book\"\n          }, {\n            path: \"/dashboard/created-trainings\",\n            name: \"Created Trainings\",\n            icon: \"check-circle\"\n          }, {\n            path: \"/dashboard/add-sample\",\n            name: \"Add Sample Intro Video\",\n            icon: \"video-slash\"\n          }, {\n            path: \"/dashboard/admin-enrolled-trainings\",\n            name: \"Enrolled Trainings\",\n            icon: \"registered\"\n          }, {\n            path: \"/dashboard/admin-started-trainings\",\n            name: \"Started Trainings\",\n            icon: \"arrow-right\"\n          }, {\n            path: \"/dashboard/admin-completed-trainings\",\n            name: \"Completed Trainings\",\n            icon: \"history\"\n          }]\n        }, {\n          name: \"Interview Support\",\n          icon: \"chalkboard-teacher\",\n          submenu: [{\n            path: \"/dashboard/created-interview-supports\",\n            name: \"Created Interview Supports\",\n            icon: \"check-circle\"\n          }, {\n            path: \"/dashboard/updated-interview-supports\",\n            name: \"Updated Interview Supports\",\n            icon: \"pen\"\n          }, {\n            path: \"/dashboard/admin-booked-interview-supports\",\n            name: \"Booked Interview Supports\",\n            icon: \"bookmark\"\n          }, {\n            path: \"/dashboard/admin-rescheduled-interview-supports\",\n            name: \"Rescheduled Bookings\",\n            icon: \"calendar-plus\"\n          }, {\n            path: \"/dashboard/admin-today-interview-support-bookings\",\n            name: \"Today Interview Support Bookings\",\n            icon: \"calendar-alt\"\n          }, {\n            path: \"/dashboard/admin-completed-interview-support-bookings\",\n            name: \"Completed Interview Support Bookings\",\n            icon: \"history\"\n          }]\n        }, {\n          name: \"Job Support\",\n          icon: \"book\",\n          submenu: [{\n            path: \"/dashboard/created-job-supports\",\n            name: \"Created Job Supports\",\n            icon: \"check-circle\"\n          }, {\n            path: \"/dashboard/updated-job-supports\",\n            name: \"Updated Job Supports\",\n            icon: \"pen\"\n          }, {\n            path: \"/dashboard/admin-booked-job-supports\",\n            name: \"Booked Job Supports\",\n            icon: \"bookmark\"\n          }, {\n            path: \"/dashboard/admin-rescheduled-job-supports\",\n            name: \"Rescheduled Bookings\",\n            icon: \"calendar-plus\"\n          }, {\n            path: \"/dashboard/admin-stopped-job-supports\",\n            name: \"Stopped Bookings\",\n            icon: \"stop-circle\"\n          }, {\n            path: \"/dashboard/admin-continued-job-supports\",\n            name: \"Continued Bookings\",\n            icon: \"play\"\n          }, {\n            path: \"/dashboard/admin-assigned-job-supports\",\n            name: \"Assigned Bookings\",\n            icon: \"file-alt\"\n          }, {\n            path: \"/dashboard/admin-today-job-support-bookings\",\n            name: \"Today Job Support Bookings\",\n            icon: \"calendar-alt\"\n          }, {\n            path: \"/dashboard/admin-completed-job-support-bookings\",\n            name: \"Completed Job Support Bookings\",\n            icon: \"history\"\n          }]\n        }\n        // Add more admin specific menu items if needed\n        ];\n      case Constants.EXPONENT:\n        switch (selectedExponentType) {\n          case Constants.TRAINER:\n            return [{\n              path: \"/dashboard\",\n              name: \"Home\",\n              icon: \"home\"\n            }, {\n              path: \"/dashboard/create-training\",\n              name: \"Create Training\",\n              icon: \"edit\"\n            }, {\n              path: \"/dashboard/trainer-rejected-trainings\",\n              name: \"Rejected Trainings\",\n              icon: \"times\"\n            }, {\n              path: \"/dashboard/trainer-approved-trainings\",\n              name: \"Approved Trainings\",\n              icon: \"check\"\n            }, {\n              path: \"/dashboard/trainer-started-trainings\",\n              name: \"Scheduled Trainings\",\n              icon: \"arrow-right\"\n            }, {\n              path: \"/dashboard/trainer-completed-trainings\",\n              name: \"Completed Trainings\",\n              icon: \"history\"\n            }\n            // Add trainer specific menu items\n            ];\n          case Constants.INTERVIEW_SUPPORTER:\n            return [{\n              path: \"/dashboard\",\n              name: \"Home\",\n              icon: \"home\"\n            }, {\n              path: \"/dashboard/create-interview-support\",\n              name: \"Create Interview Support\",\n              icon: \"edit\"\n            }, {\n              path: \"/dashboard/exponent-rejected-interview-support\",\n              name: \"Rejected Interview Support\",\n              icon: \"times\"\n            }, {\n              path: \"/dashboard/exponent-approved-interview-support\",\n              name: \"Approved Interview Support\",\n              icon: \"check\"\n            }, {\n              path: \"/dashboard/interview-supporter-bookings\",\n              name: \"Interview Support Bookings\",\n              icon: \"book-reader\"\n            }, {\n              path: \"/dashboard/interview-supporter-today-bookings\",\n              name: \"Scheduled Bookings\",\n              icon: \"arrow-right\"\n            }, {\n              path: \"/dashboard/interview-supporter-completed-bookings\",\n              name: \"Completed Bookings\",\n              icon: \"history\"\n            }];\n          case Constants.JOB_SUPPORTER:\n            return [{\n              path: \"/dashboard\",\n              name: \"Home\",\n              icon: \"home\"\n            }, {\n              path: \"/dashboard/create-job-support\",\n              name: \"Create Job Support\",\n              icon: \"edit\"\n            }, {\n              path: \"/dashboard/exponent-rejected-job-support\",\n              name: \"Rejected Job Support\",\n              icon: \"times\"\n            }, {\n              path: \"/dashboard/exponent-approved-job-support\",\n              name: \"Approved Job Support\",\n              icon: \"check\"\n            }, {\n              path: \"/dashboard/job-supporter-bookings\",\n              name: \"Job Support Bookings\",\n              icon: \"book-reader\"\n            }, {\n              path: \"/dashboard/job-supporter-today-bookings\",\n              name: \"Scheduled Bookings\",\n              icon: \"arrow-right\"\n            }, {\n              path: \"/dashboard/job-supporter-completed-bookings\",\n              name: \"Completed Bookings\",\n              icon: \"history\"\n            }];\n          default:\n            return [];\n        }\n      case Constants.CANDIDATE:\n        return [{\n          path: \"/dashboard\",\n          name: \"Home\",\n          icon: \"home\"\n        }, {\n          name: \"Training\",\n          icon: \"book\",\n          submenu: [{\n            path: \"/dashboard/candidate-search-training\",\n            name: \"Search Trainings\",\n            icon: \"search\"\n          }, {\n            path: \"/dashboard/enrolled-trainings\",\n            name: \"Enrolled Trainings\",\n            icon: \"registered\"\n          }, {\n            path: \"/dashboard/candidate-started-trainings\",\n            name: \"Scheduled Trainings\",\n            icon: \"arrow-right\"\n          }, {\n            path: \"/dashboard/candidate-completed-trainings\",\n            name: \"Completed Trainings\",\n            icon: \"history\"\n          }]\n        }, {\n          name: \"Interview Support\",\n          icon: \"chalkboard-teacher\",\n          submenu: [{\n            path: \"/dashboard/candidate-search-interview-supports\",\n            name: \"Search Interview Supports\",\n            icon: \"search\"\n          }, {\n            path: \"/dashboard/candidate-interview-support-bookings\",\n            name: \"Interview Support Bookings\",\n            icon: \"book-reader\"\n          }, {\n            path: \"/dashboard/candidate-today-interview-support-bookings\",\n            name: \"Scheduled Bookings\",\n            icon: \"arrow-right\"\n          }, {\n            path: \"/dashboard/candidate-completed-interview-support-bookings\",\n            name: \"Completed Bookings\",\n            icon: \"history\"\n          }]\n        }, {\n          name: \"Job Support\",\n          icon: \"book\",\n          submenu: [{\n            path: \"/dashboard/candidate-search-job-supports\",\n            name: \"Search Job Supports\",\n            icon: \"search\"\n          }, {\n            path: \"/dashboard/candidate-job-support-bookings\",\n            name: \"Job Support Bookings\",\n            icon: \"book-reader\"\n          }, {\n            path: \"/dashboard/candidate-today-job-support-bookings\",\n            name: \"Scheduled Bookings\",\n            icon: \"arrow-right\"\n          }, {\n            path: \"/dashboard/candidate-completed-job-support-bookings\",\n            name: \"Completed Bookings\",\n            icon: \"history\"\n          }]\n        }\n        // Add candidate specific menu items\n        ];\n      default:\n        return [];\n    }\n  };\n  const sidebarMenuItems = getMenuItems();\n  useEffect(() => {\n    const pathname = location.pathname;\n    setActiveSidebarMenuItem(pathname);\n  }, [location]);\n\n  // exponent type change code\n  const handleExponentTypeChange = event => {\n    const selectedValue = event.target.value;\n    localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\n    window.location.href = '/dashboard';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CDBSidebar, {\n      className: \"app-bg-color\",\n      children: [/*#__PURE__*/_jsxDEV(CDBSidebarHeader, {\n        prefix: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa fa-bars\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 43\n        }, this),\n        children: userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"sidebar-exponent-dropdown\",\n          value: selectedExponentType,\n          onChange: handleExponentTypeChange,\n          style: {\n            cursor: 'pointer'\n          },\n          children: exponentTypeList.map((item, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            className: \"sidebar-exponent-dropdown-option\",\n            value: item,\n            children: item\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CDBSidebarContent, {\n        children: /*#__PURE__*/_jsxDEV(CDBSidebarMenu, {\n          children: sidebarMenuItems.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: item.submenu ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(CDBNavLink, {\n                to: \"#\",\n                className: \"nav-link\",\n                onClick: () => toggleMenu(item.name),\n                children: /*#__PURE__*/_jsxDEV(CDBSidebarMenuItem, {\n                  icon: item.icon,\n                  iconSize: \"lg\",\n                  className: `sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`,\n                  children: [item.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: `fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`,\n                    style: {\n                      float: 'right',\n                      marginTop: '5px',\n                      marginRight: '5px'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 423,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 41\n              }, this), expandedMenus[item.name] && item.submenu.map((subitem, subindex) => /*#__PURE__*/_jsxDEV(CDBNavLink, {\n                to: subitem.path,\n                className: \"nav-link\",\n                children: /*#__PURE__*/_jsxDEV(CDBSidebarMenuItem, {\n                  icon: subitem.icon,\n                  iconSize: \"lg\",\n                  className: `sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`,\n                  children: subitem.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 53\n                }, this)\n              }, subindex, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(CDBNavLink, {\n              to: item.path,\n              className: \"nav-link\",\n              children: /*#__PURE__*/_jsxDEV(CDBSidebarMenuItem, {\n                icon: item.icon,\n                iconSize: \"lg\",\n                className: `sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`,\n                children: item.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 37\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 395,\n    columnNumber: 9\n  }, this);\n}\n_s(Sidebar, \"2exUW6kwWYZkelMCbVNsPJCKxCY=\", false, function () {\n  return [useLocation];\n});\n_c = Sidebar;\nexport default Sidebar;\n\n// with sub mneu\n// import './Sidebar.css';\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import Constants from '../../Constants';\n\n// function Sidebar() {\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\n//     const [expandedMenus, setExpandedMenus] = useState({});\n//     const location = useLocation();\n//     const userType = localStorage.getItem('breezeUserType');\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\n\n//     const toggleMenu = (menuName) => {\n//         setExpandedMenus(prevState => ({\n//             ...prevState,\n//             [menuName]: !prevState[menuName]\n//         }));\n//     };\n\n//     const getMenuItems = () => {\n//         switch (userType) {\n//             case Constants.ADMIN:\n//                 return [\n//                     { path: \"/dashboard\", name: \"Home\", icon: \"home\" },\n//                     {\n//                         name: \"Training\",\n//                         icon: \"book\",\n//                         submenu: [\n//                             { path: \"/dashboard/technology\", name: \"Technology\", icon: \"th-large\" },\n//                             { path: \"/dashboard/course\", name: \"Course\", icon: \"sticky-note\" },\n//                             { path: \"/dashboard/created-trainings\", name: \"Created Trainings\", icon: \"th-large\" },\n//                             { path: \"/dashboard/add-sample\", name: \"Add Sample Intro Video\", icon: \"sticky-note\" },\n//                             { path: \"/dashboard/admin-enrolled-trainings\", name: \"Enrolled Trainings\", icon: \"th-large\" }\n//                         ]\n//                     },\n//                     // Add more admin specific menu items if needed\n//                 ];\n//             // Add other user types similarly\n//             default:\n//                 return [];\n//         }\n//     };\n\n//     const sidebarMenuItems = getMenuItems();\n\n//     useEffect(() => {\n//         const pathname = location.pathname;\n//         setActiveSidebarMenuItem(pathname);\n//     }, [location]);\n\n//     const handleExponentTypeChange = (event) => {\n//         const selectedValue = event.target.value;\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\n//         window.location.href = '/dashboard';\n//     };\n\n//     return (\n//         <div>\n//             <CDBSidebar className='app-bg-color'>\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\n//                             {exponentTypeList.map((item, index) => (\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\n//                             ))}\n//                         </select>\n//                     )}\n//                 </CDBSidebarHeader>\n//                 <CDBSidebarContent>\n//                     <CDBSidebarMenu>\n//                         {sidebarMenuItems.map((item, index) => (\n//                             <React.Fragment key={index}>\n//                                 {item.submenu ? (\n//                                     <div>\n//                                         <CDBNavLink\n//                                             to=\"#\"\n//                                             className=\"nav-link\"\n//                                             onClick={() => toggleMenu(item.name)}\n//                                         >\n//                                             <CDBSidebarMenuItem\n//                                                 icon={item.icon}\n//                                                 iconSize='lg'\n//                                                 className={`sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`}\n//                                             >\n//                                                 {item.name}\n//                                                 <i className={`fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`} style={{ float: 'right' }} />\n//                                             </CDBSidebarMenuItem>\n//                                         </CDBNavLink>\n//                                         {expandedMenus[item.name] && (\n//                                             item.submenu.map((subitem, subindex) => (\n//                                                 <CDBNavLink\n//                                                     key={subindex}\n//                                                     to={subitem.path}\n//                                                     className=\"nav-link\"\n//                                                 >\n//                                                     <CDBSidebarMenuItem\n//                                                         icon={subitem.icon}\n//                                                         iconSize='lg'\n//                                                         className={`sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`}\n//                                                     >\n//                                                         {subitem.name}\n//                                                     </CDBSidebarMenuItem>\n//                                                 </CDBNavLink>\n//                                             ))\n//                                         )}\n//                                     </div>\n//                                 ) : (\n//                                     <CDBNavLink\n//                                         to={item.path}\n//                                         className=\"nav-link\"\n//                                     >\n//                                         <CDBSidebarMenuItem\n//                                             icon={item.icon}\n//                                             iconSize='lg'\n//                                             className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\n//                                         >\n//                                             {item.name}\n//                                         </CDBSidebarMenuItem>\n//                                     </CDBNavLink>\n//                                 )}\n//                             </React.Fragment>\n//                         ))}\n//                     </CDBSidebarMenu>\n//                 </CDBSidebarContent>\n//             </CDBSidebar>\n//         </div>\n//     );\n// }\n\n// export default Sidebar;\n\n// without sub menu\n// import './Sidebar.css';\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\n// import React, { useEffect, useState } from 'react';\n// import { useLocation } from 'react-router-dom';\n// import Constants from '../../Constants';\n\n// function Sidebar() {\n\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\n//     const location = useLocation();\n//     const userType = localStorage.getItem('breezeUserType');\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\n\n//     // Define menu items based on userType\n//     const getMenuItems = () => {\n//         switch (userType) {\n//             case Constants.ADMIN:\n//                 return [\n//                     {\n//                         path: \"/dashboard\",\n//                         name: \"Home\",\n//                         icon: \"home\",\n//                     },\n//                     {\n//                         path: \"/dashboard/create-admin\",\n//                         name: \"Create Admin\",\n//                         icon: \"edit\",\n//                     },\n//                     {\n//                         path: \"/dashboard/technology\",\n//                         name: \"Technology\",\n//                         icon: \"microchip\",\n//                     },\n//                     {\n//                         path: \"/dashboard/course\",\n//                         name: \"Course\",\n//                         icon: \"book\",\n//                     },\n//                     {\n//                         path: \"/dashboard/created-trainings\",\n//                         name: \"Created Trainings\",\n//                         icon: \"check-circle\",\n//                     },\n//                     {\n//                         path: \"/dashboard/add-sample\",\n//                         name: \"Add Sample Intro Video\",\n//                         icon: \"video-slash\",\n//                     },\n//                     {\n//                         path: \"/dashboard/admin-enrolled-trainings\",\n//                         name: \"Enrolled Trainings\",\n//                         icon: \"registered\",\n//                     },\n//                     {\n//                         path: \"/dashboard/admin-started-trainings\",\n//                         name: \"Started Trainings\",\n//                         icon: \"arrow-right\",\n//                     },\n//                     {\n//                         path: \"/dashboard/admin-completed-trainings\",\n//                         name: \"Completed Trainings\",\n//                         icon: \"history\",\n//                     },\n//                     // Add more admin specific menu items if needed\n//                 ];\n//             case Constants.EXPONENT:\n//                 switch (selectedExponentType) {\n//                     case Constants.TRAINER:\n//                         return [\n//                             {\n//                                 path: \"/dashboard\",\n//                                 name: \"Home\",\n//                                 icon: \"home\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/create-training\",\n//                                 name: \"Create Training\",\n//                                 icon: \"edit\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-rejected-trainings\",\n//                                 name: \"Rejected Trainings\",\n//                                 icon: \"times\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-approved-trainings\",\n//                                 name: \"Approved Training\",\n//                                 icon: \"check\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-started-trainings\",\n//                                 name: \"Scheduled Trainings\",\n//                                 icon: \"arrow-right\",\n//                             },\n//                             {\n//                                 path: \"/dashboard/trainer-completed-trainings\",\n//                                 name: \"Completed Training\",\n//                                 icon: \"history\",\n//                             },\n//                             // Add trainer specific menu items\n//                         ];\n//                     case Constants.JOB_SUPPORTER:\n//                         return [\n//                             {\n//                                 path: \"/dashboard\",\n//                                 name: \"Home\",\n//                                 icon: \"home\",\n//                             },\n//                         ];\n//                     case Constants.INTERVIEW_SUPPORTER:\n//                         return [\n//                             {\n//                                 path: \"/dashboard\",\n//                                 name: \"Home\",\n//                                 icon: \"home\",\n//                             },\n//                         ];\n//                     default:\n//                         return [];\n//                 }\n//             case Constants.CANDIDATE:\n//                 return [\n//                     {\n//                         path: \"/dashboard\",\n//                         name: \"Home\",\n//                         icon: \"home\",\n//                     },\n//                     {\n//                         path: \"/dashboard/candidate-search-training\",\n//                         name: \"Search Trainings\",\n//                         icon: \"search\",\n//                     },\n//                     {\n//                         path: \"/dashboard/enrolled-trainings\",\n//                         name: \"Enrolled Trainings\",\n//                         icon: \"registered\",\n//                     },\n//                     {\n//                         path: \"/dashboard/candidate-started-trainings\",\n//                         name: \"Scheduled Trainings\",\n//                         icon: \"arrow-right\",\n//                     },\n//                     {\n//                         path: \"/dashboard/candidate-completed-trainings\",\n//                         name: \"Completed Trainings\",\n//                         icon: \"history\",\n//                     },\n//                     // Add candidate specific menu items\n//                 ];\n//             default:\n//                 return [];\n//         }\n//     };\n\n//     const sidebarMenuItems = getMenuItems();\n\n//     useEffect(() => {\n//         const pathname = location.pathname;\n//         setActiveSidebarMenuItem(pathname);\n//     }, [location]);\n\n//     // exponent type change code\n//     const handleExponentTypeChange = (event) => {\n//         const selectedValue = event.target.value;\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\n//         window.location.href = '/dashboard';\n//     };\n\n//     return (\n//         <div>\n//             <CDBSidebar className='app-bg-color' >\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\n//                             {exponentTypeList.map((item, index) => (\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\n//                             ))}\n//                         </select>\n//                     )}\n//                 </CDBSidebarHeader>\n//                 <CDBSidebarContent>\n//                     <CDBSidebarMenu>\n//                         {\n//                             sidebarMenuItems.map((item, index) => (\n//                                 <CDBNavLink\n//                                     to={item.path} className=\"nav-link\"\n//                                 >\n//                                     <CDBSidebarMenuItem\n//                                         key={index}\n//                                         icon={item.icon}\n//                                         iconSize='lg'\n//                                         className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\n//                                     >\n//                                         {item.name}\n//                                     </CDBSidebarMenuItem>\n//                                 </CDBNavLink>\n//                             ))\n//                         }\n//                     </CDBSidebarMenu>\n//                 </CDBSidebarContent>\n//             </CDBSidebar>\n//         </div>\n//     );\n\n// }\n\n// export default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["CDBNavLink","CDBSidebar","CDBSidebarContent","CDBSidebarHeader","CDBSidebarMenu","CDBSidebarMenuItem","React","useEffect","useState","useLocation","Constants","jsxDEV","_jsxDEV","Sidebar","_s","activeSidebarMenuItem","setActiveSidebarMenuItem","expandedMenus","setExpandedMenus","location","userType","localStorage","getItem","exponentTypeList","JSON","parse","selectedExponentType","toggleMenu","menuName","prevState","getMenuItems","ADMIN","path","name","icon","submenu","EXPONENT","TRAINER","INTERVIEW_SUPPORTER","JOB_SUPPORTER","CANDIDATE","sidebarMenuItems","pathname","handleExponentTypeChange","event","selectedValue","target","value","setItem","window","href","children","className","prefix","fileName","_jsxFileName","lineNumber","columnNumber","onChange","style","cursor","map","item","index","Fragment","to","onClick","iconSize","float","marginTop","marginRight","subitem","subindex","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/sidebar_component/Sidebar.js"],"sourcesContent":["import './Sidebar.css';\r\nimport { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport Constants from '../../Constants';\r\n\r\nfunction Sidebar() {\r\n\r\n    const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\r\n    const [expandedMenus, setExpandedMenus] = useState({});\r\n    const location = useLocation();\r\n    const userType = localStorage.getItem('breezeUserType');\r\n    const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\r\n    const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\r\n\r\n    const toggleMenu = (menuName) => {\r\n        setExpandedMenus(prevState => ({\r\n            ...prevState,\r\n            [menuName]: !prevState[menuName]\r\n        }));\r\n    };\r\n\r\n    // Define menu items based on userType  \r\n    const getMenuItems = () => {\r\n        switch (userType) {\r\n            case Constants.ADMIN:\r\n                return [\r\n                    {\r\n                        path: \"/dashboard\",\r\n                        name: \"Home\",\r\n                        icon: \"home\",\r\n                    },\r\n                    {\r\n                        path: \"/dashboard/create-admin\",\r\n                        name: \"Create Admin\",\r\n                        icon: \"edit\",\r\n                    },\r\n                    {\r\n                        path: \"/dashboard/admin-users\",\r\n                        name: \"Users\",\r\n                        icon: \"users\",\r\n                    },\r\n                    {\r\n                        path: \"/dashboard/technology\",\r\n                        name: \"Technical Stack\",\r\n                        icon: \"microchip\",\r\n                    },\r\n                    {\r\n                        name: \"Training\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/course\",\r\n                                name: \"Course\",\r\n                                icon: \"book\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/created-trainings\",\r\n                                name: \"Created Trainings\",\r\n                                icon: \"check-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/add-sample\",\r\n                                name: \"Add Sample Intro Video\",\r\n                                icon: \"video-slash\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-enrolled-trainings\",\r\n                                name: \"Enrolled Trainings\",\r\n                                icon: \"registered\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-started-trainings\",\r\n                                name: \"Started Trainings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-completed-trainings\",\r\n                                name: \"Completed Trainings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Interview Support\",\r\n                        icon: \"chalkboard-teacher\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/created-interview-supports\",\r\n                                name: \"Created Interview Supports\",\r\n                                icon: \"check-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/updated-interview-supports\",\r\n                                name: \"Updated Interview Supports\",\r\n                                icon: \"pen\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-booked-interview-supports\",\r\n                                name: \"Booked Interview Supports\", \r\n                                icon: \"bookmark\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-rescheduled-interview-supports\",\r\n                                name: \"Rescheduled Bookings\", \r\n                                icon: \"calendar-plus\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-today-interview-support-bookings\",\r\n                                name: \"Today Interview Support Bookings\",\r\n                                icon: \"calendar-alt\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-completed-interview-support-bookings\",\r\n                                name: \"Completed Interview Support Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Job Support\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/created-job-supports\",\r\n                                name: \"Created Job Supports\",\r\n                                icon: \"check-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/updated-job-supports\",\r\n                                name: \"Updated Job Supports\",\r\n                                icon: \"pen\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-booked-job-supports\",\r\n                                name: \"Booked Job Supports\", \r\n                                icon: \"bookmark\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-rescheduled-job-supports\",\r\n                                name: \"Rescheduled Bookings\", \r\n                                icon: \"calendar-plus\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-stopped-job-supports\",\r\n                                name: \"Stopped Bookings\", \r\n                                icon: \"stop-circle\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-continued-job-supports\",\r\n                                name: \"Continued Bookings\", \r\n                                icon: \"play\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-assigned-job-supports\",\r\n                                name: \"Assigned Bookings\", \r\n                                icon: \"file-alt\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-today-job-support-bookings\",\r\n                                name: \"Today Job Support Bookings\",\r\n                                icon: \"calendar-alt\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/admin-completed-job-support-bookings\",\r\n                                name: \"Completed Job Support Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    // Add more admin specific menu items if needed\r\n                ];\r\n            case Constants.EXPONENT:\r\n                switch (selectedExponentType) {\r\n                    case Constants.TRAINER:\r\n                        return [\r\n                            {\r\n                                path: \"/dashboard\",\r\n                                name: \"Home\",\r\n                                icon: \"home\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/create-training\",\r\n                                name: \"Create Training\",\r\n                                icon: \"edit\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-rejected-trainings\",\r\n                                name: \"Rejected Trainings\",\r\n                                icon: \"times\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-approved-trainings\",\r\n                                name: \"Approved Trainings\",\r\n                                icon: \"check\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-started-trainings\",\r\n                                name: \"Scheduled Trainings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/trainer-completed-trainings\",\r\n                                name: \"Completed Trainings\",\r\n                                icon: \"history\",\r\n                            },\r\n                            // Add trainer specific menu items\r\n                        ];\r\n                    case Constants.INTERVIEW_SUPPORTER:\r\n                        return [\r\n                            {\r\n                                path: \"/dashboard\",\r\n                                name: \"Home\",\r\n                                icon: \"home\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/create-interview-support\",\r\n                                name: \"Create Interview Support\",\r\n                                icon: \"edit\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-rejected-interview-support\",\r\n                                name: \"Rejected Interview Support\",\r\n                                icon: \"times\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-approved-interview-support\",\r\n                                name: \"Approved Interview Support\",\r\n                                icon: \"check\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/interview-supporter-bookings\",\r\n                                name: \"Interview Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/interview-supporter-today-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/interview-supporter-completed-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ];\r\n                    case Constants.JOB_SUPPORTER:\r\n                        return [\r\n                            {\r\n                                path: \"/dashboard\",\r\n                                name: \"Home\",\r\n                                icon: \"home\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/create-job-support\",\r\n                                name: \"Create Job Support\",\r\n                                icon: \"edit\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-rejected-job-support\",\r\n                                name: \"Rejected Job Support\",\r\n                                icon: \"times\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/exponent-approved-job-support\",\r\n                                name: \"Approved Job Support\",\r\n                                icon: \"check\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/job-supporter-bookings\",\r\n                                name: \"Job Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/job-supporter-today-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/job-supporter-completed-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ];\r\n                    default:\r\n                        return [];\r\n                }\r\n            case Constants.CANDIDATE:\r\n                return [\r\n                    {\r\n                        path: \"/dashboard\",\r\n                        name: \"Home\",\r\n                        icon: \"home\",\r\n                    },\r\n                    {\r\n                        name: \"Training\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/candidate-search-training\",\r\n                                name: \"Search Trainings\",\r\n                                icon: \"search\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/enrolled-trainings\",\r\n                                name: \"Enrolled Trainings\",\r\n                                icon: \"registered\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-started-trainings\",\r\n                                name: \"Scheduled Trainings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-completed-trainings\",\r\n                                name: \"Completed Trainings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Interview Support\",\r\n                        icon: \"chalkboard-teacher\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/candidate-search-interview-supports\",\r\n                                name: \"Search Interview Supports\",\r\n                                icon: \"search\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-interview-support-bookings\",\r\n                                name: \"Interview Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-today-interview-support-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-completed-interview-support-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    {\r\n                        name: \"Job Support\",\r\n                        icon: \"book\",\r\n                        submenu: [\r\n                            {\r\n                                path: \"/dashboard/candidate-search-job-supports\",\r\n                                name: \"Search Job Supports\",\r\n                                icon: \"search\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-job-support-bookings\",\r\n                                name: \"Job Support Bookings\",\r\n                                icon: \"book-reader\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-today-job-support-bookings\",\r\n                                name: \"Scheduled Bookings\",\r\n                                icon: \"arrow-right\",\r\n                            },\r\n                            {\r\n                                path: \"/dashboard/candidate-completed-job-support-bookings\",\r\n                                name: \"Completed Bookings\",\r\n                                icon: \"history\",\r\n                            },\r\n                        ]\r\n                    },\r\n                    // Add candidate specific menu items\r\n                ];\r\n            default:\r\n                return [];\r\n        }\r\n    };\r\n\r\n    const sidebarMenuItems = getMenuItems();\r\n\r\n    useEffect(() => {\r\n        const pathname = location.pathname;\r\n        setActiveSidebarMenuItem(pathname);\r\n    }, [location]);\r\n\r\n    // exponent type change code\r\n    const handleExponentTypeChange = (event) => {\r\n        const selectedValue = event.target.value;\r\n        localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\r\n        window.location.href = '/dashboard';\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <CDBSidebar className='app-bg-color'>\r\n                <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\r\n                    {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\r\n                        <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{ cursor: 'pointer' }}>\r\n                            {exponentTypeList.map((item, index) => (\r\n                                <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\r\n                            ))}\r\n                        </select>\r\n                    )}\r\n                </CDBSidebarHeader>\r\n                <CDBSidebarContent>\r\n                    <CDBSidebarMenu>\r\n                        {sidebarMenuItems.map((item, index) => (\r\n                            <React.Fragment key={index}>\r\n                                {item.submenu ? (\r\n                                    <div>\r\n                                        <CDBNavLink\r\n                                            to=\"#\"\r\n                                            className=\"nav-link\"\r\n                                            onClick={() => toggleMenu(item.name)}\r\n                                        >\r\n                                            <CDBSidebarMenuItem\r\n                                                icon={item.icon}\r\n                                                iconSize='lg'\r\n                                                className={`sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`}\r\n                                            >\r\n                                                {item.name}\r\n                                                <i className={`fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`} style={{ float: 'right',marginTop: '5px',marginRight: '5px' }} />\r\n                                            </CDBSidebarMenuItem>\r\n                                        </CDBNavLink>\r\n                                        {expandedMenus[item.name] && (\r\n                                            item.submenu.map((subitem, subindex) => (\r\n                                                <CDBNavLink\r\n                                                    key={subindex}\r\n                                                    to={subitem.path}\r\n                                                    className=\"nav-link\"\r\n                                                >\r\n                                                    <CDBSidebarMenuItem\r\n                                                        icon={subitem.icon}\r\n                                                        iconSize='lg'\r\n                                                        className={`sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`}\r\n                                                    >\r\n                                                        {subitem.name}\r\n                                                    </CDBSidebarMenuItem>\r\n                                                </CDBNavLink>\r\n                                            ))\r\n                                        )}\r\n                                    </div>\r\n                                ) : (\r\n                                    <CDBNavLink\r\n                                        to={item.path}\r\n                                        className=\"nav-link\"\r\n                                    >\r\n                                        <CDBSidebarMenuItem\r\n                                            icon={item.icon}\r\n                                            iconSize='lg'\r\n                                            className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\r\n                                        >\r\n                                            {item.name}\r\n                                        </CDBSidebarMenuItem>\r\n                                    </CDBNavLink>\r\n                                )}\r\n                            </React.Fragment>\r\n                        ))}\r\n                    </CDBSidebarMenu>\r\n                </CDBSidebarContent>\r\n            </CDBSidebar>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// with sub mneu\r\n// import './Sidebar.css';\r\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import Constants from '../../Constants';\r\n\r\n// function Sidebar() {\r\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\r\n//     const [expandedMenus, setExpandedMenus] = useState({});\r\n//     const location = useLocation();\r\n//     const userType = localStorage.getItem('breezeUserType');\r\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\r\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\r\n\r\n//     const toggleMenu = (menuName) => {\r\n//         setExpandedMenus(prevState => ({\r\n//             ...prevState,\r\n//             [menuName]: !prevState[menuName]\r\n//         }));\r\n//     };\r\n\r\n//     const getMenuItems = () => {\r\n//         switch (userType) {\r\n//             case Constants.ADMIN:\r\n//                 return [\r\n//                     { path: \"/dashboard\", name: \"Home\", icon: \"home\" },\r\n//                     {\r\n//                         name: \"Training\",\r\n//                         icon: \"book\",\r\n//                         submenu: [\r\n//                             { path: \"/dashboard/technology\", name: \"Technology\", icon: \"th-large\" },\r\n//                             { path: \"/dashboard/course\", name: \"Course\", icon: \"sticky-note\" },\r\n//                             { path: \"/dashboard/created-trainings\", name: \"Created Trainings\", icon: \"th-large\" },\r\n//                             { path: \"/dashboard/add-sample\", name: \"Add Sample Intro Video\", icon: \"sticky-note\" },\r\n//                             { path: \"/dashboard/admin-enrolled-trainings\", name: \"Enrolled Trainings\", icon: \"th-large\" }\r\n//                         ]\r\n//                     },\r\n//                     // Add more admin specific menu items if needed\r\n//                 ];\r\n//             // Add other user types similarly\r\n//             default:\r\n//                 return [];\r\n//         }\r\n//     };\r\n\r\n//     const sidebarMenuItems = getMenuItems();\r\n\r\n//     useEffect(() => {\r\n//         const pathname = location.pathname;\r\n//         setActiveSidebarMenuItem(pathname);\r\n//     }, [location]);\r\n\r\n//     const handleExponentTypeChange = (event) => {\r\n//         const selectedValue = event.target.value;\r\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\r\n//         window.location.href = '/dashboard';\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <CDBSidebar className='app-bg-color'>\r\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\r\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\r\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\r\n//                             {exponentTypeList.map((item, index) => (\r\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                     )}\r\n//                 </CDBSidebarHeader>\r\n//                 <CDBSidebarContent>\r\n//                     <CDBSidebarMenu>\r\n//                         {sidebarMenuItems.map((item, index) => (\r\n//                             <React.Fragment key={index}>\r\n//                                 {item.submenu ? (\r\n//                                     <div>\r\n//                                         <CDBNavLink\r\n//                                             to=\"#\"\r\n//                                             className=\"nav-link\"\r\n//                                             onClick={() => toggleMenu(item.name)}\r\n//                                         >\r\n//                                             <CDBSidebarMenuItem\r\n//                                                 icon={item.icon}\r\n//                                                 iconSize='lg'\r\n//                                                 className={`sidebar-menu-item ${expandedMenus[item.name] ? 'active' : ''}`}\r\n//                                             >\r\n//                                                 {item.name}\r\n//                                                 <i className={`fa fa-caret-${expandedMenus[item.name] ? 'up' : 'down'}`} style={{ float: 'right' }} />\r\n//                                             </CDBSidebarMenuItem>\r\n//                                         </CDBNavLink>\r\n//                                         {expandedMenus[item.name] && (\r\n//                                             item.submenu.map((subitem, subindex) => (\r\n//                                                 <CDBNavLink\r\n//                                                     key={subindex}\r\n//                                                     to={subitem.path}\r\n//                                                     className=\"nav-link\"\r\n//                                                 >\r\n//                                                     <CDBSidebarMenuItem\r\n//                                                         icon={subitem.icon}\r\n//                                                         iconSize='lg'\r\n//                                                         className={`sidebar-submenu-item ${activeSidebarMenuItem === subitem.path ? 'active' : ''}`}\r\n//                                                     >\r\n//                                                         {subitem.name}\r\n//                                                     </CDBSidebarMenuItem>\r\n//                                                 </CDBNavLink>\r\n//                                             ))\r\n//                                         )}\r\n//                                     </div>\r\n//                                 ) : (\r\n//                                     <CDBNavLink\r\n//                                         to={item.path}\r\n//                                         className=\"nav-link\"\r\n//                                     >\r\n//                                         <CDBSidebarMenuItem\r\n//                                             icon={item.icon}\r\n//                                             iconSize='lg'\r\n//                                             className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\r\n//                                         >\r\n//                                             {item.name}\r\n//                                         </CDBSidebarMenuItem>\r\n//                                     </CDBNavLink>\r\n//                                 )}\r\n//                             </React.Fragment>\r\n//                         ))}\r\n//                     </CDBSidebarMenu>\r\n//                 </CDBSidebarContent>\r\n//             </CDBSidebar>\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default Sidebar;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// without sub menu\r\n// import './Sidebar.css';\r\n// import { CDBNavLink, CDBSidebar, CDBSidebarContent, CDBSidebarHeader, CDBSidebarMenu, CDBSidebarMenuItem } from 'cdbreact';\r\n// import React, { useEffect, useState } from 'react';\r\n// import { useLocation } from 'react-router-dom';\r\n// import Constants from '../../Constants';\r\n\r\n// function Sidebar() {\r\n\r\n//     const [activeSidebarMenuItem, setActiveSidebarMenuItem] = useState(null);\r\n//     const location = useLocation();\r\n//     const userType = localStorage.getItem('breezeUserType');\r\n//     const exponentTypeList = JSON.parse(localStorage.getItem('breezeExponentType'));\r\n//     const selectedExponentType = localStorage.getItem(\"breezeSelectedExponentType\");\r\n\r\n//     // Define menu items based on userType\r\n//     const getMenuItems = () => {\r\n//         switch (userType) {\r\n//             case Constants.ADMIN:\r\n//                 return [\r\n//                     {\r\n//                         path: \"/dashboard\",\r\n//                         name: \"Home\",\r\n//                         icon: \"home\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/create-admin\",\r\n//                         name: \"Create Admin\",\r\n//                         icon: \"edit\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/technology\",\r\n//                         name: \"Technology\",\r\n//                         icon: \"microchip\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/course\",\r\n//                         name: \"Course\",\r\n//                         icon: \"book\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/created-trainings\",\r\n//                         name: \"Created Trainings\",\r\n//                         icon: \"check-circle\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/add-sample\",\r\n//                         name: \"Add Sample Intro Video\",\r\n//                         icon: \"video-slash\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/admin-enrolled-trainings\",\r\n//                         name: \"Enrolled Trainings\",\r\n//                         icon: \"registered\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/admin-started-trainings\",\r\n//                         name: \"Started Trainings\",\r\n//                         icon: \"arrow-right\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/admin-completed-trainings\",\r\n//                         name: \"Completed Trainings\",\r\n//                         icon: \"history\",\r\n//                     },\r\n//                     // Add more admin specific menu items if needed\r\n//                 ];\r\n//             case Constants.EXPONENT:\r\n//                 switch (selectedExponentType) {\r\n//                     case Constants.TRAINER:\r\n//                         return [\r\n//                             {\r\n//                                 path: \"/dashboard\",\r\n//                                 name: \"Home\",\r\n//                                 icon: \"home\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/create-training\",\r\n//                                 name: \"Create Training\",\r\n//                                 icon: \"edit\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-rejected-trainings\",\r\n//                                 name: \"Rejected Trainings\",\r\n//                                 icon: \"times\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-approved-trainings\",\r\n//                                 name: \"Approved Training\",\r\n//                                 icon: \"check\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-started-trainings\",\r\n//                                 name: \"Scheduled Trainings\",\r\n//                                 icon: \"arrow-right\",\r\n//                             },\r\n//                             {\r\n//                                 path: \"/dashboard/trainer-completed-trainings\",\r\n//                                 name: \"Completed Training\",\r\n//                                 icon: \"history\",\r\n//                             },\r\n//                             // Add trainer specific menu items\r\n//                         ];\r\n//                     case Constants.JOB_SUPPORTER:\r\n//                         return [\r\n//                             {\r\n//                                 path: \"/dashboard\",\r\n//                                 name: \"Home\",\r\n//                                 icon: \"home\",\r\n//                             },\r\n//                         ];\r\n//                     case Constants.INTERVIEW_SUPPORTER:\r\n//                         return [\r\n//                             {\r\n//                                 path: \"/dashboard\",\r\n//                                 name: \"Home\",\r\n//                                 icon: \"home\",\r\n//                             },\r\n//                         ];\r\n//                     default:\r\n//                         return [];\r\n//                 }\r\n//             case Constants.CANDIDATE:\r\n//                 return [\r\n//                     {\r\n//                         path: \"/dashboard\",\r\n//                         name: \"Home\",\r\n//                         icon: \"home\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/candidate-search-training\",\r\n//                         name: \"Search Trainings\",\r\n//                         icon: \"search\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/enrolled-trainings\",\r\n//                         name: \"Enrolled Trainings\",\r\n//                         icon: \"registered\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/candidate-started-trainings\",\r\n//                         name: \"Scheduled Trainings\",\r\n//                         icon: \"arrow-right\",\r\n//                     },\r\n//                     {\r\n//                         path: \"/dashboard/candidate-completed-trainings\",\r\n//                         name: \"Completed Trainings\",\r\n//                         icon: \"history\",\r\n//                     },\r\n//                     // Add candidate specific menu items\r\n//                 ];\r\n//             default:\r\n//                 return [];\r\n//         }\r\n//     };\r\n\r\n//     const sidebarMenuItems = getMenuItems();\r\n\r\n//     useEffect(() => {\r\n//         const pathname = location.pathname;\r\n//         setActiveSidebarMenuItem(pathname);\r\n//     }, [location]);\r\n\r\n//     // exponent type change code\r\n//     const handleExponentTypeChange = (event) => {\r\n//         const selectedValue = event.target.value;\r\n//         localStorage.setItem(\"breezeSelectedExponentType\", selectedValue);\r\n//         window.location.href = '/dashboard';\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <CDBSidebar className='app-bg-color' >\r\n//                 <CDBSidebarHeader prefix={<i className=\"fa fa-bars\" />}>\r\n//                     {userType === Constants.ADMIN || userType === Constants.CANDIDATE ? userType : (\r\n//                         <select className='sidebar-exponent-dropdown' value={selectedExponentType} onChange={handleExponentTypeChange} style={{cursor:'pointer'}}>\r\n//                             {exponentTypeList.map((item, index) => (\r\n//                                 <option key={index} className='sidebar-exponent-dropdown-option' value={item} >{item}</option>\r\n//                             ))}\r\n//                         </select>\r\n//                     )}\r\n//                 </CDBSidebarHeader>\r\n//                 <CDBSidebarContent>\r\n//                     <CDBSidebarMenu>\r\n//                         {\r\n//                             sidebarMenuItems.map((item, index) => (\r\n//                                 <CDBNavLink\r\n//                                     to={item.path} className=\"nav-link\"\r\n//                                 >\r\n//                                     <CDBSidebarMenuItem\r\n//                                         key={index}\r\n//                                         icon={item.icon}\r\n//                                         iconSize='lg'\r\n//                                         className={`sidebar-menu-item ${activeSidebarMenuItem === item.path ? 'active' : ''}`}\r\n//                                     >\r\n//                                         {item.name}\r\n//                                     </CDBSidebarMenuItem>\r\n//                                 </CDBNavLink>\r\n//                             ))\r\n//                         }\r\n//                     </CDBSidebarMenu>\r\n//                 </CDBSidebarContent>\r\n//             </CDBSidebar>\r\n//         </div>\r\n//     );\r\n\r\n// }\r\n\r\n// export default Sidebar;"],"mappings":"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AAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACZ,CAAC;AAGd;AAAC3C,EAAA,CA3cQD,OAAO;EAAA,QAIKJ,WAAW;AAAA;AAAAgE,EAAA,GAJvB5D,OAAO;AA6chB,eAAeA,OAAO;;AActcA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AAAA,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
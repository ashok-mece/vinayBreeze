{"ast":null,"code":"import'./MandatoryUpdateFields.css';import{Button,Col,Container,Modal,Row}from'react-bootstrap';import{useEffect,useState}from'react';import Multiselect from\"multiselect-react-dropdown\";import{PhoneInput}from'react-international-phone';import'react-international-phone/style.css';import Select from'react-select';import{City,Country,State}from'country-state-city';import GlobalService from'../../../../Services/global_service/GlobalService';import Constants from'../../../Constants';import UserService from'../../../../Services/user_service/UserService';import LoadingBar from'../../../loading_bar_component/LoadingBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function MandatoryUpdateFields(){const userId=localStorage.getItem(\"breezeUserId\");const userType=localStorage.getItem(\"breezeUserType\");const[loadingBar,setLoadingBar]=useState(false);const[messageColor,setMessageColor]=useState(Constants.MESSAGE_COLOR);const[showModal,setShowModal]=useState(true);const handleModalClose=()=>setShowModal(false);const childColor=getComputedStyle(document.documentElement).getPropertyValue('--child-color');const whiteColor=getComputedStyle(document.documentElement).getPropertyValue('--white-color');//Fields for to display err msg div and label\nconst[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//JS for to display err msg\nconst mandatoryUpdateFieldsDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};//JS for to display success msg\nconst mandatoryUpdateFieldsDisplaySucMsg=errorMessage=>{setMessageColor('green');setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);setMessageColor('#be3144');},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};// experience code\nconst[experience,setExperience]=useState(0);const handleExperienceInput=e=>setExperience(e.target.value);// phone code\nconst[phone,setPhone]=useState('');const[countryCode,setCountryCode]=useState('');const[phoneWithCountryCode,setPhoneWithCountryCode]=useState(null);const[iso2,setIso2]=useState('');const handleContactInfo=(phone,country)=>{const countryCodeWithPlus='+'+country.country.dialCode;const phoneWithOutCountryCode=phone.replace(countryCodeWithPlus,'');setPhone(phoneWithOutCountryCode);// console.log(country);\n// console.log(phone.replace(countryCodeWithPlus, ''));\n// console.log(country.inputValue);\n// console.log(country.country.dialCode);\n// console.log(country.country.iso2); // region code\nsetPhoneWithCountryCode(country.inputValue);setCountryCode(country.country.dialCode);setIso2(country.country.iso2);updateCountryWhenPhoneNumberChanged(country.country.iso2);};const updateCountryWhenPhoneNumberChanged=selectedIso2Code=>{if(selectedIso2Code){const countries=Country.getAllCountries();const foundCountry=countries.find(country=>country.isoCode===selectedIso2Code.toUpperCase());if(foundCountry){setSelectedCountry(foundCountry);}}};// gender code\nconst[gender,setGender]=useState('');const genderList=[{name:'Male'},{name:'Female'},{name:'Others'}];const onSelectGender=item=>{setGender(item.name);};// technology code\nconst[technologies,setTechnologies]=useState([]);const[technologiesList,setTechnologiesList]=useState([]);const onSelectTechnology=(selectedList,selectedItem)=>{setTechnologies([...selectedList]);};const onRemoveTechnology=(selectedList,removedItem)=>{setTechnologies([...selectedList]);};useEffect(()=>{const getAllTechnology=async()=>{setLoadingBar(true);try{const responseData=await GlobalService.getAllTechnology();console.log(responseData);setTechnologiesList(responseData);}catch(error){console.log(error.message);}finally{setLoadingBar(false);}};getAllTechnology();},[]);// country state city code\nconst[selectedCountry,setSelectedCountry]=useState(null);const[selectedState,setSelectedState]=useState(null);const[selectedCity,setSelectedCity]=useState(null);const handleMandatoryUpdateFieldsSubmit=async()=>{console.log(userType);if(userType===Constants.EXPONENT&&(technologies===null||technologies.length===0||technologies.length<3)){// console.log('Technologies array is null or empty.');\nmandatoryUpdateFieldsDisplayErrMsg('please choose your minimum 3 technical stacks');}else if(userType===Constants.EXPONENT&&(experience===null||experience===''||experience===undefined||experience===0)){console.log('experience is null or empty or greater than 50.');mandatoryUpdateFieldsDisplayErrMsg('please enter you experience');}else if(userType===Constants.EXPONENT&&(experience===null||experience===0||experience>50)){console.log('experience is null or empty or greater than 50.');mandatoryUpdateFieldsDisplayErrMsg('experience should be less than or equal to 50');}else if(!isContactInfoVerified){mandatoryUpdateFieldsDisplayErrMsg('verify your contact information');}else if(phone===null||phone===''||phone===undefined){console.log('phone is null or empty.');mandatoryUpdateFieldsDisplayErrMsg('please enter your contact information');}else if(gender===null||gender===''){console.log('Gender is null or empty.');mandatoryUpdateFieldsDisplayErrMsg('please select your gender');}else if(selectedCountry===null||selectedState===null||selectedCity===null){console.log('location is null or empty.');mandatoryUpdateFieldsDisplayErrMsg('please select your country, state, city');}else{setLoadingBar(true);const request={userId:userId,userType:userType,technologyList:technologies,phoneNumber:phone,countryCode:countryCode,phoneNumberWithCountryCode:phoneWithCountryCode,userExperience:experience,gender:gender,country:selectedCountry.name,state:selectedState.name,city:selectedCity.name};console.log(request);try{const responseData=await UserService.mandatoryUpdateFields(request);console.log(responseData);localStorage.setItem('breezeUserFirstTimeLogin',responseData.firstTimeLogin);mandatoryUpdateFieldsDisplaySucMsg('Mandatory Fields Updated Successfully');setTimeout(()=>{handleModalClose();},2000);}catch(error){handleMandatoryUpdateFieldsErrors(error.message);}finally{setLoadingBar(false);}}};const handleMandatoryUpdateFieldsErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"You are not registered\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");};const[isOtpSent,setIsOtpSent]=useState(false);const handleSendOtp=async()=>{if(phone===null||phone===''||phone===undefined){mandatoryUpdateFieldsDisplayErrMsg(\"please enter your contact information\");}else{setLoadingBar(true);const request={countryCode:countryCode,phoneNumber:phone,phoneNumberWithCountryCode:phoneWithCountryCode,regionCode:iso2,userId:userId};console.log(request);try{const responseData=await UserService.sendOtpToPhoneNumber(request);console.log(responseData);mandatoryUpdateFieldsDisplaySucMsg(responseData);setIsOtpSent(true);}catch(error){handleSendOtpToPhoneNumberErrors(error.message);setIsOtpSent(false);}finally{setLoadingBar(false);}}};const handleSendOtpToPhoneNumberErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid contact information\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");else if(Constants.INVALID_PHONE_NUMBER===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Entered Phone Number is Invalid\");else if(Constants.OTP_NOT_SENT===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Failed to send otp\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");};const handleEditContactInfo=()=>{setIsOtpSent(false);};const[otp,setOtp]=useState('');const handleOtpInput=e=>setOtp(e.target.value);const[isContactInfoVerified,setIsContactInfoVerified]=useState(false);const handleVerifyOtp=async()=>{if(otp===0||otp===null||otp===''||otp===undefined){mandatoryUpdateFieldsDisplayErrMsg(\"please enter otp\");}else if(otp.length!==6){mandatoryUpdateFieldsDisplayErrMsg(\"invalid otp\");}else{setLoadingBar(true);const request={emailOtp:otp,userId:userId};console.log(request);try{const responseData=await UserService.verifyOtpToPhoneNumber(request);console.log(responseData);setIsContactInfoVerified(true);}catch(error){handleVerifyOtpErrors(error.message);setIsContactInfoVerified(false);}finally{setLoadingBar(false);}}};const handleVerifyOtpErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid otp\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");else if(Constants.OTP_NOT_MATCHED===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");};// custom css for mandatory input fields for Select component from react-select\nconst customCssForMandUpdFlds={option:(provided,state)=>({...provided,backgroundColor:state.isFocused?childColor:'',color:state.isFocused?whiteColor:'',':hover':{backgroundColor:childColor,color:whiteColor}})};const customCssForMsg={fontSize:'medium',fontWeight:'700',color:messageColor};return/*#__PURE__*/_jsxs(\"div\",{children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsxs(Modal,{className:\"mandatory-update-fields-modal\",size:\"lg\",show:showModal,onHide:handleModalClose,centered:true,backdrop:\"static\",children:[/*#__PURE__*/_jsx(Container,{className:\"px-5\",children:/*#__PURE__*/_jsx(Modal.Header,{children:/*#__PURE__*/_jsx(Modal.Title,{style:{fontSize:'20px'},children:\"Mandatory Fields\"})})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Container,{className:\"px-5\",style:{fontSize:'15px'},children:[userType===Constants.EXPONENT&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Technologies\"]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{className:\"technology-multiselect\",children:/*#__PURE__*/_jsx(Multiselect,{id:\"technology\",options:technologiesList,onSelect:onSelectTechnology,onRemove:onRemoveTechnology,displayValue:\"technologyName\",placeholder:\"Your Technical Stack\",avoidHighlightFirstOption:true,style:{chips:{background:childColor}}})})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Contact Info\"]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(PhoneInput,{forceDialCode:true,onChange:handleContactInfo,inputStyle:{width:'100%'},disabled:isOtpSent}),!isContactInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleSendOtp,disabled:isOtpSent,children:\"Send Otp\"}),isContactInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",children:\"Verified\"}),isOtpSent&&!isContactInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleSendOtp,children:\"ReSend\"})]})})})]}),!isContactInfoVerified&&isOtpSent&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Enter Otp\"]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter Otp\",style:{borderRadius:'4px'},value:otp,onChange:handleOtpInput}),/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleVerifyOtp,children:\"Verify\"}),/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleEditContactInfo,children:\"Edit Contact Info\"})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(Row,{children:[userType===Constants.EXPONENT&&/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Experience\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"expInput\",placeholder:\"Your Experience\",value:experience,onChange:handleExperienceInput,onKeyDown:e=>{const allowedKeys=['.','Backspace'];for(let i=0;i<=9;i++){allowedKeys.push(i.toString());}if(!allowedKeys.includes(e.key)){e.preventDefault();}if(e.key==='.'&&e.target.value.includes('.')){e.preventDefault();}if(e.key==='-'&&e.target.selectionStart!==0){e.preventDefault();}},step:\"any\"// Allows for decimals\n,min:\"1\",max:\"50\"})]})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"gender-singleselect\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Gender\"]}),/*#__PURE__*/_jsx(Select,{id:\"gender\",options:genderList,getOptionLabel:options=>{return options[\"name\"];},getOptionValue:options=>{return options[\"name\"];},onChange:onSelectGender,placeholder:\"Select Gender\",styles:customCssForMandUpdFlds})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"country\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Country\"]}),/*#__PURE__*/_jsx(Select,{options:Country.getAllCountries(),getOptionLabel:options=>{return options[\"name\"];},getOptionValue:options=>{return options[\"name\"];},value:selectedCountry,onChange:item=>{setSelectedCountry(item);},placeholder:\"Select Country\",styles:customCssForMandUpdFlds,isDisabled:true})]})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"state\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"State\"]}),/*#__PURE__*/_jsx(Select,{options:State===null||State===void 0?void 0:State.getStatesOfCountry(selectedCountry===null||selectedCountry===void 0?void 0:selectedCountry.isoCode),getOptionLabel:options=>{return options[\"name\"];},getOptionValue:options=>{return options[\"name\"];},value:selectedState,onChange:item=>{setSelectedState(item);},placeholder:\"Select State\",styles:customCssForMandUpdFlds})]})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"city\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"City\"]}),/*#__PURE__*/_jsx(Select,{options:City.getCitiesOfState(selectedState===null||selectedState===void 0?void 0:selectedState.countryCode,selectedState===null||selectedState===void 0?void 0:selectedState.isoCode),getOptionLabel:options=>{return options[\"name\"];},getOptionValue:options=>{return options[\"name\"];},value:selectedCity,onChange:item=>{setSelectedCity(item);},placeholder:\"Select City\",styles:customCssForMandUpdFlds})]})})]})}),/*#__PURE__*/_jsx(\"div\",{children:errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})})}),/*#__PURE__*/_jsx(Button,{className:\"dashboard-button mt-3\",onClick:handleMandatoryUpdateFieldsSubmit,children:\"Submit\"})]})})]})]});}export default MandatoryUpdateFields;/**<Multiselect\r\n                                            id='gender'\r\n                                            options={genderList}\r\n                                            onSelect={onSelectGender}\r\n                                            displayValue=\"name\"\r\n                                            placeholder=\"Select Your Gender\"\r\n                                            singleSelect={true}\r\n                                            avoidHighlightFirstOption={true}\r\n                                            style={{\r\n                                                chips: {\r\n                                                    color: whiteColor,\r\n                                                    background: childColor,\r\n                                                },\r\n                                            }}\r\n                                        /> */ /**\r\n *  <div>\r\n            <Multiselect\r\n                options={technologies} \r\n                onSelect={onSelect} \r\n                onRemove={onRemove} \r\n                displayValue=\"name\"\r\n                placeholder=\"Select Technical Stack\"\r\n            />\r\n        </div>\r\n */ /**\r\n * {\r\n                                multiselectContainer: { // To change css for multiselect (Width,height,etc..)\r\n                                  \r\n                                },\r\n                                searchBox: { // To change search box element look\r\n                                //   border: 'none',\r\n                                //   fontSize: '10px',\r\n                                //   minHeight: '50px',\r\n                                },\r\n                                inputField: { // To change input field position or margin\r\n                                    // margin: '5px',\r\n                                },\r\n                                chips: { // To change css chips(Selected options)\r\n                                  background: '#8CB9BD',\r\n                                },\r\n                                optionContainer: { // To change css for option container \r\n                                //   border: '2px solid',\r\n                                },\r\n                                option: { // To change css for dropdown options\r\n                                //   color: 'black',\r\n                                },\r\n                                groupHeading: { // To chanage group heading style\r\n                                  \r\n                                }\r\n                              }\r\n */ /**\r\n * <div>\r\n            <Modal show={showModal} onHide={handleClose} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    ...\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\">\r\n                        Save changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n */","map":{"version":3,"names":["Button","Col","Container","Modal","Row","useEffect","useState","Multiselect","PhoneInput","Select","City","Country","State","GlobalService","Constants","UserService","LoadingBar","jsx","_jsx","jsxs","_jsxs","MandatoryUpdateFields","userId","localStorage","getItem","userType","loadingBar","setLoadingBar","messageColor","setMessageColor","MESSAGE_COLOR","showModal","setShowModal","handleModalClose","childColor","getComputedStyle","document","documentElement","getPropertyValue","whiteColor","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","mandatoryUpdateFieldsDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","mandatoryUpdateFieldsDisplaySucMsg","SET_TIME_OUT_FOR_SUCCESS_MSG","experience","setExperience","handleExperienceInput","e","target","value","phone","setPhone","countryCode","setCountryCode","phoneWithCountryCode","setPhoneWithCountryCode","iso2","setIso2","handleContactInfo","country","countryCodeWithPlus","dialCode","phoneWithOutCountryCode","replace","inputValue","updateCountryWhenPhoneNumberChanged","selectedIso2Code","countries","getAllCountries","foundCountry","find","isoCode","toUpperCase","setSelectedCountry","gender","setGender","genderList","name","onSelectGender","item","technologies","setTechnologies","technologiesList","setTechnologiesList","onSelectTechnology","selectedList","selectedItem","onRemoveTechnology","removedItem","getAllTechnology","responseData","console","log","error","message","selectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","handleMandatoryUpdateFieldsSubmit","EXPONENT","length","undefined","isContactInfoVerified","request","technologyList","phoneNumber","phoneNumberWithCountryCode","userExperience","state","city","mandatoryUpdateFields","setItem","firstTimeLogin","handleMandatoryUpdateFieldsErrors","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","BREEZE_DATABASE_EXCEPTION","isOtpSent","setIsOtpSent","handleSendOtp","regionCode","sendOtpToPhoneNumber","handleSendOtpToPhoneNumberErrors","INVALID_PHONE_NUMBER","OTP_NOT_SENT","handleEditContactInfo","otp","setOtp","handleOtpInput","setIsContactInfoVerified","handleVerifyOtp","emailOtp","verifyOtpToPhoneNumber","handleVerifyOtpErrors","OTP_NOT_MATCHED","customCssForMandUpdFlds","option","provided","backgroundColor","isFocused","color","customCssForMsg","fontSize","fontWeight","children","className","size","show","onHide","centered","backdrop","Header","Title","style","Body","id","options","onSelect","onRemove","displayValue","placeholder","avoidHighlightFirstOption","chips","background","display","forceDialCode","onChange","inputStyle","width","disabled","onClick","type","borderRadius","onKeyDown","allowedKeys","i","push","toString","includes","key","preventDefault","selectionStart","step","min","max","getOptionLabel","getOptionValue","styles","isDisabled","getStatesOfCountry","getCitiesOfState"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/mandatory_update_fields_component/MandatoryUpdateFields.js"],"sourcesContent":["import './MandatoryUpdateFields.css';\r\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport { PhoneInput } from 'react-international-phone';\r\nimport 'react-international-phone/style.css';\r\nimport Select from 'react-select';\r\nimport { City, Country, State } from 'country-state-city';\r\nimport GlobalService from '../../../../Services/global_service/GlobalService';\r\nimport Constants from '../../../Constants';\r\nimport UserService from '../../../../Services/user_service/UserService';\r\nimport LoadingBar from '../../../loading_bar_component/LoadingBar';\r\n\r\nfunction MandatoryUpdateFields() {\r\n\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n    const userType = localStorage.getItem(\"breezeUserType\");\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n\r\n    const [showModal, setShowModal] = useState(true);\r\n    const handleModalClose = () => setShowModal(false);\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n    const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\r\n\r\n    //Fields for to display err msg div and label\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const mandatoryUpdateFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    //JS for to display success msg\r\n    const mandatoryUpdateFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n\r\n    // experience code\r\n    const [experience, setExperience] = useState(0);\r\n    const handleExperienceInput = (e) => setExperience(e.target.value);\r\n\r\n    // phone code\r\n    const [phone, setPhone] = useState('');\r\n    const [countryCode, setCountryCode] = useState('');\r\n    const [phoneWithCountryCode, setPhoneWithCountryCode] = useState(null);\r\n    const [iso2, setIso2] = useState('');\r\n    const handleContactInfo = (phone, country) => {\r\n        const countryCodeWithPlus = '+' + country.country.dialCode;\r\n        const phoneWithOutCountryCode = phone.replace(countryCodeWithPlus, '');\r\n        setPhone(phoneWithOutCountryCode);\r\n        // console.log(country);\r\n        // console.log(phone.replace(countryCodeWithPlus, ''));\r\n        // console.log(country.inputValue);\r\n        // console.log(country.country.dialCode);\r\n        // console.log(country.country.iso2); // region code\r\n        setPhoneWithCountryCode(country.inputValue);\r\n        setCountryCode(country.country.dialCode);\r\n        setIso2(country.country.iso2);\r\n        updateCountryWhenPhoneNumberChanged(country.country.iso2);\r\n    }\r\n\r\n    const updateCountryWhenPhoneNumberChanged = (selectedIso2Code) => {\r\n        if (selectedIso2Code) {\r\n            const countries = Country.getAllCountries();\r\n            const foundCountry = countries.find(country => country.isoCode === selectedIso2Code.toUpperCase());\r\n            if (foundCountry) {\r\n                setSelectedCountry(foundCountry);\r\n            }\r\n        }\r\n    }\r\n\r\n    // gender code\r\n    const [gender, setGender] = useState('');\r\n    const genderList = [\r\n        { name: 'Male' },\r\n        { name: 'Female' },\r\n        { name: 'Others' },\r\n    ];\r\n    const onSelectGender = (item) => {\r\n        setGender(item.name);\r\n    }\r\n\r\n    // technology code\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [technologiesList, setTechnologiesList] = useState([]);\r\n    const onSelectTechnology = (selectedList, selectedItem) => {\r\n        setTechnologies([...selectedList]);\r\n    }\r\n    const onRemoveTechnology = (selectedList, removedItem) => {\r\n        setTechnologies([...selectedList]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getAllTechnology = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getAllTechnology();\r\n                console.log(responseData);\r\n                setTechnologiesList(responseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getAllTechnology();\r\n    }, []);\r\n\r\n    // country state city code\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const [selectedState, setSelectedState] = useState(null);\r\n    const [selectedCity, setSelectedCity] = useState(null);\r\n\r\n    const handleMandatoryUpdateFieldsSubmit = async () => {\r\n        console.log(userType);\r\n        if (userType === Constants.EXPONENT && (technologies === null || technologies.length === 0 || technologies.length < 3)) {\r\n            // console.log('Technologies array is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please choose your minimum 3 technical stacks');\r\n        } else if (userType === Constants.EXPONENT && (experience === null || experience === '' || experience === undefined || experience === 0)) {\r\n            console.log('experience is null or empty or greater than 50.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please enter you experience');\r\n        } else if (userType === Constants.EXPONENT && (experience === null || experience === 0 || experience > 50)) {\r\n            console.log('experience is null or empty or greater than 50.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('experience should be less than or equal to 50');\r\n        } else if (!isContactInfoVerified) {\r\n            mandatoryUpdateFieldsDisplayErrMsg('verify your contact information');\r\n        }  else if (phone === null || phone === '' || phone === undefined) {\r\n            console.log('phone is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please enter your contact information');\r\n        } else if (gender === null || gender === '') {\r\n            console.log('Gender is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please select your gender');\r\n        } else if (selectedCountry === null || selectedState === null || selectedCity === null) {\r\n            console.log('location is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please select your country, state, city');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                userId: userId,\r\n                userType: userType,\r\n                technologyList: technologies,\r\n                phoneNumber: phone,\r\n                countryCode: countryCode,\r\n                phoneNumberWithCountryCode: phoneWithCountryCode,\r\n                userExperience: experience,\r\n                gender: gender,\r\n                country: selectedCountry.name,\r\n                state: selectedState.name,\r\n                city: selectedCity.name,\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.mandatoryUpdateFields(request);\r\n                console.log(responseData);\r\n                localStorage.setItem('breezeUserFirstTimeLogin', responseData.firstTimeLogin);\r\n                mandatoryUpdateFieldsDisplaySucMsg('Mandatory Fields Updated Successfully');\r\n                setTimeout(() => {\r\n                    handleModalClose();\r\n                }, 2000);\r\n            } catch (error) {\r\n                handleMandatoryUpdateFieldsErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMandatoryUpdateFieldsErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"You are not registered\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n    const handleSendOtp = async () => {\r\n\r\n        if (phone === null || phone === '' || phone === undefined) {\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"please enter your contact information\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                countryCode: countryCode,\r\n                phoneNumber: phone,\r\n                phoneNumberWithCountryCode: phoneWithCountryCode,\r\n                regionCode: iso2,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.sendOtpToPhoneNumber(request);\r\n                console.log(responseData);\r\n                mandatoryUpdateFieldsDisplaySucMsg(responseData);\r\n                setIsOtpSent(true);\r\n            } catch (error) {\r\n                handleSendOtpToPhoneNumberErrors(error.message);\r\n                setIsOtpSent(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            } \r\n        }\r\n    }\r\n\r\n    const handleSendOtpToPhoneNumberErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid contact information\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.INVALID_PHONE_NUMBER === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Entered Phone Number is Invalid\");\r\n        else if (Constants.OTP_NOT_SENT === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Failed to send otp\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleEditContactInfo = () => {\r\n        setIsOtpSent(false);\r\n    }\r\n\r\n    const [otp, setOtp] = useState('');\r\n    const handleOtpInput = (e) => setOtp(e.target.value);\r\n    const [isContactInfoVerified, setIsContactInfoVerified] = useState(false);\r\n    const handleVerifyOtp = async () => {\r\n        if (otp === 0 || otp === null || otp === '' || otp === undefined) {\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"please enter otp\");\r\n        } else if (otp.length !== 6) {\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"invalid otp\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                emailOtp: otp,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.verifyOtpToPhoneNumber(request);\r\n                console.log(responseData);\r\n                setIsContactInfoVerified(true);\r\n            } catch (error) {\r\n                handleVerifyOtpErrors(error.message);\r\n                setIsContactInfoVerified(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleVerifyOtpErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid otp\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.OTP_NOT_MATCHED === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    // custom css for mandatory input fields for Select component from react-select\r\n    const customCssForMandUpdFlds = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            backgroundColor: state.isFocused ? childColor : '',\r\n            color: state.isFocused ? whiteColor : '',\r\n            ':hover': {\r\n                backgroundColor: childColor,\r\n                color: whiteColor,\r\n            },\r\n        }),\r\n    };\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loadingBar && <LoadingBar />}\r\n            <Modal className='mandatory-update-fields-modal' size='lg' show={showModal} onHide={handleModalClose} centered backdrop=\"static\">\r\n                <Container className='px-5'>\r\n                    <Modal.Header>\r\n                        <Modal.Title style={{ fontSize: '20px' }}>\r\n                            Mandatory Fields\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                </Container>\r\n                <Modal.Body>\r\n                    <Container className='px-5' style={{ fontSize: '15px' }}>\r\n                        {userType === Constants.EXPONENT && (\r\n                            <div>\r\n                                <label><span style={{ color: 'red' }}>*</span>Technologies</label>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className='technology-multiselect'>\r\n                                            <Multiselect\r\n                                                id='technology'\r\n                                                options={technologiesList}\r\n                                                onSelect={onSelectTechnology}\r\n                                                onRemove={onRemoveTechnology}\r\n                                                displayValue=\"technologyName\"\r\n                                                placeholder=\"Your Technical Stack\"\r\n                                                avoidHighlightFirstOption={true}\r\n                                                style={{\r\n                                                    chips: {\r\n                                                        background: childColor,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                        <div className='mt-2'>\r\n                            <label><span style={{ color: 'red' }}>*</span>Contact Info</label>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className='contact-info' style={{ display: 'flex' }}>\r\n                                        <PhoneInput\r\n                                            forceDialCode={true}\r\n                                            onChange={handleContactInfo}\r\n                                            inputStyle={{ width: '100%' }}\r\n                                            disabled={isOtpSent}\r\n                                        />\r\n                                        {!isContactInfoVerified && (\r\n                                            <Button\r\n                                                className='button-otp'\r\n                                                onClick={handleSendOtp}\r\n                                                disabled={isOtpSent}\r\n                                            >\r\n                                                Send Otp\r\n                                            </Button>\r\n                                        )}\r\n                                        {isContactInfoVerified && (\r\n                                            <Button\r\n                                                className='button-otp'\r\n                                            >\r\n                                                Verified\r\n                                            </Button>\r\n                                        )}\r\n                                        {(isOtpSent && !isContactInfoVerified) && (\r\n                                            <Button\r\n                                                className='button-otp'\r\n                                                onClick={handleSendOtp}\r\n                                            >\r\n                                                ReSend\r\n                                            </Button>\r\n                                        )}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        {!isContactInfoVerified && (\r\n                            isOtpSent && (\r\n                                <div className='mt-2'>\r\n                                    <label><span style={{ color: 'red' }}>*</span>Enter Otp</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className='contact-info' style={{ display: 'flex' }}>\r\n                                                <input\r\n                                                    type='number'\r\n                                                    placeholder='Enter Otp'\r\n                                                    style={{ borderRadius: '4px' }}\r\n                                                    value={otp}\r\n                                                    onChange={handleOtpInput}\r\n                                                />\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleVerifyOtp}\r\n                                                >\r\n                                                    Verify\r\n                                                </Button>\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleEditContactInfo}\r\n                                                >\r\n                                                    Edit Contact Info\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        <div className='mt-2'>\r\n                            <Row>\r\n                                {userType === Constants.EXPONENT && (\r\n                                    <Col>\r\n                                        <div className='experience'>\r\n                                            <label><span style={{ color: 'red' }}>*</span>Experience</label>\r\n                                            <input\r\n                                                type='number'\r\n                                                className='expInput'\r\n                                                placeholder='Your Experience'\r\n                                                value={experience}\r\n                                                onChange={handleExperienceInput}\r\n                                                onKeyDown={(e) => {\r\n                                                    const allowedKeys = ['.', 'Backspace'];\r\n                                                    for (let i = 0; i <= 9; i++) {\r\n                                                        allowedKeys.push(i.toString());\r\n                                                    }\r\n                                                    if (!allowedKeys.includes(e.key)) {\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                    if (e.key === '.' && e.target.value.includes('.')) {\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                    if (e.key === '-' && e.target.selectionStart !== 0) {\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                }}\r\n                                                step=\"any\" // Allows for decimals\r\n                                                min=\"1\"\r\n                                                max=\"50\"\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                )}\r\n                                <Col>\r\n                                    <div className='gender-singleselect'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>Gender</label>\r\n                                        <Select\r\n                                            id='gender'\r\n                                            options={genderList}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            onChange={onSelectGender}\r\n                                            placeholder='Select Gender'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <div className='mt-2'>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className='country'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>Country</label>\r\n                                        <Select\r\n                                            options={Country.getAllCountries()}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            value={selectedCountry}\r\n                                            onChange={(item) => {\r\n                                                setSelectedCountry(item);\r\n                                            }}\r\n                                            placeholder='Select Country'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                            isDisabled={true}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className='state'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>State</label>\r\n                                        <Select\r\n                                            options={State?.getStatesOfCountry(selectedCountry?.isoCode)}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            value={selectedState}\r\n                                            onChange={(item) => {\r\n                                                setSelectedState(item);\r\n                                            }}\r\n                                            placeholder='Select State'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className='city'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>City</label>\r\n                                        <Select\r\n                                            options={City.getCitiesOfState(\r\n                                                selectedState?.countryCode,\r\n                                                selectedState?.isoCode\r\n                                            )}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            value={selectedCity}\r\n                                            onChange={(item) => {\r\n                                                setSelectedCity(item);\r\n                                            }}\r\n                                            placeholder='Select City'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        {/* <div>\r\n                            <div className='mt-3'>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        // checked={false}\r\n                                    //   onChange={(e) => setConsentGiven(e.target.checked)}\r\n                                    />\r\n                                    {' '}I agree to receive text messages (e.g., mobile number verification with one time passcode) at the mobile number provided, and I acknowledge that message frequency may vary. Message and data rates may apply. View our <a href=\"/privacy-policy\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>.\r\n                                </label>\r\n                            </div>\r\n                            <div className='mt-3'>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        // checked={false}\r\n                                    //   onChange={(e) => setOwnershipConfirmed(e.target.checked)}\r\n                                    />\r\n                                    {' '}I confirm that I am the owner or authorized user of the mobile number provided.\r\n                                </label>\r\n                            </div>\r\n                            <div className='mt-3'>\r\n                                <p>\r\n                                    We respect your privacy and are committed to protecting your personal data. For more information, please read our <a href=\"/privacy-policy\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>.\r\n                                </p>\r\n                            </div>\r\n                        </div> */}\r\n                        <div>\r\n                            {errMsgDiv &&\r\n                                <div style={customCssForMsg}>\r\n                                    <label>{errMsg}</label>\r\n                                </div>}\r\n                        </div>\r\n                        <Button\r\n                            className='dashboard-button mt-3'\r\n                            onClick={handleMandatoryUpdateFieldsSubmit}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MandatoryUpdateFields;\r\n\r\n/**<Multiselect\r\n                                            id='gender'\r\n                                            options={genderList}\r\n                                            onSelect={onSelectGender}\r\n                                            displayValue=\"name\"\r\n                                            placeholder=\"Select Your Gender\"\r\n                                            singleSelect={true}\r\n                                            avoidHighlightFirstOption={true}\r\n                                            style={{\r\n                                                chips: {\r\n                                                    color: whiteColor,\r\n                                                    background: childColor,\r\n                                                },\r\n                                            }}\r\n                                        /> */\r\n\r\n/**\r\n *  <div>\r\n            <Multiselect\r\n                options={technologies} \r\n                onSelect={onSelect} \r\n                onRemove={onRemove} \r\n                displayValue=\"name\"\r\n                placeholder=\"Select Technical Stack\"\r\n            />\r\n        </div>\r\n */\r\n\r\n/**\r\n * {\r\n                                multiselectContainer: { // To change css for multiselect (Width,height,etc..)\r\n                                  \r\n                                },\r\n                                searchBox: { // To change search box element look\r\n                                //   border: 'none',\r\n                                //   fontSize: '10px',\r\n                                //   minHeight: '50px',\r\n                                },\r\n                                inputField: { // To change input field position or margin\r\n                                    // margin: '5px',\r\n                                },\r\n                                chips: { // To change css chips(Selected options)\r\n                                  background: '#8CB9BD',\r\n                                },\r\n                                optionContainer: { // To change css for option container \r\n                                //   border: '2px solid',\r\n                                },\r\n                                option: { // To change css for dropdown options\r\n                                //   color: 'black',\r\n                                },\r\n                                groupHeading: { // To chanage group heading style\r\n                                  \r\n                                }\r\n                              }\r\n */\r\n\r\n/**\r\n * <div>\r\n            <Modal show={showModal} onHide={handleClose} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    ...\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\">\r\n                        Save changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n */"],"mappings":"AAAA,MAAO,6BAA6B,CACpC,OAASA,MAAM,CAAEC,GAAG,CAAEC,SAAS,CAAEC,KAAK,CAAEC,GAAG,KAAQ,iBAAiB,CACpE,OAASC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAC3C,MAAO,CAAAC,WAAW,KAAM,4BAA4B,CACpD,OAASC,UAAU,KAAQ,2BAA2B,CACtD,MAAO,qCAAqC,CAC5C,MAAO,CAAAC,MAAM,KAAM,cAAc,CACjC,OAASC,IAAI,CAAEC,OAAO,CAAEC,KAAK,KAAQ,oBAAoB,CACzD,MAAO,CAAAC,aAAa,KAAM,mDAAmD,CAC7E,MAAO,CAAAC,SAAS,KAAM,oBAAoB,CAC1C,MAAO,CAAAC,WAAW,KAAM,+CAA+C,CACvE,MAAO,CAAAC,UAAU,KAAM,2CAA2C,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEnE,QAAS,CAAAC,qBAAqBA,CAAA,CAAG,CAE7B,KAAM,CAAAC,MAAM,CAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,CACnD,KAAM,CAAAC,QAAQ,CAAGF,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC,CAEvD,KAAM,CAACE,UAAU,CAAEC,aAAa,CAAC,CAAGrB,QAAQ,CAAC,KAAK,CAAC,CAEnD,KAAM,CAACsB,YAAY,CAAEC,eAAe,CAAC,CAAGvB,QAAQ,CAACQ,SAAS,CAACgB,aAAa,CAAC,CAEzE,KAAM,CAACC,SAAS,CAAEC,YAAY,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CAChD,KAAM,CAAA2B,gBAAgB,CAAGA,CAAA,GAAMD,YAAY,CAAC,KAAK,CAAC,CAElD,KAAM,CAAAE,UAAU,CAAGC,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAC/F,KAAM,CAAAC,UAAU,CAAGJ,gBAAgB,CAACC,QAAQ,CAACC,eAAe,CAAC,CAACC,gBAAgB,CAAC,eAAe,CAAC,CAE/F;AACA,KAAM,CAACE,SAAS,CAAEC,YAAY,CAAC,CAAGnC,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAACoC,MAAM,CAAEC,SAAS,CAAC,CAAGrC,QAAQ,CAAC,EAAE,CAAC,CACxC;AACA,KAAM,CAAAsC,kCAAkC,CAAIC,YAAY,EAAK,CACzDF,SAAS,CAACE,YAAY,CAAC,CACvBJ,YAAY,CAAC,IAAI,CAAC,CAClBK,UAAU,CAAC,IAAM,CACbH,SAAS,CAAC,EAAE,CAAC,CACbF,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,CAAE3B,SAAS,CAACiC,0BAA0B,CAAC,CAC5C,CAAC,CAED;AACA,KAAM,CAAAC,kCAAkC,CAAIH,YAAY,EAAK,CACzDhB,eAAe,CAAC,OAAO,CAAC,CACxBc,SAAS,CAACE,YAAY,CAAC,CACvBJ,YAAY,CAAC,IAAI,CAAC,CAClBK,UAAU,CAAC,IAAM,CACbH,SAAS,CAAC,EAAE,CAAC,CACbF,YAAY,CAAC,KAAK,CAAC,CACnBZ,eAAe,CAAC,SAAS,CAAC,CAC9B,CAAC,CAAEf,SAAS,CAACmC,4BAA4B,CAAC,CAC9C,CAAC,CAED;AACA,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAG7C,QAAQ,CAAC,CAAC,CAAC,CAC/C,KAAM,CAAA8C,qBAAqB,CAAIC,CAAC,EAAKF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAElE;AACA,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGnD,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACoD,WAAW,CAAEC,cAAc,CAAC,CAAGrD,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACsD,oBAAoB,CAAEC,uBAAuB,CAAC,CAAGvD,QAAQ,CAAC,IAAI,CAAC,CACtE,KAAM,CAACwD,IAAI,CAAEC,OAAO,CAAC,CAAGzD,QAAQ,CAAC,EAAE,CAAC,CACpC,KAAM,CAAA0D,iBAAiB,CAAGA,CAACR,KAAK,CAAES,OAAO,GAAK,CAC1C,KAAM,CAAAC,mBAAmB,CAAG,GAAG,CAAGD,OAAO,CAACA,OAAO,CAACE,QAAQ,CAC1D,KAAM,CAAAC,uBAAuB,CAAGZ,KAAK,CAACa,OAAO,CAACH,mBAAmB,CAAE,EAAE,CAAC,CACtET,QAAQ,CAACW,uBAAuB,CAAC,CACjC;AACA;AACA;AACA;AACA;AACAP,uBAAuB,CAACI,OAAO,CAACK,UAAU,CAAC,CAC3CX,cAAc,CAACM,OAAO,CAACA,OAAO,CAACE,QAAQ,CAAC,CACxCJ,OAAO,CAACE,OAAO,CAACA,OAAO,CAACH,IAAI,CAAC,CAC7BS,mCAAmC,CAACN,OAAO,CAACA,OAAO,CAACH,IAAI,CAAC,CAC7D,CAAC,CAED,KAAM,CAAAS,mCAAmC,CAAIC,gBAAgB,EAAK,CAC9D,GAAIA,gBAAgB,CAAE,CAClB,KAAM,CAAAC,SAAS,CAAG9D,OAAO,CAAC+D,eAAe,CAAC,CAAC,CAC3C,KAAM,CAAAC,YAAY,CAAGF,SAAS,CAACG,IAAI,CAACX,OAAO,EAAIA,OAAO,CAACY,OAAO,GAAKL,gBAAgB,CAACM,WAAW,CAAC,CAAC,CAAC,CAClG,GAAIH,YAAY,CAAE,CACdI,kBAAkB,CAACJ,YAAY,CAAC,CACpC,CACJ,CACJ,CAAC,CAED;AACA,KAAM,CAACK,MAAM,CAAEC,SAAS,CAAC,CAAG3E,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAAA4E,UAAU,CAAG,CACf,CAAEC,IAAI,CAAE,MAAO,CAAC,CAChB,CAAEA,IAAI,CAAE,QAAS,CAAC,CAClB,CAAEA,IAAI,CAAE,QAAS,CAAC,CACrB,CACD,KAAM,CAAAC,cAAc,CAAIC,IAAI,EAAK,CAC7BJ,SAAS,CAACI,IAAI,CAACF,IAAI,CAAC,CACxB,CAAC,CAED;AACA,KAAM,CAACG,YAAY,CAAEC,eAAe,CAAC,CAAGjF,QAAQ,CAAC,EAAE,CAAC,CACpD,KAAM,CAACkF,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGnF,QAAQ,CAAC,EAAE,CAAC,CAC5D,KAAM,CAAAoF,kBAAkB,CAAGA,CAACC,YAAY,CAAEC,YAAY,GAAK,CACvDL,eAAe,CAAC,CAAC,GAAGI,YAAY,CAAC,CAAC,CACtC,CAAC,CACD,KAAM,CAAAE,kBAAkB,CAAGA,CAACF,YAAY,CAAEG,WAAW,GAAK,CACtDP,eAAe,CAAC,CAAC,GAAGI,YAAY,CAAC,CAAC,CACtC,CAAC,CAEDtF,SAAS,CAAC,IAAM,CACZ,KAAM,CAAA0F,gBAAgB,CAAG,KAAAA,CAAA,GAAY,CACjCpE,aAAa,CAAC,IAAI,CAAC,CACnB,GAAI,CACA,KAAM,CAAAqE,YAAY,CAAG,KAAM,CAAAnF,aAAa,CAACkF,gBAAgB,CAAC,CAAC,CAC3DE,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CACzBP,mBAAmB,CAACO,YAAY,CAAC,CACrC,CAAE,MAAOG,KAAK,CAAE,CACZF,OAAO,CAACC,GAAG,CAACC,KAAK,CAACC,OAAO,CAAC,CAC9B,CAAC,OAAS,CACNzE,aAAa,CAAC,KAAK,CAAC,CACxB,CACJ,CAAC,CACDoE,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAACM,eAAe,CAAEtB,kBAAkB,CAAC,CAAGzE,QAAQ,CAAC,IAAI,CAAC,CAC5D,KAAM,CAACgG,aAAa,CAAEC,gBAAgB,CAAC,CAAGjG,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACkG,YAAY,CAAEC,eAAe,CAAC,CAAGnG,QAAQ,CAAC,IAAI,CAAC,CAEtD,KAAM,CAAAoG,iCAAiC,CAAG,KAAAA,CAAA,GAAY,CAClDT,OAAO,CAACC,GAAG,CAACzE,QAAQ,CAAC,CACrB,GAAIA,QAAQ,GAAKX,SAAS,CAAC6F,QAAQ,GAAKrB,YAAY,GAAK,IAAI,EAAIA,YAAY,CAACsB,MAAM,GAAK,CAAC,EAAItB,YAAY,CAACsB,MAAM,CAAG,CAAC,CAAC,CAAE,CACpH;AACAhE,kCAAkC,CAAC,+CAA+C,CAAC,CACvF,CAAC,IAAM,IAAInB,QAAQ,GAAKX,SAAS,CAAC6F,QAAQ,GAAKzD,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,EAAE,EAAIA,UAAU,GAAK2D,SAAS,EAAI3D,UAAU,GAAK,CAAC,CAAC,CAAE,CACtI+C,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC,CAC9DtD,kCAAkC,CAAC,6BAA6B,CAAC,CACrE,CAAC,IAAM,IAAInB,QAAQ,GAAKX,SAAS,CAAC6F,QAAQ,GAAKzD,UAAU,GAAK,IAAI,EAAIA,UAAU,GAAK,CAAC,EAAIA,UAAU,CAAG,EAAE,CAAC,CAAE,CACxG+C,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC,CAC9DtD,kCAAkC,CAAC,+CAA+C,CAAC,CACvF,CAAC,IAAM,IAAI,CAACkE,qBAAqB,CAAE,CAC/BlE,kCAAkC,CAAC,iCAAiC,CAAC,CACzE,CAAC,IAAO,IAAIY,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAK,EAAE,EAAIA,KAAK,GAAKqD,SAAS,CAAE,CAC/DZ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC,CACtCtD,kCAAkC,CAAC,uCAAuC,CAAC,CAC/E,CAAC,IAAM,IAAIoC,MAAM,GAAK,IAAI,EAAIA,MAAM,GAAK,EAAE,CAAE,CACzCiB,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC,CACvCtD,kCAAkC,CAAC,2BAA2B,CAAC,CACnE,CAAC,IAAM,IAAIyD,eAAe,GAAK,IAAI,EAAIC,aAAa,GAAK,IAAI,EAAIE,YAAY,GAAK,IAAI,CAAE,CACpFP,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC,CACzCtD,kCAAkC,CAAC,yCAAyC,CAAC,CACjF,CAAC,IAAM,CACHjB,aAAa,CAAC,IAAI,CAAC,CACnB,KAAM,CAAAoF,OAAO,CAAG,CACZzF,MAAM,CAAEA,MAAM,CACdG,QAAQ,CAAEA,QAAQ,CAClBuF,cAAc,CAAE1B,YAAY,CAC5B2B,WAAW,CAAEzD,KAAK,CAClBE,WAAW,CAAEA,WAAW,CACxBwD,0BAA0B,CAAEtD,oBAAoB,CAChDuD,cAAc,CAAEjE,UAAU,CAC1B8B,MAAM,CAAEA,MAAM,CACdf,OAAO,CAAEoC,eAAe,CAAClB,IAAI,CAC7BiC,KAAK,CAAEd,aAAa,CAACnB,IAAI,CACzBkC,IAAI,CAAEb,YAAY,CAACrB,IACvB,CAAC,CACDc,OAAO,CAACC,GAAG,CAACa,OAAO,CAAC,CACpB,GAAI,CACA,KAAM,CAAAf,YAAY,CAAG,KAAM,CAAAjF,WAAW,CAACuG,qBAAqB,CAACP,OAAO,CAAC,CACrEd,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CACzBzE,YAAY,CAACgG,OAAO,CAAC,0BAA0B,CAAEvB,YAAY,CAACwB,cAAc,CAAC,CAC7ExE,kCAAkC,CAAC,uCAAuC,CAAC,CAC3EF,UAAU,CAAC,IAAM,CACbb,gBAAgB,CAAC,CAAC,CACtB,CAAC,CAAE,IAAI,CAAC,CACZ,CAAE,MAAOkE,KAAK,CAAE,CACZsB,iCAAiC,CAACtB,KAAK,CAACC,OAAO,CAAC,CACpD,CAAC,OAAS,CACNzE,aAAa,CAAC,KAAK,CAAC,CACxB,CACJ,CACJ,CAAC,CAED,KAAM,CAAA8F,iCAAiC,CAAIC,WAAW,EAAK,CACvD,GAAI5G,SAAS,CAAC6G,qBAAqB,GAAKD,WAAW,CAC/C9E,kCAAkC,CAAC,kCAAkC,CAAC,CAAC,IACtE,IAAI9B,SAAS,CAAC8G,gBAAgB,GAAKF,WAAW,CAC/C9E,kCAAkC,CAAC,wBAAwB,CAAC,CAAC,IAC5D,IAAI9B,SAAS,CAAC+G,yBAAyB,GAAKH,WAAW,CACxD9E,kCAAkC,CAAC,4BAA4B,CAAC,CAAC,IAEjE,CAAAA,kCAAkC,CAAC,gCAAgC,CAAC,CAC5E,CAAC,CAED,KAAM,CAACkF,SAAS,CAAEC,YAAY,CAAC,CAAGzH,QAAQ,CAAC,KAAK,CAAC,CACjD,KAAM,CAAA0H,aAAa,CAAG,KAAAA,CAAA,GAAY,CAE9B,GAAIxE,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAK,EAAE,EAAIA,KAAK,GAAKqD,SAAS,CAAE,CACvDjE,kCAAkC,CAAC,uCAAuC,CAAC,CAC/E,CAAC,IAAM,CACHjB,aAAa,CAAC,IAAI,CAAC,CACnB,KAAM,CAAAoF,OAAO,CAAG,CACZrD,WAAW,CAAEA,WAAW,CACxBuD,WAAW,CAAEzD,KAAK,CAClB0D,0BAA0B,CAAEtD,oBAAoB,CAChDqE,UAAU,CAAEnE,IAAI,CAChBxC,MAAM,CAAEA,MACZ,CAAC,CACD2E,OAAO,CAACC,GAAG,CAACa,OAAO,CAAC,CACpB,GAAI,CACA,KAAM,CAAAf,YAAY,CAAG,KAAM,CAAAjF,WAAW,CAACmH,oBAAoB,CAACnB,OAAO,CAAC,CACpEd,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CACzBhD,kCAAkC,CAACgD,YAAY,CAAC,CAChD+B,YAAY,CAAC,IAAI,CAAC,CACtB,CAAE,MAAO5B,KAAK,CAAE,CACZgC,gCAAgC,CAAChC,KAAK,CAACC,OAAO,CAAC,CAC/C2B,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,OAAS,CACNpG,aAAa,CAAC,KAAK,CAAC,CACxB,CACJ,CACJ,CAAC,CAED,KAAM,CAAAwG,gCAAgC,CAAIT,WAAW,EAAK,CACtD,GAAI5G,SAAS,CAAC6G,qBAAqB,GAAKD,WAAW,CAC/C9E,kCAAkC,CAAC,wCAAwC,CAAC,CAAC,IAC5E,IAAI9B,SAAS,CAAC8G,gBAAgB,GAAKF,WAAW,CAC/C9E,kCAAkC,CAAC,yBAAyB,CAAC,CAAC,IAC7D,IAAI9B,SAAS,CAACsH,oBAAoB,GAAKV,WAAW,CACnD9E,kCAAkC,CAAC,iCAAiC,CAAC,CAAC,IACrE,IAAI9B,SAAS,CAACuH,YAAY,GAAKX,WAAW,CAC3C9E,kCAAkC,CAAC,oBAAoB,CAAC,CAAC,IACxD,IAAI9B,SAAS,CAAC+G,yBAAyB,GAAKH,WAAW,CACxD9E,kCAAkC,CAAC,4BAA4B,CAAC,CAAC,IAEjE,CAAAA,kCAAkC,CAAC,gCAAgC,CAAC,CAC5E,CAAC,CAED,KAAM,CAAA0F,qBAAqB,CAAGA,CAAA,GAAM,CAChCP,YAAY,CAAC,KAAK,CAAC,CACvB,CAAC,CAED,KAAM,CAACQ,GAAG,CAAEC,MAAM,CAAC,CAAGlI,QAAQ,CAAC,EAAE,CAAC,CAClC,KAAM,CAAAmI,cAAc,CAAIpF,CAAC,EAAKmF,MAAM,CAACnF,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CACpD,KAAM,CAACuD,qBAAqB,CAAE4B,wBAAwB,CAAC,CAAGpI,QAAQ,CAAC,KAAK,CAAC,CACzE,KAAM,CAAAqI,eAAe,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAIJ,GAAG,GAAK,CAAC,EAAIA,GAAG,GAAK,IAAI,EAAIA,GAAG,GAAK,EAAE,EAAIA,GAAG,GAAK1B,SAAS,CAAE,CAC9DjE,kCAAkC,CAAC,kBAAkB,CAAC,CAC1D,CAAC,IAAM,IAAI2F,GAAG,CAAC3B,MAAM,GAAK,CAAC,CAAE,CACzBhE,kCAAkC,CAAC,aAAa,CAAC,CACrD,CAAC,IAAM,CACHjB,aAAa,CAAC,IAAI,CAAC,CACnB,KAAM,CAAAoF,OAAO,CAAG,CACZ6B,QAAQ,CAAEL,GAAG,CACbjH,MAAM,CAAEA,MACZ,CAAC,CACD2E,OAAO,CAACC,GAAG,CAACa,OAAO,CAAC,CACpB,GAAI,CACA,KAAM,CAAAf,YAAY,CAAG,KAAM,CAAAjF,WAAW,CAAC8H,sBAAsB,CAAC9B,OAAO,CAAC,CACtEd,OAAO,CAACC,GAAG,CAACF,YAAY,CAAC,CACzB0C,wBAAwB,CAAC,IAAI,CAAC,CAClC,CAAE,MAAOvC,KAAK,CAAE,CACZ2C,qBAAqB,CAAC3C,KAAK,CAACC,OAAO,CAAC,CACpCsC,wBAAwB,CAAC,KAAK,CAAC,CACnC,CAAC,OAAS,CACN/G,aAAa,CAAC,KAAK,CAAC,CACxB,CACJ,CACJ,CAAC,CAED,KAAM,CAAAmH,qBAAqB,CAAIpB,WAAW,EAAK,CAC3C,GAAI5G,SAAS,CAAC6G,qBAAqB,GAAKD,WAAW,CAC/C9E,kCAAkC,CAAC,wBAAwB,CAAC,CAAC,IAC5D,IAAI9B,SAAS,CAAC8G,gBAAgB,GAAKF,WAAW,CAC/C9E,kCAAkC,CAAC,yBAAyB,CAAC,CAAC,IAC7D,IAAI9B,SAAS,CAACiI,eAAe,GAAKrB,WAAW,CAC9C9E,kCAAkC,CAAC,0BAA0B,CAAC,CAAC,IAC9D,IAAI9B,SAAS,CAAC+G,yBAAyB,GAAKH,WAAW,CACxD9E,kCAAkC,CAAC,4BAA4B,CAAC,CAAC,IAEjE,CAAAA,kCAAkC,CAAC,gCAAgC,CAAC,CAC5E,CAAC,CAED;AACA,KAAM,CAAAoG,uBAAuB,CAAG,CAC5BC,MAAM,CAAEA,CAACC,QAAQ,CAAE9B,KAAK,IAAM,CAC1B,GAAG8B,QAAQ,CACXC,eAAe,CAAE/B,KAAK,CAACgC,SAAS,CAAGlH,UAAU,CAAG,EAAE,CAClDmH,KAAK,CAAEjC,KAAK,CAACgC,SAAS,CAAG7G,UAAU,CAAG,EAAE,CACxC,QAAQ,CAAE,CACN4G,eAAe,CAAEjH,UAAU,CAC3BmH,KAAK,CAAE9G,UACX,CACJ,CAAC,CACL,CAAC,CAED,KAAM,CAAA+G,eAAe,CAAG,CACpBC,QAAQ,CAAE,QAAQ,CAClBC,UAAU,CAAE,KAAK,CACjBH,KAAK,CAAEzH,YACX,CAAC,CAED,mBACIR,KAAA,QAAAqI,QAAA,EACK/H,UAAU,eAAIR,IAAA,CAACF,UAAU,GAAE,CAAC,cAC7BI,KAAA,CAACjB,KAAK,EAACuJ,SAAS,CAAC,+BAA+B,CAACC,IAAI,CAAC,IAAI,CAACC,IAAI,CAAE7H,SAAU,CAAC8H,MAAM,CAAE5H,gBAAiB,CAAC6H,QAAQ,MAACC,QAAQ,CAAC,QAAQ,CAAAN,QAAA,eAC5HvI,IAAA,CAAChB,SAAS,EAACwJ,SAAS,CAAC,MAAM,CAAAD,QAAA,cACvBvI,IAAA,CAACf,KAAK,CAAC6J,MAAM,EAAAP,QAAA,cACTvI,IAAA,CAACf,KAAK,CAAC8J,KAAK,EAACC,KAAK,CAAE,CAAEX,QAAQ,CAAE,MAAO,CAAE,CAAAE,QAAA,CAAC,kBAE1C,CAAa,CAAC,CACJ,CAAC,CACR,CAAC,cACZvI,IAAA,CAACf,KAAK,CAACgK,IAAI,EAAAV,QAAA,cACPrI,KAAA,CAAClB,SAAS,EAACwJ,SAAS,CAAC,MAAM,CAACQ,KAAK,CAAE,CAAEX,QAAQ,CAAE,MAAO,CAAE,CAAAE,QAAA,EACnDhI,QAAQ,GAAKX,SAAS,CAAC6F,QAAQ,eAC5BvF,KAAA,QAAAqI,QAAA,eACIrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,eAAY,EAAO,CAAC,cAClEvI,IAAA,CAACd,GAAG,EAAAqJ,QAAA,cACAvI,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACAvI,IAAA,QAAKwI,SAAS,CAAC,wBAAwB,CAAAD,QAAA,cACnCvI,IAAA,CAACX,WAAW,EACR6J,EAAE,CAAC,YAAY,CACfC,OAAO,CAAE7E,gBAAiB,CAC1B8E,QAAQ,CAAE5E,kBAAmB,CAC7B6E,QAAQ,CAAE1E,kBAAmB,CAC7B2E,YAAY,CAAC,gBAAgB,CAC7BC,WAAW,CAAC,sBAAsB,CAClCC,yBAAyB,CAAE,IAAK,CAChCR,KAAK,CAAE,CACHS,KAAK,CAAE,CACHC,UAAU,CAAE1I,UAChB,CACJ,CAAE,CACL,CAAC,CACD,CAAC,CACL,CAAC,CACL,CAAC,EACL,CACR,cACDd,KAAA,QAAKsI,SAAS,CAAC,MAAM,CAAAD,QAAA,eACjBrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,eAAY,EAAO,CAAC,cAClEvI,IAAA,CAACd,GAAG,EAAAqJ,QAAA,cACAvI,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,cAAc,CAACQ,KAAK,CAAE,CAAEW,OAAO,CAAE,MAAO,CAAE,CAAApB,QAAA,eACrDvI,IAAA,CAACV,UAAU,EACPsK,aAAa,CAAE,IAAK,CACpBC,QAAQ,CAAE/G,iBAAkB,CAC5BgH,UAAU,CAAE,CAAEC,KAAK,CAAE,MAAO,CAAE,CAC9BC,QAAQ,CAAEpD,SAAU,CACvB,CAAC,CACD,CAAChB,qBAAqB,eACnB5F,IAAA,CAAClB,MAAM,EACH0J,SAAS,CAAC,YAAY,CACtByB,OAAO,CAAEnD,aAAc,CACvBkD,QAAQ,CAAEpD,SAAU,CAAA2B,QAAA,CACvB,UAED,CAAQ,CACX,CACA3C,qBAAqB,eAClB5F,IAAA,CAAClB,MAAM,EACH0J,SAAS,CAAC,YAAY,CAAAD,QAAA,CACzB,UAED,CAAQ,CACX,CACC3B,SAAS,EAAI,CAAChB,qBAAqB,eACjC5F,IAAA,CAAClB,MAAM,EACH0J,SAAS,CAAC,YAAY,CACtByB,OAAO,CAAEnD,aAAc,CAAAyB,QAAA,CAC1B,QAED,CAAQ,CACX,EACA,CAAC,CACL,CAAC,CACL,CAAC,EACL,CAAC,CACL,CAAC3C,qBAAqB,EACnBgB,SAAS,eACL1G,KAAA,QAAKsI,SAAS,CAAC,MAAM,CAAAD,QAAA,eACjBrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,YAAS,EAAO,CAAC,cAC/DvI,IAAA,CAACd,GAAG,EAAAqJ,QAAA,cACAvI,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,cAAc,CAACQ,KAAK,CAAE,CAAEW,OAAO,CAAE,MAAO,CAAE,CAAApB,QAAA,eACrDvI,IAAA,UACIkK,IAAI,CAAC,QAAQ,CACbX,WAAW,CAAC,WAAW,CACvBP,KAAK,CAAE,CAAEmB,YAAY,CAAE,KAAM,CAAE,CAC/B9H,KAAK,CAAEgF,GAAI,CACXwC,QAAQ,CAAEtC,cAAe,CAC5B,CAAC,cACFvH,IAAA,CAAClB,MAAM,EACH0J,SAAS,CAAC,YAAY,CACtByB,OAAO,CAAExC,eAAgB,CAAAc,QAAA,CAC5B,QAED,CAAQ,CAAC,cACTvI,IAAA,CAAClB,MAAM,EACH0J,SAAS,CAAC,YAAY,CACtByB,OAAO,CAAE7C,qBAAsB,CAAAmB,QAAA,CAClC,mBAED,CAAQ,CAAC,EACR,CAAC,CACL,CAAC,CACL,CAAC,EACL,CAEZ,cACDvI,IAAA,QAAKwI,SAAS,CAAC,MAAM,CAAAD,QAAA,cACjBrI,KAAA,CAAChB,GAAG,EAAAqJ,QAAA,EACChI,QAAQ,GAAKX,SAAS,CAAC6F,QAAQ,eAC5BzF,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,YAAY,CAAAD,QAAA,eACvBrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,aAAU,EAAO,CAAC,cAChEvI,IAAA,UACIkK,IAAI,CAAC,QAAQ,CACb1B,SAAS,CAAC,UAAU,CACpBe,WAAW,CAAC,iBAAiB,CAC7BlH,KAAK,CAAEL,UAAW,CAClB6H,QAAQ,CAAE3H,qBAAsB,CAChCkI,SAAS,CAAGjI,CAAC,EAAK,CACd,KAAM,CAAAkI,WAAW,CAAG,CAAC,GAAG,CAAE,WAAW,CAAC,CACtC,IAAK,GAAI,CAAAC,CAAC,CAAG,CAAC,CAAEA,CAAC,EAAI,CAAC,CAAEA,CAAC,EAAE,CAAE,CACzBD,WAAW,CAACE,IAAI,CAACD,CAAC,CAACE,QAAQ,CAAC,CAAC,CAAC,CAClC,CACA,GAAI,CAACH,WAAW,CAACI,QAAQ,CAACtI,CAAC,CAACuI,GAAG,CAAC,CAAE,CAC9BvI,CAAC,CAACwI,cAAc,CAAC,CAAC,CACtB,CACA,GAAIxI,CAAC,CAACuI,GAAG,GAAK,GAAG,EAAIvI,CAAC,CAACC,MAAM,CAACC,KAAK,CAACoI,QAAQ,CAAC,GAAG,CAAC,CAAE,CAC/CtI,CAAC,CAACwI,cAAc,CAAC,CAAC,CACtB,CACA,GAAIxI,CAAC,CAACuI,GAAG,GAAK,GAAG,EAAIvI,CAAC,CAACC,MAAM,CAACwI,cAAc,GAAK,CAAC,CAAE,CAChDzI,CAAC,CAACwI,cAAc,CAAC,CAAC,CACtB,CACJ,CAAE,CACFE,IAAI,CAAC,KAAM;AAAA,CACXC,GAAG,CAAC,GAAG,CACPC,GAAG,CAAC,IAAI,CACX,CAAC,EACD,CAAC,CACL,CACR,cACD/K,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,qBAAqB,CAAAD,QAAA,eAChCrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,SAAM,EAAO,CAAC,cAC5DvI,IAAA,CAACT,MAAM,EACH2J,EAAE,CAAC,QAAQ,CACXC,OAAO,CAAEnF,UAAW,CACpBgH,cAAc,CAAG7B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF8B,cAAc,CAAG9B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACFU,QAAQ,CAAE3F,cAAe,CACzBqF,WAAW,CAAC,eAAe,CAC3B2B,MAAM,CAAEpD,uBAAwB,CACnC,CAAC,EACD,CAAC,CACL,CAAC,EACL,CAAC,CACL,CAAC,cACN9H,IAAA,QAAKwI,SAAS,CAAC,MAAM,CAAAD,QAAA,cACjBrI,KAAA,CAAChB,GAAG,EAAAqJ,QAAA,eACAvI,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,SAAS,CAAAD,QAAA,eACpBrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,UAAO,EAAO,CAAC,cAC7DvI,IAAA,CAACT,MAAM,EACH4J,OAAO,CAAE1J,OAAO,CAAC+D,eAAe,CAAC,CAAE,CACnCwH,cAAc,CAAG7B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF8B,cAAc,CAAG9B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF9G,KAAK,CAAE8C,eAAgB,CACvB0E,QAAQ,CAAG1F,IAAI,EAAK,CAChBN,kBAAkB,CAACM,IAAI,CAAC,CAC5B,CAAE,CACFoF,WAAW,CAAC,gBAAgB,CAC5B2B,MAAM,CAAEpD,uBAAwB,CAChCqD,UAAU,CAAE,IAAK,CACpB,CAAC,EACD,CAAC,CACL,CAAC,cACNnL,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,OAAO,CAAAD,QAAA,eAClBrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,QAAK,EAAO,CAAC,cAC3DvI,IAAA,CAACT,MAAM,EACH4J,OAAO,CAAEzJ,KAAK,SAALA,KAAK,iBAALA,KAAK,CAAE0L,kBAAkB,CAACjG,eAAe,SAAfA,eAAe,iBAAfA,eAAe,CAAExB,OAAO,CAAE,CAC7DqH,cAAc,CAAG7B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF8B,cAAc,CAAG9B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF9G,KAAK,CAAE+C,aAAc,CACrByE,QAAQ,CAAG1F,IAAI,EAAK,CAChBkB,gBAAgB,CAAClB,IAAI,CAAC,CAC1B,CAAE,CACFoF,WAAW,CAAC,cAAc,CAC1B2B,MAAM,CAAEpD,uBAAwB,CACnC,CAAC,EACD,CAAC,CACL,CAAC,cACN9H,IAAA,CAACjB,GAAG,EAAAwJ,QAAA,cACArI,KAAA,QAAKsI,SAAS,CAAC,MAAM,CAAAD,QAAA,eACjBrI,KAAA,UAAAqI,QAAA,eAAOvI,IAAA,SAAMgJ,KAAK,CAAE,CAAEb,KAAK,CAAE,KAAM,CAAE,CAAAI,QAAA,CAAC,GAAC,CAAM,CAAC,OAAI,EAAO,CAAC,cAC1DvI,IAAA,CAACT,MAAM,EACH4J,OAAO,CAAE3J,IAAI,CAAC6L,gBAAgB,CAC1BjG,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAE5C,WAAW,CAC1B4C,aAAa,SAAbA,aAAa,iBAAbA,aAAa,CAAEzB,OACnB,CAAE,CACFqH,cAAc,CAAG7B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF8B,cAAc,CAAG9B,OAAO,EAAK,CACzB,MAAO,CAAAA,OAAO,CAAC,MAAM,CAAC,CAC1B,CAAE,CACF9G,KAAK,CAAEiD,YAAa,CACpBuE,QAAQ,CAAG1F,IAAI,EAAK,CAChBoB,eAAe,CAACpB,IAAI,CAAC,CACzB,CAAE,CACFoF,WAAW,CAAC,aAAa,CACzB2B,MAAM,CAAEpD,uBAAwB,CACnC,CAAC,EACD,CAAC,CACL,CAAC,EACL,CAAC,CACL,CAAC,cA4BN9H,IAAA,QAAAuI,QAAA,CACKjH,SAAS,eACNtB,IAAA,QAAKgJ,KAAK,CAAEZ,eAAgB,CAAAG,QAAA,cACxBvI,IAAA,UAAAuI,QAAA,CAAQ/G,MAAM,CAAQ,CAAC,CACtB,CAAC,CACT,CAAC,cACNxB,IAAA,CAAClB,MAAM,EACH0J,SAAS,CAAC,uBAAuB,CACjCyB,OAAO,CAAEzE,iCAAkC,CAAA+C,QAAA,CAC9C,QAED,CAAQ,CAAC,EACF,CAAC,CACJ,CAAC,EACV,CAAC,EACP,CAAC,CAGd,CAEA,cAAe,CAAApI,qBAAqB,CAEpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAdA,CAgBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAVA,CAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GA1BA,CA4BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
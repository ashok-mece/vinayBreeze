{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze(15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\fetchuser\\\\CompanyUsersComponent.js\\\\CompanyUsersComponent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport AdminService from '../../../../../Services/admin_service/AdminService';\nimport Constants from '../../../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CompanyUsersComponent = () => {\n  _s();\n  const [enrolledCandidates, setEnrolledCandidates] = useState([]);\n  const [selectedCompany, setSelectedCompany] = useState(\"\");\n  const [showEnrolledCandidates, setShowEnrolledCandidates] = useState(false);\n  const [loadingBar, setLoadingBar] = useState(false);\n  const [errorMessageDiv, setErrorMessageDiv] = useState(false);\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [companyName, setCompanyName] = useState(\"\"); // State for company name\n\n  const fetchCompaniesData = async () => {\n    try {\n      const response = await AdminService.getCompanies(); // Replace with actual API call\n      console.log(response);\n    } catch (error) {\n      console.error(\"Error fetching companies:\", error.message);\n    }\n  };\n  const handleCloseCompanyModal = () => {\n    fetchCompaniesData();\n    setShowEnrolledCandidates(false);\n    setSelectedCompany(\"\");\n    setEnrolledCandidates([]);\n  };\n  const fetchUsersWithCompanyName = async () => {\n    if (!companyName.trim()) {\n      displayErrorMessage(\"Please enter a valid company name\");\n      return;\n    }\n    setLoadingBar(true);\n    const requestPayload = {\n      companyName\n    }; // Payload includes company name\n    try {\n      const responseData = await AdminService.fetchCandidatesByCompany(requestPayload);\n      console.log(responseData);\n      if (responseData.length === 0) {\n        displayErrorMessage(\"No candidates found for this company\");\n      } else {\n        setEnrolledCandidates(responseData);\n        setSelectedCompany(companyName);\n        setShowEnrolledCandidates(true);\n      }\n    } catch (error) {\n      console.error(error.message);\n      handleFetchCandidatesErrors(error.message);\n    } finally {\n      setLoadingBar(false);\n    }\n  };\n  const handleFetchCandidatesErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) displayErrorMessage(\"The company name is invalid\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) displayErrorMessage(\"Sorry, Our service is currently down\");else displayErrorMessage(\"Could not process your request\");\n  };\n  const displayErrorMessage = message => {\n    setErrorMessage(message);\n    setErrorMessageDiv(true);\n    setTimeout(() => {\n      setErrorMessage(\"\");\n      setErrorMessageDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Company Users\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), errorMessageDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"companyName\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"Enter Company Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"companyName\",\n        value: companyName,\n        onChange: e => setCompanyName(e.target.value),\n        placeholder: \"Enter company name\",\n        style: {\n          padding: \"5px\",\n          fontSize: \"14px\",\n          borderRadius: \"5px\",\n          border: \"1px solid #ccc\",\n          marginRight: \"10px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchUsersWithCompanyName,\n        style: {\n          padding: \"5px 10px\",\n          fontSize: \"14px\",\n          borderRadius: \"5px\",\n          backgroundColor: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          cursor: \"pointer\"\n        },\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), loadingBar && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 28\n    }, this), showEnrolledCandidates && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Enrolled Candidates for \", selectedCompany]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(enrolledCandidates, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(CompanyUsersComponent, \"OL/L83QxSI54iQgue0oMzQwunLA=\");\n_c = CompanyUsersComponent;\nexport default CompanyUsersComponent;\nvar _c;\n$RefreshReg$(_c, \"CompanyUsersComponent\");","map":{"version":3,"names":["React","useState","useEffect","AdminService","Constants","jsxDEV","_jsxDEV","CompanyUsersComponent","_s","enrolledCandidates","setEnrolledCandidates","selectedCompany","setSelectedCompany","showEnrolledCandidates","setShowEnrolledCandidates","loadingBar","setLoadingBar","errorMessageDiv","setErrorMessageDiv","errorMessage","setErrorMessage","companyName","setCompanyName","fetchCompaniesData","response","getCompanies","console","log","error","message","handleCloseCompanyModal","fetchUsersWithCompanyName","trim","displayErrorMessage","requestPayload","responseData","fetchCandidatesByCompany","length","handleFetchCandidatesErrors","errorStatus","INVALID_REQUEST_FIELD","BREEZE_DATABASE_EXCEPTION","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","marginBottom","htmlFor","marginRight","type","id","value","onChange","e","target","placeholder","padding","fontSize","borderRadius","border","onClick","backgroundColor","color","cursor","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/fetchuser/CompanyUsersComponent.js/CompanyUsersComponent.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport AdminService from '../../../../../Services/admin_service/AdminService';\r\nimport Constants from '../../../../Constants';\r\n\r\nconst CompanyUsersComponent = () => {\r\n    const [enrolledCandidates, setEnrolledCandidates] = useState([]);\r\n    const [selectedCompany, setSelectedCompany] = useState(\"\");\r\n    const [showEnrolledCandidates, setShowEnrolledCandidates] = useState(false);\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n    const [errorMessageDiv, setErrorMessageDiv] = useState(false);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [companyName, setCompanyName] = useState(\"\"); // State for company name\r\n\r\n    const fetchCompaniesData = async () => {\r\n        try {\r\n            const response = await AdminService.getCompanies(); // Replace with actual API call\r\n            console.log(response);\r\n        } catch (error) {\r\n            console.error(\"Error fetching companies:\", error.message);\r\n        }\r\n    };\r\n\r\n    const handleCloseCompanyModal = () => {\r\n        fetchCompaniesData();\r\n        setShowEnrolledCandidates(false);\r\n        setSelectedCompany(\"\");\r\n        setEnrolledCandidates([]);\r\n    };\r\n\r\n    const fetchUsersWithCompanyName = async () => {\r\n        if (!companyName.trim()) {\r\n            displayErrorMessage(\"Please enter a valid company name\");\r\n            return;\r\n        }\r\n\r\n        setLoadingBar(true);\r\n        const requestPayload = { companyName }; // Payload includes company name\r\n        try {\r\n            const responseData = await AdminService.fetchCandidatesByCompany(requestPayload);\r\n            console.log(responseData);\r\n            if (responseData.length === 0) {\r\n                displayErrorMessage(\"No candidates found for this company\");\r\n            } else {\r\n                setEnrolledCandidates(responseData);\r\n                setSelectedCompany(companyName);\r\n                setShowEnrolledCandidates(true);\r\n            }\r\n        } catch (error) {\r\n            console.error(error.message);\r\n            handleFetchCandidatesErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    };\r\n\r\n    const handleFetchCandidatesErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            displayErrorMessage(\"The company name is invalid\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            displayErrorMessage(\"Sorry, Our service is currently down\");\r\n        else displayErrorMessage(\"Could not process your request\");\r\n    };\r\n\r\n    const displayErrorMessage = (message) => {\r\n        setErrorMessage(message);\r\n        setErrorMessageDiv(true);\r\n        setTimeout(() => {\r\n            setErrorMessage(\"\");\r\n            setErrorMessageDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Company Users</h1>\r\n            {errorMessageDiv && <div className=\"error-message\">{errorMessage}</div>}\r\n\r\n            {/* Input field for company name */}\r\n            <div style={{ marginBottom: \"10px\" }}>\r\n                <label htmlFor=\"companyName\" style={{ marginRight: \"10px\" }}>\r\n                    Enter Company Name:\r\n                </label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"companyName\"\r\n                    value={companyName}\r\n                    onChange={(e) => setCompanyName(e.target.value)}\r\n                    placeholder=\"Enter company name\"\r\n                    style={{\r\n                        padding: \"5px\",\r\n                        fontSize: \"14px\",\r\n                        borderRadius: \"5px\",\r\n                        border: \"1px solid #ccc\",\r\n                        marginRight: \"10px\",\r\n                    }}\r\n                />\r\n                <button\r\n                    onClick={fetchUsersWithCompanyName}\r\n                    style={{\r\n                        padding: \"5px 10px\",\r\n                        fontSize: \"14px\",\r\n                        borderRadius: \"5px\",\r\n                        backgroundColor: \"#007bff\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                >\r\n                    Search\r\n                </button>\r\n            </div>\r\n\r\n            {loadingBar && <p>Loading...</p>}\r\n\r\n            {showEnrolledCandidates && (\r\n                <div>\r\n                    <h2>Enrolled Candidates for {selectedCompany}</h2>\r\n                    <pre>{JSON.stringify(enrolledCandidates, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CompanyUsersComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
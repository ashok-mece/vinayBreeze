{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze(15)-frontend\\\\breeze\\\\src\\\\components\\\\register_component\\\\RegisterForm.js\",\n  _s = $RefreshSig$();\nimport './Register.css';\nimport { useState } from \"react\";\nimport { Dropdown, Form } from 'react-bootstrap';\nimport Constants from '../Constants';\nimport UserService from '../../Services/user_service/UserService';\nimport LoadingBar from '../loading_bar_component/LoadingBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction RegisterForm() {\n  _s();\n  const [loadingBar, setLoadingBar] = useState(false);\n\n  // Register Form Data Fields\n  const [registerFormData, setRegisterFormData] = useState({\n    userFirstname: '',\n    userLastname: '',\n    username: '',\n    password: '',\n    confirmPassword: '',\n    userType: '',\n    exponentTypeList: [],\n    companyName: '' // Added companyName field\n  });\n\n  // Fields for dropdown selection\n  const [selectedOptions, setSelectedOptions] = useState([]);\n  const [selectedRadio, setSelectedRadio] = useState('');\n\n  // Fields for error and success messages\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [sucMsgDiv, setSucMsgDiv] = useState(false);\n  const [sucMsg, setSucMsg] = useState(\"\");\n\n  // Regular Expressions for validation\n  const onlyLettersRegex = /^[A-Za-z]+$/;\n  const passwordPatternRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$/;\n  const handleRegisterFormData = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setRegisterFormData({\n      ...registerFormData,\n      [name]: value\n    });\n  };\n  const handleCheckboxChange = option => {\n    const newSelectedOptions = [...selectedOptions];\n    const selectedIndex = newSelectedOptions.indexOf(option);\n    if (selectedIndex === -1) {\n      newSelectedOptions.push(option);\n    } else {\n      newSelectedOptions.splice(selectedIndex, 1);\n    }\n    setSelectedOptions(newSelectedOptions);\n    setSelectedRadio('');\n  };\n  const handleRadioChange = option => {\n    setSelectedRadio(option);\n    setSelectedOptions([]);\n  };\n  const innerHtmlButton = () => {\n    if (selectedOptions.length > 0) {\n      return selectedOptions.join(', ');\n    } else if (selectedRadio !== '') {\n      return selectedRadio;\n    } else {\n      return 'How would you like to Register';\n    }\n  };\n  const registerFormDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n  const registerFormDisplaySucMsg = successMessage => {\n    setSucMsg(successMessage);\n    setSucMsgDiv(true);\n    setTimeout(() => {\n      setSucMsg(\"\");\n      setSucMsgDiv(false);\n    }, 1500);\n  };\n  const registerSubmitForm = async e => {\n    e.preventDefault();\n    const matchConfirmPassword = registerFormData.password === registerFormData.confirmPassword;\n    if (!onlyLettersRegex.test(registerFormData.userFirstname) || registerFormData.userFirstname.length < 3) {\n      registerFormDisplayErrMsg(\"First Name is not matching the pattern\");\n    } else if (!onlyLettersRegex.test(registerFormData.userLastname) || registerFormData.userLastname.length < 3) {\n      registerFormDisplayErrMsg(\"Last Name is not matching the pattern\");\n    } else if (!registerFormData.username.slice(-4).includes('.co')) {\n      registerFormDisplayErrMsg(\"Please provide a valid email address\");\n    } else if (!passwordPatternRegex.test(registerFormData.password)) {\n      registerFormDisplayErrMsg(\"Password is not matching the pattern\");\n    } else if (!matchConfirmPassword) {\n      registerFormDisplayErrMsg(\"Confirm Password is not matching the given Password\");\n    } else if (!registerFormData.companyName.trim()) {\n      registerFormDisplayErrMsg(\"Company Name cannot be empty\");\n    } else if (selectedOptions.length === 0 && selectedRadio === '') {\n      registerFormDisplayErrMsg(\"Please check, How you want to Register\");\n    } else {\n      setLoadingBar(true);\n      if (selectedOptions.length > 0) {\n        registerFormData.exponentTypeList = [...selectedOptions];\n        registerFormData.userType = \"EXPONENT\";\n      }\n      if (selectedRadio !== '') {\n        registerFormData.exponentTypeList = [];\n        registerFormData.userType = \"CANDIDATE\";\n      }\n      console.log(registerFormData);\n      try {\n        const responseData = await UserService.registerUser(registerFormData);\n        localStorage.setItem('userId', JSON.stringify(responseData.userId));\n        registerFormDisplaySucMsg('Registered Successfully...');\n        setTimeout(() => {\n          window.location.href = '/verify-email';\n        }, 1500);\n      } catch (error) {\n        handleRegisterUserError(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleRegisterUserError = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) registerFormDisplayErrMsg(\"Please enter valid input fields\");else if (Constants.EXISTING_USERNAME === errorStatus) registerFormDisplayErrMsg(\"Mail-Id already exists\");else if (Constants.ADDRESS_EXCEPTION === errorStatus) registerFormDisplayErrMsg(\"Please check the email syntax\");else if (Constants.MESSAGING_EXCEPTION === errorStatus) registerFormDisplayErrMsg(\"Could not send mail, Please try again\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) registerFormDisplayErrMsg(\"Sorry, Our service is down\");else registerFormDisplayErrMsg(\"Could not process your request\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Register-form-component\",\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Register-form-heading\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"my-3\",\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Register-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: registerSubmitForm,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Register-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userFirstname\",\n            value: registerFormData.userFirstname,\n            onChange: handleRegisterFormData,\n            required: true,\n            pattern: \"[A-Za-z]{3,}\",\n            title: \"Only letters are allowed and minimum length should be 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Register-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"userLastname\",\n            value: registerFormData.userLastname,\n            onChange: handleRegisterFormData,\n            required: true,\n            pattern: \"[A-Za-z]{3,}\",\n            title: \"Only letters are allowed and minimum length should be 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Register-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"username\",\n            value: registerFormData.username,\n            onChange: handleRegisterFormData,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Mail-Id\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Register-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: registerFormData.password,\n            onChange: handleRegisterFormData,\n            required: true,\n            pattern: \"^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\\\d).{8,15}$\",\n            title: \"Password should contain 1 uppercase, 1 digit, 1 Special Character, and length between 8-15.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Register-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"confirmPassword\",\n            value: registerFormData.confirmPassword,\n            onChange: handleRegisterFormData,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Confirm Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"Register-txt-field\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"companyName\",\n            value: registerFormData.companyName,\n            onChange: handleRegisterFormData,\n            required: true,\n            pattern: \"[A-Za-z\\\\s]{3,}\",\n            title: \"Only letters and spaces are allowed, and the minimum length should be 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Company Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"multiSelectDropdownInRegister\",\n          children: /*#__PURE__*/_jsxDEV(Dropdown, {\n            children: [/*#__PURE__*/_jsxDEV(Dropdown.Toggle, {\n              variant: \"success\",\n              id: \"dropdown-basic\",\n              className: \"Register-dropdown-button\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"Text-in-register-dropdown\",\n                children: innerHtmlButton()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Dropdown.Menu, {\n              className: \"p-2\",\n              children: /*#__PURE__*/_jsxDEV(Form, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  id: \"Trainer\",\n                  label: \"Trainer\",\n                  checked: selectedOptions.includes(Constants.TRAINER),\n                  onChange: () => handleCheckboxChange(Constants.TRAINER)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  id: \"Job-Support\",\n                  label: \"Job-Supporter\",\n                  checked: selectedOptions.includes(Constants.JOB_SUPPORTER),\n                  onChange: () => handleCheckboxChange(Constants.JOB_SUPPORTER)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"checkbox\",\n                  id: \"Interview-Support\",\n                  label: \"Interview-Supporter\",\n                  checked: selectedOptions.includes(Constants.INTERVIEW_SUPPORTER),\n                  onChange: () => handleCheckboxChange(Constants.INTERVIEW_SUPPORTER)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  id: \"Candidate\",\n                  label: \"Candidate\",\n                  checked: selectedRadio === Constants.CANDIDATE,\n                  onChange: () => handleRadioChange(Constants.CANDIDATE)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Register-div-for-err-msg\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), sucMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Register-div-for-suc-msg\",\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: sucMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn Register-breeze-button px-4\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Register-label-already-have\",\n          children: [\"Already have an account?\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"./login\",\n            className: \"Register-anchor-navigate\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n_s(RegisterForm, \"4d9lSTnLHDNCCIFdIMRMcvtxS7g=\");\n_c = RegisterForm;\nexport default RegisterForm;\nvar _c;\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["useState","Dropdown","Form","Constants","UserService","LoadingBar","jsxDEV","_jsxDEV","RegisterForm","_s","loadingBar","setLoadingBar","registerFormData","setRegisterFormData","userFirstname","userLastname","username","password","confirmPassword","userType","exponentTypeList","companyName","selectedOptions","setSelectedOptions","selectedRadio","setSelectedRadio","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","sucMsgDiv","setSucMsgDiv","sucMsg","setSucMsg","onlyLettersRegex","passwordPatternRegex","handleRegisterFormData","e","name","value","target","handleCheckboxChange","option","newSelectedOptions","selectedIndex","indexOf","push","splice","handleRadioChange","innerHtmlButton","length","join","registerFormDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","registerFormDisplaySucMsg","successMessage","registerSubmitForm","preventDefault","matchConfirmPassword","test","slice","includes","trim","console","log","responseData","registerUser","localStorage","setItem","JSON","stringify","userId","window","location","href","error","handleRegisterUserError","message","errorStatus","INVALID_REQUEST_FIELD","EXISTING_USERNAME","ADDRESS_EXCEPTION","MESSAGING_EXCEPTION","BREEZE_DATABASE_EXCEPTION","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","class","type","onChange","required","pattern","title","Toggle","variant","id","Menu","Check","label","checked","TRAINER","JOB_SUPPORTER","INTERVIEW_SUPPORTER","CANDIDATE","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/register_component/RegisterForm.js"],"sourcesContent":["import './Register.css';\r\nimport { useState } from \"react\";\r\nimport { Dropdown, Form } from 'react-bootstrap';\r\nimport Constants from '../Constants';\r\nimport UserService from '../../Services/user_service/UserService';\r\nimport LoadingBar from '../loading_bar_component/LoadingBar';\r\n\r\nfunction RegisterForm() {\r\n  const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n  // Register Form Data Fields\r\n  const [registerFormData, setRegisterFormData] = useState({\r\n    userFirstname: '',\r\n    userLastname: '',\r\n    username: '',\r\n    password: '',\r\n    confirmPassword: '',\r\n    userType: '',\r\n    exponentTypeList: [],\r\n    companyName: '' // Added companyName field\r\n  });\r\n\r\n  // Fields for dropdown selection\r\n  const [selectedOptions, setSelectedOptions] = useState([]);\r\n  const [selectedRadio, setSelectedRadio] = useState('');\r\n\r\n  // Fields for error and success messages\r\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n  const [sucMsgDiv, setSucMsgDiv] = useState(false);\r\n  const [sucMsg, setSucMsg] = useState(\"\");\r\n\r\n  // Regular Expressions for validation\r\n  const onlyLettersRegex = /^[A-Za-z]+$/;\r\n  const passwordPatternRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$/;\r\n\r\n  const handleRegisterFormData = (e) => {\r\n    const { name, value } = e.target;\r\n    setRegisterFormData({\r\n      ...registerFormData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const handleCheckboxChange = (option) => {\r\n    const newSelectedOptions = [...selectedOptions];\r\n    const selectedIndex = newSelectedOptions.indexOf(option);\r\n    if (selectedIndex === -1) {\r\n      newSelectedOptions.push(option);\r\n    } else {\r\n      newSelectedOptions.splice(selectedIndex, 1);\r\n    }\r\n    setSelectedOptions(newSelectedOptions);\r\n    setSelectedRadio('');\r\n  };\r\n\r\n  const handleRadioChange = (option) => {\r\n    setSelectedRadio(option);\r\n    setSelectedOptions([]);\r\n  };\r\n\r\n  const innerHtmlButton = () => {\r\n    if (selectedOptions.length > 0) {\r\n      return selectedOptions.join(', ');\r\n    } else if (selectedRadio !== '') {\r\n      return selectedRadio;\r\n    } else {\r\n      return 'How would you like to Register';\r\n    }\r\n  };\r\n\r\n  const registerFormDisplayErrMsg = (errorMessage) => {\r\n    setErrMsg(errorMessage);\r\n    setErrMsgDiv(true);\r\n    setTimeout(() => {\r\n      setErrMsg(\"\");\r\n      setErrMsgDiv(false);\r\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n  };\r\n\r\n  const registerFormDisplaySucMsg = (successMessage) => {\r\n    setSucMsg(successMessage);\r\n    setSucMsgDiv(true);\r\n    setTimeout(() => {\r\n      setSucMsg(\"\");\r\n      setSucMsgDiv(false);\r\n    }, 1500);\r\n  };\r\n\r\n  const registerSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n    const matchConfirmPassword = registerFormData.password === registerFormData.confirmPassword;\r\n\r\n    if (!onlyLettersRegex.test(registerFormData.userFirstname) || registerFormData.userFirstname.length < 3) {\r\n      registerFormDisplayErrMsg(\"First Name is not matching the pattern\");\r\n    } else if (!onlyLettersRegex.test(registerFormData.userLastname) || registerFormData.userLastname.length < 3) {\r\n      registerFormDisplayErrMsg(\"Last Name is not matching the pattern\");\r\n    } else if (!((registerFormData.username).slice(-4)).includes('.co')) {\r\n      registerFormDisplayErrMsg(\"Please provide a valid email address\");\r\n    } else if (!passwordPatternRegex.test(registerFormData.password)) {\r\n      registerFormDisplayErrMsg(\"Password is not matching the pattern\");\r\n    } else if (!matchConfirmPassword) {\r\n      registerFormDisplayErrMsg(\"Confirm Password is not matching the given Password\");\r\n    } else if (!registerFormData.companyName.trim()) {\r\n      registerFormDisplayErrMsg(\"Company Name cannot be empty\");\r\n    } else if (selectedOptions.length === 0 && selectedRadio === '') {\r\n      registerFormDisplayErrMsg(\"Please check, How you want to Register\");\r\n    } else {\r\n      setLoadingBar(true);\r\n      if (selectedOptions.length > 0) {\r\n        registerFormData.exponentTypeList = [...selectedOptions];\r\n        registerFormData.userType = \"EXPONENT\";\r\n      }\r\n      if (selectedRadio !== '') {\r\n        registerFormData.exponentTypeList = [];\r\n        registerFormData.userType = \"CANDIDATE\";\r\n      }\r\n      console.log(registerFormData);\r\n\r\n      try {\r\n        const responseData = await UserService.registerUser(registerFormData);\r\n        localStorage.setItem('userId', JSON.stringify(responseData.userId));\r\n        registerFormDisplaySucMsg('Registered Successfully...');\r\n        setTimeout(() => {\r\n          window.location.href = '/verify-email';\r\n        }, 1500);\r\n      } catch (error) {\r\n        handleRegisterUserError(error.message);\r\n      } finally {\r\n        setLoadingBar(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleRegisterUserError = (errorStatus) => {\r\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n      registerFormDisplayErrMsg(\"Please enter valid input fields\");\r\n    else if (Constants.EXISTING_USERNAME === errorStatus)\r\n      registerFormDisplayErrMsg(\"Mail-Id already exists\");\r\n    else if (Constants.ADDRESS_EXCEPTION === errorStatus)\r\n      registerFormDisplayErrMsg(\"Please check the email syntax\");\r\n    else if (Constants.MESSAGING_EXCEPTION === errorStatus)\r\n      registerFormDisplayErrMsg(\"Could not send mail, Please try again\");\r\n    else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n      registerFormDisplayErrMsg(\"Sorry, Our service is down\");\r\n    else\r\n      registerFormDisplayErrMsg(\"Could not process your request\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Register-form-component\">\r\n      {loadingBar && <LoadingBar />}\r\n      <div className=\"Register-form-heading\">\r\n        <h2 className='my-3'>Registration</h2>\r\n      </div>\r\n      <div className=\"Register-form\">\r\n        <form onSubmit={registerSubmitForm} className=\"form\">\r\n          <div class=\"Register-txt-field\">\r\n            <input type=\"text\" name=\"userFirstname\" value={registerFormData.userFirstname} onChange={handleRegisterFormData} required\r\n              pattern=\"[A-Za-z]{3,}\" title=\"Only letters are allowed and minimum length should be 3\" />\r\n            <span></span>\r\n            <label>First Name</label>\r\n          </div>\r\n          <div class=\"Register-txt-field\">\r\n            <input type=\"text\" name=\"userLastname\" value={registerFormData.userLastname} onChange={handleRegisterFormData} required\r\n              pattern=\"[A-Za-z]{3,}\" title=\"Only letters are allowed and minimum length should be 3\" />\r\n            <span></span>\r\n            <label>Last Name</label>\r\n          </div>\r\n          <div class=\"Register-txt-field\">\r\n            <input type=\"email\" name=\"username\" value={registerFormData.username} onChange={handleRegisterFormData} required />\r\n            <span></span>\r\n            <label>Mail-Id</label>\r\n          </div>\r\n          <div class=\"Register-txt-field\">\r\n            <input type=\"password\" name=\"password\" value={registerFormData.password} onChange={handleRegisterFormData} required\r\n              pattern=\"^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$\" title=\"Password should contain 1 uppercase, 1 digit, 1 Special Character, and length between 8-15.\" />\r\n            <span></span>\r\n            <label>Password</label>\r\n          </div>\r\n          <div class=\"Register-txt-field\">\r\n            <input type=\"password\" name=\"confirmPassword\" value={registerFormData.confirmPassword} onChange={handleRegisterFormData} required />\r\n            <span></span>\r\n            <label>Confirm Password</label>\r\n          </div>\r\n          <div class=\"Register-txt-field\">\r\n            <input type=\"text\" name=\"companyName\" value={registerFormData.companyName} onChange={handleRegisterFormData} required\r\n              pattern=\"[A-Za-z\\s]{3,}\" title=\"Only letters and spaces are allowed, and the minimum length should be 3\" />\r\n            <span></span>\r\n            <label>Company Name</label>\r\n          </div>\r\n          <div className=\"multiSelectDropdownInRegister\">\r\n            <Dropdown>\r\n              <Dropdown.Toggle variant=\"success\" id=\"dropdown-basic\" className=\"Register-dropdown-button\">\r\n                <span className=\"Text-in-register-dropdown\">{innerHtmlButton()}</span>\r\n              </Dropdown.Toggle>\r\n              <Dropdown.Menu className=\"p-2\">\r\n                <Form>\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    id=\"Trainer\"\r\n                    label=\"Trainer\"\r\n                    checked={selectedOptions.includes(Constants.TRAINER)}\r\n                    onChange={() => handleCheckboxChange(Constants.TRAINER)}\r\n                  />\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    id=\"Job-Support\"\r\n                    label=\"Job-Supporter\"\r\n                    checked={selectedOptions.includes(Constants.JOB_SUPPORTER)}\r\n                    onChange={() => handleCheckboxChange(Constants.JOB_SUPPORTER)}\r\n                  />\r\n                  <Form.Check\r\n                    type=\"checkbox\"\r\n                    id=\"Interview-Support\"\r\n                    label=\"Interview-Supporter\"\r\n                    checked={selectedOptions.includes(Constants.INTERVIEW_SUPPORTER)}\r\n                    onChange={() => handleCheckboxChange(Constants.INTERVIEW_SUPPORTER)}\r\n                  />\r\n                  <Form.Check\r\n                    type=\"radio\"\r\n                    id=\"Candidate\"\r\n                    label=\"Candidate\"\r\n                    checked={selectedRadio === Constants.CANDIDATE}\r\n                    onChange={() => handleRadioChange(Constants.CANDIDATE)}\r\n                  />\r\n                </Form>\r\n              </Dropdown.Menu>\r\n            </Dropdown>\r\n          </div>\r\n          {errMsgDiv &&\r\n            <div className=\"Register-div-for-err-msg\">\r\n              <label>{errMsg}</label>\r\n            </div>}\r\n          {sucMsgDiv &&\r\n            <div className=\"Register-div-for-suc-msg\">\r\n              <label>{sucMsg}</label>\r\n            </div>}\r\n          <div>\r\n            <button type=\"submit\" className=\"btn Register-breeze-button px-4\">Register</button>\r\n          </div>\r\n          <div className=\"Register-label-already-have\">\r\n            Already have an account?&nbsp;\r\n            <a href=\"./login\" className=\"Register-anchor-navigate\">Login</a>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RegisterForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import'./VerifyEmail.css';import{useState}from'react';import Constants from'../Constants';import UserService from'../../Services/user_service/UserService';import LoadingBar from'../loading_bar_component/LoadingBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function VerifyEmailForm(){const[loadingBar,setLoadingBar]=useState(false);const[verifyEmailForm,setVerifyEmailForm]=useState({userId:JSON.parse(localStorage.getItem('userId')),emailOtp:''});//Fields for to display err msg div and label\nconst[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//Fields for to display success msg div and label\nconst[sucMsgDiv,setSucMsgDiv]=useState(false);const[sucMsg,setSucMsg]=useState(\"\");const handleRegisterFormData=e=>{const{name,value}=e.target;setVerifyEmailForm({...verifyEmailForm,[name]:value});};const verifyEmailDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};//JS for to display suc msg\nconst verifyEmailDisplaySucMsg=errorMessage=>{setSucMsg(errorMessage);setSucMsgDiv(true);setTimeout(()=>{setSucMsg(\"\");setSucMsgDiv(false);},1500);};const handleResendOTP=async()=>{setLoadingBar(true);let userData={\"userId\":verifyEmailForm.userId};try{const responseData=await UserService.resendOtp(userData);console.log(responseData);verifyEmailDisplaySucMsg(\"OTP Resend Successfully\");}catch(error){console.log(error);handleResensOtpErrors(error.message);}finally{setLoadingBar(false);}};const handleResensOtpErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)verifyEmailDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)verifyEmailDisplayErrMsg(\"Your registration is not found\");else if(Constants.VERIFIED===errorStatus)verifyEmailDisplayErrMsg(\"Your Email is Verified already\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)verifyEmailDisplayErrMsg(\"Sorry, Our service is down\");else verifyEmailDisplayErrMsg(\"Could not process your request\");};const verifyEmailSubmitForm=async e=>{e.preventDefault();setLoadingBar(true);try{const responseData=await UserService.verifyEmail(verifyEmailForm);console.log(responseData);verifyEmailDisplaySucMsg(\"OTP Verified Successfully\");setTimeout(()=>{window.location.href='/login';},2000);}catch(error){handleVerifyEmailError(error.message);}finally{setLoadingBar(false);}};const handleVerifyEmailError=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)verifyEmailDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.OTP_NOT_MATCHED===errorStatus)verifyEmailDisplayErrMsg(\"Please enter correct OTP\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)verifyEmailDisplayErrMsg(\"Your registration is not found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)verifyEmailDisplayErrMsg(\"Sry, Our service is down\");else verifyEmailDisplayErrMsg(\"Could not process your request\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"Verify-email-form-component\",children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"Verify-email-form-heading\",children:/*#__PURE__*/_jsx(\"h3\",{className:\"my-3\",children:\"OTP Verification\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Verify-email-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:verifyEmailSubmitForm,className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"Verify-email-txt-field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"emailOtp\",value:verifyEmailForm.emailOtp,onChange:handleRegisterFormData,pattern:\"\\\\d{6}\",required:true,title:\"Only numbers are allowed, and length should be 6\"}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Enter OTP\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex justify-content-between\",children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleResendOTP,className:\"Verify-email-button-resend mt-2\",children:\"Resend\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-end\",children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn Verify-email-breeze-button px-3\",children:\"Verify\"})})]}),errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{className:\"Verify-email-div-for-err-msg\",children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})}),sucMsgDiv&&/*#__PURE__*/_jsx(\"div\",{className:\"Verify-email-div-for-suc-msg\",children:/*#__PURE__*/_jsx(\"label\",{children:sucMsg})})]})})]});}export default VerifyEmailForm;","map":{"version":3,"names":["useState","Constants","UserService","LoadingBar","jsx","_jsx","jsxs","_jsxs","VerifyEmailForm","loadingBar","setLoadingBar","verifyEmailForm","setVerifyEmailForm","userId","JSON","parse","localStorage","getItem","emailOtp","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","sucMsgDiv","setSucMsgDiv","sucMsg","setSucMsg","handleRegisterFormData","e","name","value","target","verifyEmailDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","verifyEmailDisplaySucMsg","handleResendOTP","userData","responseData","resendOtp","console","log","error","handleResensOtpErrors","message","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","VERIFIED","BREEZE_DATABASE_EXCEPTION","verifyEmailSubmitForm","preventDefault","verifyEmail","window","location","href","handleVerifyEmailError","OTP_NOT_MATCHED","className","children","onSubmit","class","type","onChange","pattern","required","title","onClick"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/verify_email_component/VerifyEmailForm.js"],"sourcesContent":["import './VerifyEmail.css';\r\nimport { useState } from 'react';\r\nimport Constants from '../Constants';\r\nimport UserService from '../../Services/user_service/UserService';\r\nimport LoadingBar from '../loading_bar_component/LoadingBar';\r\n\r\nfunction VerifyEmailForm() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [verifyEmailForm, setVerifyEmailForm] = useState({\r\n        userId: JSON.parse(localStorage.getItem('userId')),\r\n        emailOtp: ''\r\n    });\r\n\r\n    //Fields for to display err msg div and label\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n    //Fields for to display success msg div and label\r\n    const [sucMsgDiv, setSucMsgDiv] = useState(false);\r\n    const [sucMsg, setSucMsg] = useState(\"\");\r\n\r\n    const handleRegisterFormData = (e) => {\r\n        const { name, value } = e.target;\r\n        setVerifyEmailForm({\r\n            ...verifyEmailForm,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    const verifyEmailDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    //JS for to display suc msg\r\n    const verifyEmailDisplaySucMsg = (errorMessage) => {\r\n        setSucMsg(errorMessage);\r\n        setSucMsgDiv(true);\r\n        setTimeout(() => {\r\n            setSucMsg(\"\");\r\n            setSucMsgDiv(false);\r\n        }, 1500);\r\n    }\r\n\r\n    const handleResendOTP = async () => {\r\n        setLoadingBar(true);\r\n        let userData = {\r\n            \"userId\": verifyEmailForm.userId,\r\n        }\r\n\r\n        try {\r\n            const responseData = await UserService.resendOtp(userData);\r\n            console.log(responseData);\r\n            verifyEmailDisplaySucMsg(\"OTP Resend Successfully\");\r\n        } catch (error) {\r\n            console.log(error);\r\n            handleResensOtpErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n    const handleResensOtpErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Your registration is not found\");\r\n        else if (Constants.VERIFIED === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Your Email is Verified already\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            verifyEmailDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const verifyEmailSubmitForm = async (e) => {\r\n        e.preventDefault();\r\n        setLoadingBar(true);\r\n        try {\r\n            const responseData = await UserService.verifyEmail(verifyEmailForm);\r\n            console.log(responseData);\r\n            verifyEmailDisplaySucMsg(\"OTP Verified Successfully\");\r\n            setTimeout(() => {\r\n                window.location.href = '/login';\r\n            }, 2000);\r\n        } catch (error) {\r\n            handleVerifyEmailError(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n\r\n    }\r\n\r\n    const handleVerifyEmailError = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.OTP_NOT_MATCHED === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Please enter correct OTP\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Your registration is not found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            verifyEmailDisplayErrMsg(\"Sry, Our service is down\");\r\n        else\r\n            verifyEmailDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    return (\r\n        <div className=\"Verify-email-form-component\">\r\n            {loadingBar && <LoadingBar />}\r\n            <div className=\"Verify-email-form-heading\">\r\n                <h3 className='my-3'>OTP Verification</h3>\r\n            </div>\r\n            <div className=\"Verify-email-form\">\r\n                <form onSubmit={verifyEmailSubmitForm} className=\"form\" >\r\n                    <div class=\"Verify-email-txt-field\">\r\n                        <input type=\"text\" name=\"emailOtp\" value={verifyEmailForm.emailOtp} onChange={handleRegisterFormData} pattern=\"\\d{6}\" required title='Only numbers are allowed, and length should be 6' />\r\n                        <span></span>\r\n                        <label>Enter OTP</label>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                            <button type='button' onClick={handleResendOTP} className=\"Verify-email-button-resend mt-2\">Resend</button>\r\n                        </div>\r\n                        <div className=\"text-end\">\r\n                            <button type=\"submit\" className=\"btn Verify-email-breeze-button px-3\">Verify</button>\r\n                        </div>\r\n                    </div>\r\n                    {errMsgDiv &&\r\n                        <div className=\"Verify-email-div-for-err-msg\">\r\n                            <label>{errMsg}</label>\r\n                        </div>}\r\n                    {sucMsgDiv &&\r\n                        <div className=\"Verify-email-div-for-suc-msg\">\r\n                            <label>{sucMsg}</label>\r\n                        </div>}\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default VerifyEmailForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
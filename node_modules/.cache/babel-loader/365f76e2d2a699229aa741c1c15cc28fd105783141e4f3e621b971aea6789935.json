{"ast":null,"code":"import{CDBDataTable}from'cdbreact';import'./AdminStartedTrainings.css';import{useEffect,useState}from'react';import AdminService from'../../../../../Services/admin_service/AdminService';import Constants from'../../../../Constants';import{Container,Modal}from'react-bootstrap';import Datetime from'react-datetime';import'react-datetime/css/react-datetime.css';import LoadingBar from'../../../../loading_bar_component/LoadingBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AdminStartedTrainings(){const[loadingBar,setLoadingBar]=useState(false);const childColor=getComputedStyle(document.documentElement).getPropertyValue('--child-color');// err msg\nconst[messageColor,setMessageColor]=useState(Constants.MESSAGE_COLOR);const[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//JS for to display err msg\nconst getStartedTrainingErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);// setTimeout(() => {\n//     setErrMsg(\"\");\n//     setErrMsgDiv(false);\n// }, 3000);\n};useEffect(()=>{handleStartedTrainings();// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);const[startedTrainings,setStartedTrainings]=useState([]);const handleStartedTrainings=async()=>{setLoadingBar(true);try{const responseData=await AdminService.getStartedTrainings();console.log(responseData);if(responseData.length===0){getStartedTrainingErrMsg('Started trainings are not found');}else{setStartedTrainings(responseData);}}catch(error){console.log(error.message);handleStartedTrainingsErrors(error.message);}finally{setLoadingBar(false);}};const handleStartedTrainingsErrors=errorStatus=>{if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)getStartedTrainingErrMsg(\"Sorry, Our service is down\");else getStartedTrainingErrMsg(\"Could not process your request\");};const startedTrainingsDataTableData=()=>{const moreInfo=trainingId=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{className:\"view-btn\",onClick:()=>handleViewButtonClicked(trainingId),children:\"View\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-1\",children:viewMoreInfoTrainingId===trainingId&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:viewMoreInfoErrMsg})})})]});};const columns=[{label:'Training Id',field:'trainingId',width:70},{label:'Trainer Name',field:'trainerName',width:70},{label:'Mail-Id',field:'trainerMail',width:70},{label:'Contact Number',field:'trainerPhone',width:70},{label:'Course',field:'course',width:70},{label:'Start Date',field:'courseStartDate',width:70},{label:'Start Time',field:'courseStartTime',width:70},{label:'End Date',field:'courseEndDate',width:70},{label:'More Info',field:'moreInfo',width:70,formatter:moreInfo}];const rows=startedTrainings.map(each=>{return{'trainingId':each.training.trainingId,'trainerName':each.trainer.userFirstname+\" \"+each.trainer.userLastname,'trainerMail':each.trainer.username,'trainerPhone':each.trainer.phoneNumberWithCountryCode,'course':each.training.courseName,'courseStartDate':Constants.convertUserTimezoneDateTime(each.training.courseStartDateAndTime).date,'courseStartTime':Constants.formatTime(Constants.convertUserTimezoneDateTime(each.training.courseStartDateAndTime).time),'courseEndDate':Constants.convertUserTimezoneDateTime(each.training.courseEndDate).date,'moreInfo':moreInfo(each.training.trainingId)};});return{columns,rows};};const[viewMoreInfoModal,setViewMoreInfoModal]=useState(false);const[viewMoreInfo,setViewMoreInfo]=useState(null);useEffect(()=>{// re render component when viewMoreInfo have changes\n},[viewMoreInfo]);const handleViewMoreInfoModalClose=()=>{setViewMoreInfoModal(false);setViewMoreInfo(null);setMeetingLink('');setCourseEndDate(null);setCourseStartDateAndTime(null);window.location.reload();};const handleViewButtonClicked=async trainingId=>{setLoadingBar(true);console.log(trainingId);const viewMoreInfoRequest={trainingId:trainingId};try{const responseData=await AdminService.viewMoreStartedTrainingInfo(viewMoreInfoRequest);console.log(responseData);setViewMoreInfo(responseData);setViewMoreInfoModal(true);setCourseStartDateAndTime(new Date(responseData.training.courseStartDate));}catch(error){console.log(error.message);handleViewMoreStartedtrainingInfoErrors(error.message,trainingId);}finally{setLoadingBar(false);}};const handleViewMoreStartedtrainingInfoErrors=(errorStatus,trainingId)=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)viewMoreInfoDisplayErrMsg(\"Training is invalid\",trainingId);else if(Constants.ENTITY_NOT_FOUND===errorStatus)viewMoreInfoDisplayErrMsg(\"Entity Not Found\",trainingId);else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)viewMoreInfoDisplayErrMsg(\"Sorry, Our service is down\",trainingId);else viewMoreInfoDisplayErrMsg(\"Could not process your request\",trainingId);};// view more info err msg\nconst[viewMoreInfoTrainingId,setViewMoreInfoTrainingId]=useState(0);const[viewMoreInfoErrMsg,setViewMoreInfoErrMsg]=useState(\"\");//JS for to display err msg\nconst viewMoreInfoDisplayErrMsg=(errorMessage,trainingId)=>{setViewMoreInfoErrMsg(errorMessage);setViewMoreInfoTrainingId(trainingId);setTimeout(()=>{setViewMoreInfoErrMsg('');setViewMoreInfoTrainingId(0);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};// meeting link upload code\nconst[meetingLink,setMeetingLink]=useState('');const handleMeetingLinkChange=e=>setMeetingLink(e.target.value);const handleUploadMeetingLink=async trainingId=>{if(meetingLink===null||meetingLink===''){viewMoreInfoModalDisplayErrMsg('Please Upload Meeting Link');}else{setLoadingBar(true);const uploadMeetingLinkRequest={trainingId:trainingId,meetingLink:meetingLink};console.log(uploadMeetingLinkRequest);try{const responseData=await AdminService.uploadMeetingLink(uploadMeetingLinkRequest);console.log(responseData);viewMoreInfoModalDisplaySucMsg('Successfully Uploaded Meeting Link');viewMoreInfo.training.meetingLink=responseData.meetingLink;}catch(error){console.log(error.message);handleUploadMeetingLinkErrors(error.message);}finally{setLoadingBar(false);}}};const handleUploadMeetingLinkErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Input is invalid\");else if(Constants.EXISTING_MEETING_LINK===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Meeting Link is already taken\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Entity Not Found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");else viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");};const handleRemoveMeetingLink=async trainingId=>{setLoadingBar(true);const removeMeetingLinkRequest={trainingId:trainingId};console.log(removeMeetingLinkRequest);try{const responseData=await AdminService.removeMeetingLink(removeMeetingLinkRequest);console.log(responseData);viewMoreInfoModalDisplaySucMsg('Successfully Removed Meeting Link');viewMoreInfo.training.meetingLink=responseData.meetingLink;setMeetingLink(viewMoreInfo.training.meetingLink);}catch(error){console.log(error.message);handleRemoveMeetingLinkErrors(error.message);}finally{setLoadingBar(false);}};const handleRemoveMeetingLinkErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Training id is invalid\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Entity Not Found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");else viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");};// update date and time modal code\nconst[courseStartDateAndTime,setCourseStartDateAndTime]=useState(null);const timeOnlyPicker={dateFormat:false,// Disable date selection\ntimeFormat:true// Enable time selection\n};const handleCourseStartDateChange=date=>{let newDate;if(date&&typeof date.toDate==='function'){// If `date` is a moment.js object, convert it to a JavaScript Date\nnewDate=date.toDate();}else if(date instanceof Date){// If `date` is already a JavaScript Date\nnewDate=date;}if(courseStartDateAndTime){// Update only the time part of the current date\nconst updatedDate=new Date(courseStartDateAndTime);updatedDate.setHours(newDate.getHours());updatedDate.setMinutes(newDate.getMinutes());updatedDate.setSeconds(newDate.getSeconds());setCourseStartDateAndTime(updatedDate);}};const handleUpdateStartTime=async trainingId=>{console.log(trainingId);console.log(courseStartDateAndTime);if(courseStartDateAndTime===null){viewMoreInfoModalDisplayErrMsg('please, select time to update');}else{setLoadingBar(true);// Convert the date to a string and remove the time zone name\nlet formattedDate=courseStartDateAndTime.toString();formattedDate=formattedDate.replace(/\\s\\([^)]+\\)$/,'');const formData=new FormData();formData.append('trainingId',trainingId);formData.append('courseStartDateAndTimeString',formattedDate);console.log(formData);try{const responseData=await AdminService.updateDateForTraining(formData);console.log(responseData);viewMoreInfoModalDisplaySucMsg('Succesfully Updated Time');viewMoreInfo.training.courseStartDateAndTime=responseData.courseStartDateAndTime;}catch(error){console.error('Error fetching data for path:',error);handleUpdateDateForTrainingErrors(error.message);}finally{setLoadingBar(false);}}};const handleUpdateDateForTrainingErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Inputs are invalid\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Training is Not Found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");else viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");};// update date and time modal code\nconst[courseEndDate,setCourseEndDate]=useState(null);const minDate=new Date();minDate.setDate(minDate.getDate());const isValidDate=current=>{return current.isAfter(minDate);};const handleCourseEndDateChange=date=>{setCourseEndDate(date);};const handleUpdateEndDate=async trainingId=>{if(courseEndDate===null){viewMoreInfoModalDisplayErrMsg('Please Select End Date');}else{setLoadingBar(true);const formData=new FormData();formData.append('trainingId',trainingId);formData.append('courseEndDateString',courseEndDate);console.log(formData);try{const responseData=await AdminService.updateEndDateForTraining(formData);console.log(viewMoreInfo.training.courseEndDate+'  '+responseData.courseEndDate);viewMoreInfoModalDisplaySucMsg('Successfully Updated End Date');viewMoreInfo.training.courseEndDate=responseData.courseEndDate;}catch(error){console.error('Error fetching data for path:',error);handleUpdateEndDateErrors(error.message);}finally{setLoadingBar(false);}}};const handleUpdateEndDateErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Inputs are invalid\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Entity Not Found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");else viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");};// view more info modal err msg\nconst[viewMoreInfoModalErrMsgDiv,setViewMoreInfoModalErrMsgDiv]=useState(false);const[viewMoreInfoModalErrMsg,setViewMoreInfoModalErrMsg]=useState(\"\");//JS for to display err msg\nconst viewMoreInfoModalDisplayErrMsg=errorMessage=>{setViewMoreInfoModalErrMsg(errorMessage);setViewMoreInfoModalErrMsgDiv(true);setTimeout(()=>{setViewMoreInfoModalErrMsg(\"\");setViewMoreInfoModalErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};const viewMoreInfoModalDisplaySucMsg=errorMessage=>{setMessageColor('green');setViewMoreInfoModalErrMsg(errorMessage);setViewMoreInfoModalErrMsgDiv(true);setTimeout(()=>{setViewMoreInfoModalErrMsg(\"\");setViewMoreInfoModalErrMsgDiv(false);setMessageColor('#be3144');},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};const customCssForMsg={fontSize:'medium',fontWeight:'700',color:messageColor};return/*#__PURE__*/_jsxs(\"div\",{className:\"admin-started-training\",children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsx(\"div\",{style:{overflowX:'auto',fontSize:'13px',maxHeight:'calc(100vh - 100px)'},children:startedTrainings.length!==0&&/*#__PURE__*/_jsx(CDBDataTable,{striped:true,bordered:true,hover:true,entriesOptions:[5,10,15],entries:5,pagesAmount:4,data:startedTrainingsDataTableData()// scrollX\n,materialSearch:true,responsive:true,small:true,style:{textAlign:'center'},className:\"cdb-datatable\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"\",children:errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})})}),viewMoreInfoModal&&/*#__PURE__*/_jsx(Modal,{className:\"update-date-modal\",size:\"lg\",show:viewMoreInfoModal,onHide:handleViewMoreInfoModalClose,centered:true,backdrop:\"static\",children:/*#__PURE__*/_jsxs(Container,{className:\"px-5\",children:[/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{style:{fontSize:'18px'},children:\"Training Info & Status\"})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"training-data\",children:[/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{textDecoration:'underline',fontSize:'16px'},children:\"Trainer Data\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Trainer Name : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.trainer.userFirstname+\" \"+viewMoreInfo.trainer.userLastname}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Experience : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.trainer.userExperience}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Trainer Mail : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.trainer.username}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Trainer Phone : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.trainer.phoneNumberWithCountryCode}),\" \",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"div\",{style:{fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"label\",{style:{textDecoration:'underline',fontSize:'16px'},children:\"Training Data\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Course : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.training.courseName}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Technical-Stack : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.training.technologyList.map(tech=>tech.technologyName).join(', ')}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Course Duration : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.training.courseDuration+\" days\"}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Course Start Date : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:Constants.convertUserTimezoneDateTime(viewMoreInfo.training.courseStartDateAndTime).date}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Course End Date : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:Constants.convertUserTimezoneDateTime(viewMoreInfo.training.courseEndDate).date}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Course Start Time : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:Constants.formatTime(Constants.convertUserTimezoneDateTime(viewMoreInfo.training.courseStartDateAndTime).time)}),\" \",/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Session Duration : \"}),\" \",/*#__PURE__*/_jsx(\"span\",{children:viewMoreInfo.training.sessionDuration}),\" \",/*#__PURE__*/_jsx(\"br\",{})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Upload Meeting Link\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{className:\"form-control w-75\",value:viewMoreInfo.training.meetingLink!==''?viewMoreInfo.training.meetingLink:meetingLink,onChange:handleMeetingLinkChange,disabled:viewMoreInfo.training.meetingLink!=='',placeholder:\"Meeting Link\"}),/*#__PURE__*/_jsx(\"button\",{style:{marginLeft:'10px'},className:\"upload-meeting-link-btn\",onClick:()=>handleUploadMeetingLink(viewMoreInfo.training.trainingId),disabled:viewMoreInfo.training.meetingLink!=='',children:\"Upload\"}),/*#__PURE__*/_jsx(\"button\",{style:{marginLeft:'10px'},className:\"remove-meeting-link-btn\",onClick:()=>handleRemoveMeetingLink(viewMoreInfo.training.trainingId),disabled:viewMoreInfo.training.meetingLink==='',children:\"Remove\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"date-time mt-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Update Training Start Time\"}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(Datetime,{value:courseStartDateAndTime,onChange:handleCourseStartDateChange,...timeOnlyPicker,inputProps:{placeholder:'Update Time',readOnly:true},className:\"w-75\"}),/*#__PURE__*/_jsx(\"button\",{style:{marginLeft:'10px'},className:\"update-start-time-btn\",onClick:()=>handleUpdateStartTime(viewMoreInfo.training.trainingId),children:\"Update Start Time\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Update Course End Date\"}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex'},children:[/*#__PURE__*/_jsx(Datetime,{value:courseEndDate,onChange:handleCourseEndDateChange,isValidDate:isValidDate,inputProps:{placeholder:'Update End Date',readOnly:true},timeFormat:false,className:\"w-75\"}),/*#__PURE__*/_jsx(\"button\",{style:{marginLeft:'10px'},className:\"update-end-date-btn\",onClick:()=>handleUpdateEndDate(viewMoreInfo.training.trainingId),children:\"Update End Date\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:viewMoreInfoModalErrMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:viewMoreInfoModalErrMsg})})})]})})]})})]});}export default AdminStartedTrainings;","map":{"version":3,"names":["CDBDataTable","useEffect","useState","AdminService","Constants","Container","Modal","Datetime","LoadingBar","jsx","_jsx","jsxs","_jsxs","AdminStartedTrainings","loadingBar","setLoadingBar","childColor","getComputedStyle","document","documentElement","getPropertyValue","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","getStartedTrainingErrMsg","errorMessage","handleStartedTrainings","startedTrainings","setStartedTrainings","responseData","getStartedTrainings","console","log","length","error","message","handleStartedTrainingsErrors","errorStatus","BREEZE_DATABASE_EXCEPTION","startedTrainingsDataTableData","moreInfo","trainingId","children","className","onClick","handleViewButtonClicked","viewMoreInfoTrainingId","style","customCssForMsg","viewMoreInfoErrMsg","columns","label","field","width","formatter","rows","map","each","training","trainer","userFirstname","userLastname","username","phoneNumberWithCountryCode","courseName","convertUserTimezoneDateTime","courseStartDateAndTime","date","formatTime","time","courseEndDate","viewMoreInfoModal","setViewMoreInfoModal","viewMoreInfo","setViewMoreInfo","handleViewMoreInfoModalClose","setMeetingLink","setCourseEndDate","setCourseStartDateAndTime","window","location","reload","viewMoreInfoRequest","viewMoreStartedTrainingInfo","Date","courseStartDate","handleViewMoreStartedtrainingInfoErrors","INVALID_REQUEST_FIELD","viewMoreInfoDisplayErrMsg","ENTITY_NOT_FOUND","setViewMoreInfoTrainingId","setViewMoreInfoErrMsg","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","meetingLink","handleMeetingLinkChange","e","target","value","handleUploadMeetingLink","viewMoreInfoModalDisplayErrMsg","uploadMeetingLinkRequest","uploadMeetingLink","viewMoreInfoModalDisplaySucMsg","handleUploadMeetingLinkErrors","EXISTING_MEETING_LINK","handleRemoveMeetingLink","removeMeetingLinkRequest","removeMeetingLink","handleRemoveMeetingLinkErrors","timeOnlyPicker","dateFormat","timeFormat","handleCourseStartDateChange","newDate","toDate","updatedDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","handleUpdateStartTime","formattedDate","toString","replace","formData","FormData","append","updateDateForTraining","handleUpdateDateForTrainingErrors","minDate","setDate","getDate","isValidDate","current","isAfter","handleCourseEndDateChange","handleUpdateEndDate","updateEndDateForTraining","handleUpdateEndDateErrors","viewMoreInfoModalErrMsgDiv","setViewMoreInfoModalErrMsgDiv","viewMoreInfoModalErrMsg","setViewMoreInfoModalErrMsg","SET_TIME_OUT_FOR_SUCCESS_MSG","fontSize","fontWeight","color","overflowX","maxHeight","striped","bordered","hover","entriesOptions","entries","pagesAmount","data","materialSearch","responsive","small","textAlign","size","show","onHide","centered","backdrop","Header","closeButton","Title","Body","textDecoration","userExperience","technologyList","tech","technologyName","join","courseDuration","sessionDuration","display","onChange","disabled","placeholder","marginLeft","inputProps","readOnly"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/feature_component/admin_feature_component/admin_started_trainings_component/AdminStartedTrainings.js"],"sourcesContent":["import { CDBDataTable } from 'cdbreact';\r\nimport './AdminStartedTrainings.css';\r\nimport { useEffect, useState } from 'react';\r\nimport AdminService from '../../../../../Services/admin_service/AdminService';\r\nimport Constants from '../../../../Constants';\r\nimport { Container, Modal } from 'react-bootstrap';\r\nimport Datetime from 'react-datetime';\r\nimport 'react-datetime/css/react-datetime.css';\r\nimport LoadingBar from '../../../../loading_bar_component/LoadingBar';\r\n\r\n\r\nfunction AdminStartedTrainings() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n\r\n    // err msg\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const getStartedTrainingErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        // setTimeout(() => {\r\n        //     setErrMsg(\"\");\r\n        //     setErrMsgDiv(false);\r\n        // }, 3000);\r\n    }\r\n\r\n    useEffect(() => {\r\n        handleStartedTrainings();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n    const [startedTrainings, setStartedTrainings] = useState([]);\r\n    const handleStartedTrainings = async () => {\r\n        setLoadingBar(true);\r\n        try {\r\n            const responseData = await AdminService.getStartedTrainings();\r\n            console.log(responseData);\r\n            if (responseData.length === 0) {\r\n                getStartedTrainingErrMsg('Started trainings are not found');\r\n            } else {\r\n                setStartedTrainings(responseData);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            handleStartedTrainingsErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n    const handleStartedTrainingsErrors = (errorStatus) => {\r\n        if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            getStartedTrainingErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            getStartedTrainingErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const startedTrainingsDataTableData = () => {\r\n        const moreInfo = (trainingId) => {\r\n            return (\r\n                <div>\r\n                    <div>\r\n                        <button\r\n                            className='view-btn'\r\n                            onClick={() => handleViewButtonClicked(trainingId)}\r\n                        >\r\n                            View\r\n                        </button>\r\n                    </div>\r\n                    <div className='mt-1'>\r\n                        {viewMoreInfoTrainingId === trainingId &&\r\n                            <div style={customCssForMsg}>\r\n                                <label>{viewMoreInfoErrMsg}</label>\r\n                            </div>}\r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n        const columns = [\r\n            { label: 'Training Id', field: 'trainingId', width: 70 },\r\n            { label: 'Trainer Name', field: 'trainerName', width: 70 },\r\n            { label: 'Mail-Id', field: 'trainerMail', width: 70 },\r\n            { label: 'Contact Number', field: 'trainerPhone', width: 70 },\r\n            { label: 'Course', field: 'course', width: 70 },\r\n            { label: 'Start Date', field: 'courseStartDate', width: 70 },\r\n            { label: 'Start Time', field: 'courseStartTime', width: 70 },\r\n            { label: 'End Date', field: 'courseEndDate', width: 70 },\r\n            { label: 'More Info', field: 'moreInfo', width: 70, formatter: moreInfo },\r\n        ];\r\n        const rows = startedTrainings.map((each => {\r\n            return {\r\n                'trainingId': each.training.trainingId,\r\n                'trainerName': each.trainer.userFirstname + \" \" + each.trainer.userLastname,\r\n                'trainerMail': each.trainer.username,\r\n                'trainerPhone': each.trainer.phoneNumberWithCountryCode,\r\n                'course': each.training.courseName,\r\n                'courseStartDate': (Constants.convertUserTimezoneDateTime(each.training.courseStartDateAndTime)).date,\r\n                'courseStartTime': Constants.formatTime((Constants.convertUserTimezoneDateTime(each.training.courseStartDateAndTime)).time),\r\n                'courseEndDate': (Constants.convertUserTimezoneDateTime(each.training.courseEndDate)).date,\r\n                'moreInfo': moreInfo(each.training.trainingId),\r\n            }\r\n        }));\r\n        return { columns, rows };\r\n    };\r\n\r\n    const [viewMoreInfoModal, setViewMoreInfoModal] = useState(false);\r\n    const [viewMoreInfo, setViewMoreInfo] = useState(null);\r\n    useEffect(() => {\r\n        // re render component when viewMoreInfo have changes\r\n    }, [viewMoreInfo]);\r\n    const handleViewMoreInfoModalClose = () => {\r\n        setViewMoreInfoModal(false);\r\n        setViewMoreInfo(null);\r\n        setMeetingLink('');\r\n        setCourseEndDate(null);\r\n        setCourseStartDateAndTime(null);\r\n        window.location.reload();\r\n    }\r\n    const handleViewButtonClicked = async (trainingId) => {\r\n        setLoadingBar(true);\r\n        console.log(trainingId);\r\n        const viewMoreInfoRequest = {\r\n            trainingId: trainingId,\r\n        }\r\n        try {\r\n            const responseData = await AdminService.viewMoreStartedTrainingInfo(viewMoreInfoRequest);\r\n            console.log(responseData);\r\n            setViewMoreInfo(responseData);\r\n            setViewMoreInfoModal(true);\r\n            setCourseStartDateAndTime(new Date(responseData.training.courseStartDate));\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            handleViewMoreStartedtrainingInfoErrors(error.message, trainingId);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n    const handleViewMoreStartedtrainingInfoErrors = (errorStatus, trainingId) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            viewMoreInfoDisplayErrMsg(\"Training is invalid\", trainingId);\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            viewMoreInfoDisplayErrMsg(\"Entity Not Found\", trainingId);\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            viewMoreInfoDisplayErrMsg(\"Sorry, Our service is down\", trainingId);\r\n        else\r\n            viewMoreInfoDisplayErrMsg(\"Could not process your request\", trainingId);\r\n    }\r\n\r\n    // view more info err msg\r\n    const [viewMoreInfoTrainingId, setViewMoreInfoTrainingId] = useState(0);\r\n    const [viewMoreInfoErrMsg, setViewMoreInfoErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const viewMoreInfoDisplayErrMsg = (errorMessage, trainingId) => {\r\n        setViewMoreInfoErrMsg(errorMessage);\r\n        setViewMoreInfoTrainingId(trainingId);\r\n        setTimeout(() => {\r\n            setViewMoreInfoErrMsg('');\r\n            setViewMoreInfoTrainingId(0);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    // meeting link upload code\r\n    const [meetingLink, setMeetingLink] = useState('');\r\n    const handleMeetingLinkChange = (e) => setMeetingLink(e.target.value);\r\n    const handleUploadMeetingLink = async (trainingId) => {\r\n        if (meetingLink === null || meetingLink === '') {\r\n            viewMoreInfoModalDisplayErrMsg('Please Upload Meeting Link');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const uploadMeetingLinkRequest = {\r\n                trainingId: trainingId,\r\n                meetingLink: meetingLink,\r\n            }\r\n            console.log(uploadMeetingLinkRequest);\r\n            try {\r\n                const responseData = await AdminService.uploadMeetingLink(uploadMeetingLinkRequest);\r\n                console.log(responseData);\r\n                viewMoreInfoModalDisplaySucMsg('Successfully Uploaded Meeting Link');\r\n                viewMoreInfo.training.meetingLink = responseData.meetingLink;\r\n            } catch (error) {\r\n                console.log(error.message);\r\n                handleUploadMeetingLinkErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n    const handleUploadMeetingLinkErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Input is invalid\");\r\n        else if (Constants.EXISTING_MEETING_LINK === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Meeting Link is already taken\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Entity Not Found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleRemoveMeetingLink = async (trainingId) => {\r\n        setLoadingBar(true);\r\n        const removeMeetingLinkRequest = {\r\n            trainingId: trainingId,\r\n        }\r\n        console.log(removeMeetingLinkRequest);\r\n        try {\r\n            const responseData = await AdminService.removeMeetingLink(removeMeetingLinkRequest);\r\n            console.log(responseData);\r\n            viewMoreInfoModalDisplaySucMsg('Successfully Removed Meeting Link');\r\n            viewMoreInfo.training.meetingLink = responseData.meetingLink;\r\n            setMeetingLink(viewMoreInfo.training.meetingLink);\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            handleRemoveMeetingLinkErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n    const handleRemoveMeetingLinkErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Training id is invalid\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Entity Not Found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    // update date and time modal code\r\n    const [courseStartDateAndTime, setCourseStartDateAndTime] = useState(null);\r\n    const timeOnlyPicker = {\r\n        dateFormat: false, // Disable date selection\r\n        timeFormat: true, // Enable time selection\r\n    };\r\n    const handleCourseStartDateChange = (date) => {\r\n        let newDate;\r\n        if (date && typeof date.toDate === 'function') {\r\n            // If `date` is a moment.js object, convert it to a JavaScript Date\r\n            newDate = date.toDate();\r\n        } else if (date instanceof Date) {\r\n            // If `date` is already a JavaScript Date\r\n            newDate = date;\r\n        }\r\n        if (courseStartDateAndTime) {\r\n            // Update only the time part of the current date\r\n            const updatedDate = new Date(courseStartDateAndTime);\r\n            updatedDate.setHours(newDate.getHours());\r\n            updatedDate.setMinutes(newDate.getMinutes());\r\n            updatedDate.setSeconds(newDate.getSeconds());\r\n            setCourseStartDateAndTime(updatedDate);\r\n        }\r\n    };\r\n    const handleUpdateStartTime = async (trainingId) => {\r\n        console.log(trainingId);\r\n        console.log(courseStartDateAndTime);\r\n        if (courseStartDateAndTime === null) {\r\n            viewMoreInfoModalDisplayErrMsg('please, select time to update');\r\n        } else {\r\n            setLoadingBar(true);\r\n            // Convert the date to a string and remove the time zone name\r\n            let formattedDate = courseStartDateAndTime.toString();\r\n            formattedDate = formattedDate.replace(/\\s\\([^)]+\\)$/, '');\r\n            const formData = new FormData();\r\n            formData.append('trainingId', trainingId);\r\n            formData.append('courseStartDateAndTimeString', formattedDate);\r\n            console.log(formData);\r\n            try {\r\n                const responseData = await AdminService.updateDateForTraining(formData);\r\n                console.log(responseData);\r\n                viewMoreInfoModalDisplaySucMsg('Succesfully Updated Time');\r\n                viewMoreInfo.training.courseStartDateAndTime = responseData.courseStartDateAndTime;\r\n            } catch (error) {\r\n                console.error('Error fetching data for path:', error);\r\n                handleUpdateDateForTrainingErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n    const handleUpdateDateForTrainingErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Inputs are invalid\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Training is Not Found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    // update date and time modal code\r\n    const [courseEndDate, setCourseEndDate] = useState(null);\r\n    const minDate = new Date();\r\n    minDate.setDate(minDate.getDate());\r\n    const isValidDate = (current) => {\r\n        return current.isAfter(minDate);\r\n    };\r\n    const handleCourseEndDateChange = (date) => {\r\n        setCourseEndDate(date);\r\n    };\r\n    const handleUpdateEndDate = async (trainingId) => {\r\n        if (courseEndDate === null) {\r\n            viewMoreInfoModalDisplayErrMsg('Please Select End Date');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const formData = new FormData();\r\n            formData.append('trainingId', trainingId);\r\n            formData.append('courseEndDateString', courseEndDate);\r\n            console.log(formData);\r\n            try {\r\n                const responseData = await AdminService.updateEndDateForTraining(formData);\r\n                console.log(viewMoreInfo.training.courseEndDate + '  ' + responseData.courseEndDate);\r\n                viewMoreInfoModalDisplaySucMsg('Successfully Updated End Date');\r\n                viewMoreInfo.training.courseEndDate = responseData.courseEndDate;\r\n            } catch (error) {\r\n                console.error('Error fetching data for path:', error);\r\n                handleUpdateEndDateErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n    const handleUpdateEndDateErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Inputs are invalid\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Entity Not Found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            viewMoreInfoModalDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            viewMoreInfoModalDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    // view more info modal err msg\r\n    const [viewMoreInfoModalErrMsgDiv, setViewMoreInfoModalErrMsgDiv] = useState(false);\r\n    const [viewMoreInfoModalErrMsg, setViewMoreInfoModalErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const viewMoreInfoModalDisplayErrMsg = (errorMessage) => {\r\n        setViewMoreInfoModalErrMsg(errorMessage);\r\n        setViewMoreInfoModalErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setViewMoreInfoModalErrMsg(\"\");\r\n            setViewMoreInfoModalErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n    const viewMoreInfoModalDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setViewMoreInfoModalErrMsg(errorMessage);\r\n        setViewMoreInfoModalErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setViewMoreInfoModalErrMsg(\"\");\r\n            setViewMoreInfoModalErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div className='admin-started-training'>\r\n            {loadingBar && <LoadingBar />}\r\n            <div style={{ overflowX: 'auto', fontSize: '13px', maxHeight: 'calc(100vh - 100px)' }}>\r\n                {startedTrainings.length !== 0 && (\r\n                    <CDBDataTable\r\n                        striped\r\n                        bordered\r\n                        hover\r\n                        entriesOptions={[5, 10, 15]}\r\n                        entries={5}\r\n                        pagesAmount={4}\r\n                        data={startedTrainingsDataTableData()}\r\n                        // scrollX\r\n                        materialSearch={true}\r\n                        responsive={true}\r\n                        small={true}\r\n                        style={{ textAlign: 'center' }}\r\n                        className='cdb-datatable'\r\n                    />\r\n                )}\r\n            </div>\r\n            <div className=''>\r\n                {errMsgDiv &&\r\n                    <div style={customCssForMsg}>\r\n                        <label>{errMsg}</label>\r\n                    </div>}\r\n            </div>\r\n            {viewMoreInfoModal && (\r\n                <Modal className='update-date-modal' size='lg' show={viewMoreInfoModal} onHide={handleViewMoreInfoModalClose} centered backdrop=\"static\">\r\n                    <Container className='px-5'>\r\n                        <Modal.Header closeButton>\r\n                            <Modal.Title style={{ fontSize: '18px' }}>\r\n                                Training Info & Status\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                        <Modal.Body>\r\n                            <div className='training-data'>\r\n                                <div style={{ fontSize: '14px' }}>\r\n                                    <label style={{ textDecoration: 'underline', fontSize: '16px' }}>Trainer Data</label> <br />\r\n                                    <label>Trainer Name : </label> <span>{viewMoreInfo.trainer.userFirstname + \" \" + viewMoreInfo.trainer.userLastname}</span> <br />\r\n                                    <label>Experience : </label> <span>{viewMoreInfo.trainer.userExperience}</span> <br />\r\n                                    <label>Trainer Mail : </label> <span>{viewMoreInfo.trainer.username}</span> <br />\r\n                                    <label>Trainer Phone : </label> <span>{viewMoreInfo.trainer.phoneNumberWithCountryCode}</span> <br />\r\n                                </div>\r\n                                <div style={{ fontSize: '14px' }}>\r\n                                    <label style={{ textDecoration: 'underline', fontSize: '16px' }}>Training Data</label> <br />\r\n                                    <label>Course : </label> <span>{viewMoreInfo.training.courseName}</span> <br />\r\n                                    <label>Technical-Stack : </label> <span>{viewMoreInfo.training.technologyList.map(tech => tech.technologyName).join(', ')}</span> <br />\r\n                                    <label>Course Duration : </label> <span>{viewMoreInfo.training.courseDuration + \" days\"}</span> <br />\r\n                                    <label>Course Start Date : </label> <span>{(Constants.convertUserTimezoneDateTime(viewMoreInfo.training.courseStartDateAndTime)).date}</span> <br />\r\n                                    <label>Course End Date : </label> <span>{(Constants.convertUserTimezoneDateTime(viewMoreInfo.training.courseEndDate)).date}</span> <br />\r\n                                    <label>Course Start Time : </label> <span>{Constants.formatTime((Constants.convertUserTimezoneDateTime(viewMoreInfo.training.courseStartDateAndTime)).time)}</span> <br />\r\n                                    <label>Session Duration : </label> <span>{viewMoreInfo.training.sessionDuration}</span> <br />\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label>Upload Meeting Link</label><br />\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <input\r\n                                            className='form-control w-75'\r\n                                            value={viewMoreInfo.training.meetingLink !== '' ? viewMoreInfo.training.meetingLink : meetingLink}\r\n                                            onChange={handleMeetingLinkChange}\r\n                                            disabled={viewMoreInfo.training.meetingLink !== ''}\r\n                                            placeholder='Meeting Link'\r\n                                        />\r\n                                        <button\r\n                                            style={{ marginLeft: '10px' }}\r\n                                            className='upload-meeting-link-btn'\r\n                                            onClick={() => handleUploadMeetingLink(viewMoreInfo.training.trainingId)}\r\n                                            disabled={viewMoreInfo.training.meetingLink !== ''}\r\n                                        >\r\n                                            Upload\r\n                                        </button>\r\n                                        <button\r\n                                            style={{ marginLeft: '10px' }}\r\n                                            className='remove-meeting-link-btn'\r\n                                            onClick={() => handleRemoveMeetingLink(viewMoreInfo.training.trainingId)}\r\n                                            disabled={viewMoreInfo.training.meetingLink === ''}\r\n                                        >\r\n                                            Remove\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='date-time mt-2'>\r\n                                    <label>Update Training Start Time</label>\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <Datetime\r\n                                            value={courseStartDateAndTime}\r\n                                            onChange={handleCourseStartDateChange}\r\n                                            {...timeOnlyPicker}\r\n                                            inputProps={{\r\n                                                placeholder: 'Update Time',\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            className='w-75'\r\n                                        />\r\n                                        <button\r\n                                            style={{ marginLeft: '10px' }}\r\n                                            className='update-start-time-btn'\r\n                                            onClick={() => handleUpdateStartTime(viewMoreInfo.training.trainingId)}\r\n                                        >\r\n                                            Update Start Time\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    <label>Update Course End Date</label><br />\r\n                                    <div style={{ display: 'flex' }}>\r\n                                        <Datetime\r\n                                            value={courseEndDate}\r\n                                            onChange={handleCourseEndDateChange}\r\n                                            isValidDate={isValidDate}\r\n                                            inputProps={{\r\n                                                placeholder: 'Update End Date',\r\n                                                readOnly: true,\r\n                                            }}\r\n                                            timeFormat={false}\r\n                                            className='w-75'\r\n                                        />\r\n                                        <button\r\n                                            style={{ marginLeft: '10px' }}\r\n                                            className='update-end-date-btn'\r\n                                            onClick={() => handleUpdateEndDate(viewMoreInfo.training.trainingId)}\r\n                                        >\r\n                                            Update End Date\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                                <div className='mt-2'>\r\n                                    {viewMoreInfoModalErrMsgDiv &&\r\n                                        <div style={customCssForMsg}>\r\n                                            <label>{viewMoreInfoModalErrMsg}</label>\r\n                                        </div>}\r\n                                </div>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </Container>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default AdminStartedTrainings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
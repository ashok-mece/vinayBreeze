{"ast":null,"code":"import{useState}from'react';import'./Login.css';import Constants from'../Constants';import UserService from'../../Services/user_service/UserService';import{useNavigate}from'react-router-dom';import LoadingBar from'../loading_bar_component/LoadingBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function LoginForm(){const[loadingBar,setLoadingBar]=useState(false);const navigate=useNavigate();const[loginFormData,setLoginFormData]=useState({username:'',password:''});//Fields for to display err msg div and label\nconst[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");// const passwordPatternRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$/;\n//JS for to display err msg when validation for pattern fails for inputs\nconst loginFormDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};const handleLoginFormData=e=>{const{name,value}=e.target;setLoginFormData({...loginFormData,[name]:value});};const loginSubmitForm=async e=>{e.preventDefault();// if (!passwordPatternRegex.test(loginFormData.password)) {\n//   loginFormDisplayErrMsg(\"Password is not matching the pattern\");\n// } else {\nsetLoadingBar(true);console.log(loginFormData);try{const responseData=await UserService.loginUser(loginFormData);console.log(responseData);localStorage.setItem('breezeUserId',responseData.userId);localStorage.setItem('breezeUserType',responseData.userType);localStorage.setItem('breezeUsername',responseData.username);localStorage.setItem('breezeUserFullName',responseData.userFirstname+\" \"+responseData.userLastname);localStorage.setItem('breezeUserFirstTimeLogin',responseData.firstTimeLogin);localStorage.setItem('breezeExponentType',JSON.stringify(responseData.exponentTypeList));localStorage.setItem(\"breezeSelectedExponentType\",responseData.exponentTypeList&&responseData.exponentTypeList[0]);navigate('/dashboard');//, { state: responseData }\n}catch(error){handleLoginUserError(error.message);}finally{setLoadingBar(false);}// }\n};const handleLoginUserError=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)loginFormDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)loginFormDisplayErrMsg(\"You are not registered\");else if(Constants.INACTIVE===errorStatus)loginFormDisplayErrMsg(\"User is InActive\");else if(Constants.PASSWORD_NOT_MATCHED===errorStatus)loginFormDisplayErrMsg(\"Please enter correct password\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)loginFormDisplayErrMsg(\"Sorry, Our service is down\");else if(' Access Denied !! User not found !!'===errorStatus)// new change to handle response on not registered username or invalid credentials\nloginFormDisplayErrMsg(\"Mail-Id is not found\");// new change\nelse if(' Access Denied !! Invalid username or password !!'===errorStatus)// new change to handle response on not registered username or invalid credentials\nloginFormDisplayErrMsg(\"Invalid Credentials\");// new change\nelse loginFormDisplayErrMsg(\"Could not process your request\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"Login-form-component\",children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsx(\"div\",{className:\"Login-form-heading\",children:/*#__PURE__*/_jsx(\"h2\",{className:\"my-3\",children:\"Login\"})}),/*#__PURE__*/_jsx(\"div\",{className:\"Login-form\",children:/*#__PURE__*/_jsxs(\"form\",{onSubmit:loginSubmitForm,className:\"form\",children:[/*#__PURE__*/_jsxs(\"div\",{class:\"Login-txt-field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"username\",value:loginFormData.username,onChange:handleLoginFormData,required:true}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Mail-Id\"})]}),/*#__PURE__*/_jsxs(\"div\",{class:\"Login-txt-field\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:loginFormData.password,onChange:handleLoginFormData,required:true}),\" \",/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"label\",{children:\"Password\"})]}),errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{className:\"Login-div-for-err-msg\",children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"btn Login-breeze-button px-4\",children:\"Login\"})}),/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',justifyContent:'space-between'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Login-label-already-have\",children:[\"Dont have an account?\\xA0\",/*#__PURE__*/_jsx(\"a\",{href:\"./register-user\",className:\"Login-anchor-navigate\",children:\"Register\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Login-label-already-have\",children:/*#__PURE__*/_jsx(\"a\",{href:\"./reset-password\",className:\"Login-anchor-navigate\",children:\"Forgot Password\"})})]})]})})]});}export default LoginForm;","map":{"version":3,"names":["useState","Constants","UserService","useNavigate","LoadingBar","jsx","_jsx","jsxs","_jsxs","LoginForm","loadingBar","setLoadingBar","navigate","loginFormData","setLoginFormData","username","password","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","loginFormDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","handleLoginFormData","e","name","value","target","loginSubmitForm","preventDefault","console","log","responseData","loginUser","localStorage","setItem","userId","userType","userFirstname","userLastname","firstTimeLogin","JSON","stringify","exponentTypeList","error","handleLoginUserError","message","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","INACTIVE","PASSWORD_NOT_MATCHED","BREEZE_DATABASE_EXCEPTION","className","children","onSubmit","class","type","onChange","required","style","display","justifyContent","href"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/login_component/LoginForm.js"],"sourcesContent":["import { useState } from 'react';\r\nimport './Login.css';\r\nimport Constants from '../Constants';\r\nimport UserService from '../../Services/user_service/UserService';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport LoadingBar from '../loading_bar_component/LoadingBar';\r\n\r\nfunction LoginForm() {\r\n\r\n  const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const [loginFormData, setLoginFormData] = useState({\r\n    username: '',\r\n    password: ''\r\n  });\r\n\r\n  //Fields for to display err msg div and label\r\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n  const [errMsg, setErrMsg] = useState(\"\");\r\n\r\n  // const passwordPatternRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$/;\r\n\r\n  //JS for to display err msg when validation for pattern fails for inputs\r\n  const loginFormDisplayErrMsg = (errorMessage) => {\r\n    setErrMsg(errorMessage);\r\n    setErrMsgDiv(true);\r\n    setTimeout(() => {\r\n      setErrMsg(\"\");\r\n      setErrMsgDiv(false);\r\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n  }\r\n\r\n  const handleLoginFormData = (e) => {\r\n    const { name, value } = e.target;\r\n    setLoginFormData({\r\n      ...loginFormData,\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  const loginSubmitForm = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // if (!passwordPatternRegex.test(loginFormData.password)) {\r\n    //   loginFormDisplayErrMsg(\"Password is not matching the pattern\");\r\n    // } else {\r\n      setLoadingBar(true);\r\n      console.log(loginFormData);\r\n      try {\r\n        const responseData = await UserService.loginUser(loginFormData);\r\n        console.log(responseData);\r\n        localStorage.setItem('breezeUserId', responseData.userId);\r\n        localStorage.setItem('breezeUserType', responseData.userType);\r\n        localStorage.setItem('breezeUsername', responseData.username);\r\n        localStorage.setItem('breezeUserFullName', responseData.userFirstname + \" \" + responseData.userLastname);\r\n        localStorage.setItem('breezeUserFirstTimeLogin', responseData.firstTimeLogin);\r\n        localStorage.setItem('breezeExponentType', JSON.stringify(responseData.exponentTypeList));\r\n        localStorage.setItem(\"breezeSelectedExponentType\", responseData.exponentTypeList && responseData.exponentTypeList[0]);\r\n        navigate('/dashboard'); //, { state: responseData }\r\n      } catch (error) {\r\n        handleLoginUserError(error.message);\r\n      } finally {\r\n        setLoadingBar(false);\r\n      } \r\n\r\n    // }\r\n\r\n  };\r\n\r\n  const handleLoginUserError = (errorStatus) => {\r\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n      loginFormDisplayErrMsg(\"Please enter valid inputs fields\");\r\n    else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n      loginFormDisplayErrMsg(\"You are not registered\");\r\n    else if (Constants.INACTIVE === errorStatus)\r\n      loginFormDisplayErrMsg(\"User is InActive\");\r\n    else if (Constants.PASSWORD_NOT_MATCHED === errorStatus)\r\n      loginFormDisplayErrMsg(\"Please enter correct password\");\r\n    else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n      loginFormDisplayErrMsg(\"Sorry, Our service is down\");\r\n    else if (' Access Denied !! User not found !!' === errorStatus) // new change to handle response on not registered username or invalid credentials\r\n      loginFormDisplayErrMsg(\"Mail-Id is not found\"); // new change\r\n    else if (' Access Denied !! Invalid username or password !!' === errorStatus) // new change to handle response on not registered username or invalid credentials\r\n      loginFormDisplayErrMsg(\"Invalid Credentials\"); // new change\r\n    else\r\n      loginFormDisplayErrMsg(\"Could not process your request\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"Login-form-component\">\r\n      {loadingBar && <LoadingBar />}\r\n      <div className=\"Login-form-heading\">\r\n        <h2 className='my-3'>Login</h2>\r\n      </div>\r\n      <div className=\"Login-form\">\r\n        <form onSubmit={loginSubmitForm} className=\"form\" >\r\n          <div class=\"Login-txt-field\">\r\n            <input type=\"text\" name=\"username\" value={loginFormData.username} onChange={handleLoginFormData} required />\r\n            <span></span>\r\n            <label>Mail-Id</label>\r\n          </div>\r\n          <div class=\"Login-txt-field\">\r\n            <input type=\"password\" name=\"password\" value={loginFormData.password} onChange={handleLoginFormData} required /> {/* pattern=\"^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.*\\d).{8,15}$\" title='Password should contain 1 uppercase, 1 digit, 1 Special Character, and length between 8-15.' */}\r\n            <span></span>\r\n            <label>Password</label>\r\n          </div>\r\n          {errMsgDiv &&\r\n            <div className=\"Login-div-for-err-msg\">\r\n              <label>{errMsg}</label>\r\n            </div>}\r\n          <div><button type=\"submit\" className=\"btn Login-breeze-button px-4\" >Login</button></div>\r\n          <div style={{ display: 'flex', justifyContent: 'space-between'}}>\r\n            <div className=\"Login-label-already-have\">\r\n              Dont have an account?&nbsp;\r\n              <a href=\"./register-user\" className=\"Login-anchor-navigate\" >Register</a>\r\n            </div>\r\n            <div className=\"Login-label-already-have\">\r\n              <a href=\"./reset-password\" className=\"Login-anchor-navigate\" >Forgot Password</a>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nexport default LoginForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
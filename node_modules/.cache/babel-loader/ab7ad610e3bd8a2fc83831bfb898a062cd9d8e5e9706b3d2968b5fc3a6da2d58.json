{"ast":null,"code":"import{useState}from\"react\";import AdminService from\"../../../../../Services/admin_service/AdminService\";import Constants from\"../../../../Constants\";import LoadingBar from\"../../../../loading_bar_component/LoadingBar\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function AddSample(){const[loadingBar,setLoadingBar]=useState(false);// add sample intro video code\nconst[sampleIntroVideo,setSampleIntroVideo]=useState(null);const handleSampleIntroVideo=event=>{const file=event.target.files[0];if(file&&file.type.startsWith('video/')){setSampleIntroVideo(file);}else{alert('Please select a video file');event.target.value='';// Clear the file input\nsetSampleIntroVideo(null);}};const handleAddSampleIntroVideo=async()=>{if(!sampleIntroVideo){addSampleIntroVideoFieldsDisplayErrMsg('Please upload sample introduction video');}else if(sampleIntroVideo.size>5*1024*1024){addSampleIntroVideoFieldsDisplayErrMsg('Sample introduction video file size exceeds the maximum limit of 5MB');}else{setLoadingBar(true);const formData=new FormData();formData.append('sampleIntroVideo',sampleIntroVideo);try{const responseData=await AdminService.addSampleIntroVideo(formData);console.log(responseData);addSampleIntroVideoFieldsDisplaySucMsg('Sample introduction Video Added Successfully');}catch(error){handleAddSampleIntroVideoErrors(error.message);}finally{setLoadingBar(false);}}};const handleAddSampleIntroVideoErrors=errorStatus=>{if(Constants.FILES_NOT_UPLOADED===errorStatus)addSampleIntroVideoFieldsDisplayErrMsg(\"Files could not uploaded\");else addSampleIntroVideoFieldsDisplayErrMsg(\"Could not process your request\");};//Fields for to display err msg div and label\nconst[messageColor,setMessageColor]=useState(Constants.MESSAGE_COLOR);const[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//JS for to display err msg\nconst addSampleIntroVideoFieldsDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};//JS for to display success msg\nconst addSampleIntroVideoFieldsDisplaySucMsg=errorMessage=>{setMessageColor('green');setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);setMessageColor('#be3144');},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};const customCssForMsg={fontSize:'medium',fontWeight:'700',color:messageColor};return/*#__PURE__*/_jsxs(\"div\",{children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-sample-intro-video-file mt-4\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Upload Sample Intro Video\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",className:\"form-control\",id:\"AddSampleIntroVideoFile\",accept:\"video/*\",onChange:handleSampleIntroVideo}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})})}),/*#__PURE__*/_jsx(\"button\",{className:\"dashboard-button\",onClick:handleAddSampleIntroVideo,children:\"Upload\"})]})]});}export default AddSample;","map":{"version":3,"names":["useState","AdminService","Constants","LoadingBar","jsx","_jsx","jsxs","_jsxs","AddSample","loadingBar","setLoadingBar","sampleIntroVideo","setSampleIntroVideo","handleSampleIntroVideo","event","file","target","files","type","startsWith","alert","value","handleAddSampleIntroVideo","addSampleIntroVideoFieldsDisplayErrMsg","size","formData","FormData","append","responseData","addSampleIntroVideo","console","log","addSampleIntroVideoFieldsDisplaySucMsg","error","handleAddSampleIntroVideoErrors","message","errorStatus","FILES_NOT_UPLOADED","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","SET_TIME_OUT_FOR_SUCCESS_MSG","customCssForMsg","fontSize","fontWeight","color","children","className","id","accept","onChange","style","onClick"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/admin_feature_component/add_sample/AddSample.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport AdminService from \"../../../../../Services/admin_service/AdminService\";\r\nimport Constants from \"../../../../Constants\";\r\nimport LoadingBar from \"../../../../loading_bar_component/LoadingBar\";\r\n\r\nfunction AddSample() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    // add sample intro video code\r\n    const [sampleIntroVideo, setSampleIntroVideo] = useState(null);\r\n    const handleSampleIntroVideo = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && file.type.startsWith('video/')) {\r\n            setSampleIntroVideo(file);\r\n        } else {\r\n            alert('Please select a video file');\r\n            event.target.value = ''; // Clear the file input\r\n            setSampleIntroVideo(null);\r\n        }\r\n    };\r\n\r\n    const handleAddSampleIntroVideo = async () => {\r\n        if (!sampleIntroVideo) {\r\n            addSampleIntroVideoFieldsDisplayErrMsg('Please upload sample introduction video');\r\n        } else if (sampleIntroVideo.size > 5 * 1024 * 1024) { \r\n            addSampleIntroVideoFieldsDisplayErrMsg('Sample introduction video file size exceeds the maximum limit of 5MB');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const formData = new FormData();\r\n            formData.append('sampleIntroVideo',sampleIntroVideo);\r\n\r\n            try { \r\n                const responseData = await AdminService.addSampleIntroVideo(formData); \r\n                console.log(responseData);\r\n                addSampleIntroVideoFieldsDisplaySucMsg('Sample introduction Video Added Successfully');\r\n            } catch (error) {\r\n                handleAddSampleIntroVideoErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleAddSampleIntroVideoErrors = (errorStatus) => {\r\n        if (Constants.FILES_NOT_UPLOADED === errorStatus)\r\n            addSampleIntroVideoFieldsDisplayErrMsg(\"Files could not uploaded\");\r\n        else\r\n            addSampleIntroVideoFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    //Fields for to display err msg div and label\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const addSampleIntroVideoFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n    //JS for to display success msg\r\n    const addSampleIntroVideoFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { loadingBar && <LoadingBar /> }\r\n            <div className=\"add-sample-intro-video-file mt-4\">\r\n                <label>Upload Sample Intro Video</label>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"AddSampleIntroVideoFile\"\r\n                    accept=\"video/*\"\r\n                    onChange={handleSampleIntroVideo}\r\n                />\r\n                <div className='mt-2'>\r\n                    {errMsgDiv &&\r\n                        <div style={customCssForMsg}>\r\n                            <label>{errMsg}</label>\r\n                        </div>}\r\n                </div>\r\n                <button\r\n                    className=\"dashboard-button\"\r\n                    onClick={handleAddSampleIntroVideo}\r\n                >\r\n                    Upload\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddSample;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
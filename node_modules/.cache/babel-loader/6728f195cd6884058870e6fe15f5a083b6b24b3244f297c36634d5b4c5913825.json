{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze (15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\exponent_feature_component\\\\interview_supporter_feature_component\\\\create_interview_support_component\\\\CreateInterviewSupport.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './CreateInterviewSupport.css';\nimport Multiselect from 'multiselect-react-dropdown';\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\nimport Constants from '../../../../../Constants';\nimport { FaRedo } from 'react-icons/fa';\nimport { Button } from 'react-bootstrap';\nimport InterviewSupporterService from '../../../../../../Services/exponent_service/InterviewSupporterService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CreateInterviewSupport() {\n  _s();\n  const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\n  const [loadingBar, setLoadingBar] = useState(false);\n  const userId = localStorage.getItem(\"breezeUserId\");\n\n  // technology code\n  const [technologies, setTechnologies] = useState([]);\n  const [technologiesList, setTechnologiesList] = useState([]);\n  const onSelectTechnology = (selectedList, selectedItem) => {\n    setTechnologies([...selectedList]);\n    console.log(technologies);\n  };\n  const onRemoveTechnology = (selectedList, removedItem) => {\n    setTechnologies([...selectedList]);\n    console.log(technologies);\n  };\n\n  // time slot code\n  const [timeSlotList, setTimeSlotList] = useState([]);\n  const [selectedSlots, setSelectedSlots] = useState([]);\n  const handleTimeSlotClick = slot => {\n    if (selectedSlots.includes(slot)) {\n      setSelectedSlots(selectedSlots.filter(s => s !== slot));\n    } else {\n      setSelectedSlots([...selectedSlots, slot]);\n    }\n    console.log(selectedSlots);\n  };\n  const handleTimeSlotReload = () => {\n    setSelectedSlots([]);\n  };\n  const handleSelectAllSlots = () => {\n    setSelectedSlots(timeSlotList);\n  };\n  useEffect(() => {\n    const request = {\n      userId: userId\n    };\n    const getTechStackByExponentId = async () => {\n      setLoadingBar(true);\n      try {\n        const responseData = await GlobalService.getTechStackByExponentId(request);\n        console.log(responseData);\n        const jsonResponseData = responseData.map((item, index) => {\n          return {\n            technologyName: item\n          };\n        });\n        console.log(jsonResponseData);\n        setTechnologiesList(jsonResponseData);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    };\n    getTechStackByExponentId();\n    const getAllTimeSlot = async () => {\n      setLoadingBar(true);\n      try {\n        const responseData = await GlobalService.getAllTimeSlot();\n        console.log(responseData);\n        setTimeSlotList(responseData);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    };\n    getAllTimeSlot();\n  }, [userId]);\n  const handleCreateInterviewSupport = async () => {\n    console.log(technologies);\n    console.log(selectedSlots);\n    if (technologies === null || technologies.length === 0) {\n      createInterviewSupportFieldsDisplayErrMsg('Please select technical stack to give interview support from your technical stack');\n    } else if (selectedSlots === null || selectedSlots.length === 0) {\n      createInterviewSupportFieldsDisplayErrMsg('Please select Your Available Time Slots');\n    } else {\n      setLoadingBar(true);\n      const request = {\n        exponentId: userId,\n        technologyList: technologies,\n        timeSlotList: selectedSlots\n      };\n      try {\n        const responseData = await InterviewSupporterService.createInterviewSupport(request);\n        console.log(responseData);\n        createInterviewSupportFieldsDisplaySucMsg('Interview Support Created Successfully, Our backend team will verify shortly...');\n      } catch (error) {\n        handleCreateInterviewSupportErrors(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleCreateInterviewSupportErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) createInterviewSupportFieldsDisplayErrMsg(\"Inputs are invalid\");else if (Constants.EXISTING_INTERVIEW_SUPPORT === errorStatus) createInterviewSupportFieldsDisplayErrMsg(\"You have already created an Interview Support\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) createInterviewSupportFieldsDisplayErrMsg(\"Sorry, Our service is down\");else createInterviewSupportFieldsDisplayErrMsg(\"Could not process your request\");\n  };\n\n  //Fields for to display err msg div and label\n  const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  //JS for to display err msg\n  const createInterviewSupportFieldsDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n  //JS for to display success msg\n  const createInterviewSupportFieldsDisplaySucMsg = errorMessage => {\n    setMessageColor('green');\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n      setMessageColor(Constants.MESSAGE_COLOR);\n    }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\n  };\n  const customCssForMsg = {\n    fontSize: 'medium',\n    fontWeight: '700',\n    color: messageColor\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-interview-support\",\n    style: {\n      fontSize: '14px'\n    },\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-support-form\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"technology-multiselect mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Add Technical Stack\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n            id: \"technology\",\n            options: technologiesList,\n            onSelect: onSelectTechnology,\n            onRemove: onRemoveTechnology,\n            displayValue: \"technologyName\" //technologyName\n            ,\n            placeholder: \"Your Technical Stack\",\n            avoidHighlightFirstOption: true,\n            style: {\n              chips: {\n                background: childColor\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"time-slots mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"label-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Select Your Available Time Slots for a day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                display: 'flex',\n                gap: '20px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reload-container\",\n                onClick: handleSelectAllSlots,\n                children: [/*#__PURE__*/_jsxDEV(FaRedo, {\n                  className: \"reload-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reload-text\",\n                  children: \"Check All Slots\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"reload-container\",\n                onClick: handleTimeSlotReload,\n                children: [/*#__PURE__*/_jsxDEV(FaRedo, {\n                  className: \"reload-icon\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"reload-text\",\n                  children: \"Uncheck All Slots\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time-slot-container\",\n            children: timeSlotList.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: `time-slot-button ${selectedSlots.includes(item) ? 'selected' : ''}`,\n              onClick: () => handleTimeSlotClick(item),\n              children: Constants.formatTime(Constants.convertUserTimezoneTime(item.slotStartTime)) + ' - ' + Constants.formatTime(Constants.convertUserTimezoneTime(item.slotEndTime))\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-2\",\n          children: errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: customCssForMsg,\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: errMsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '12px'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"* \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 51\n              }, this), \"You can create only one Interview Support.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"dashboard-button mt-1\",\n            onClick: handleCreateInterviewSupport,\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n_s(CreateInterviewSupport, \"qxtdaSh7LSxYGsFm5WURSYQSXVU=\");\n_c = CreateInterviewSupport;\nexport default CreateInterviewSupport;\nvar _c;\n$RefreshReg$(_c, \"CreateInterviewSupport\");","map":{"version":3,"names":["useEffect","useState","Multiselect","GlobalService","LoadingBar","Constants","FaRedo","Button","InterviewSupporterService","jsxDEV","_jsxDEV","CreateInterviewSupport","_s","childColor","getComputedStyle","document","documentElement","getPropertyValue","loadingBar","setLoadingBar","userId","localStorage","getItem","technologies","setTechnologies","technologiesList","setTechnologiesList","onSelectTechnology","selectedList","selectedItem","console","log","onRemoveTechnology","removedItem","timeSlotList","setTimeSlotList","selectedSlots","setSelectedSlots","handleTimeSlotClick","slot","includes","filter","s","handleTimeSlotReload","handleSelectAllSlots","request","getTechStackByExponentId","responseData","jsonResponseData","map","item","index","technologyName","error","message","getAllTimeSlot","handleCreateInterviewSupport","length","createInterviewSupportFieldsDisplayErrMsg","exponentId","technologyList","createInterviewSupport","createInterviewSupportFieldsDisplaySucMsg","handleCreateInterviewSupportErrors","errorStatus","INVALID_REQUEST_FIELD","EXISTING_INTERVIEW_SUPPORT","BREEZE_DATABASE_EXCEPTION","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","SET_TIME_OUT_FOR_SUCCESS_MSG","customCssForMsg","fontSize","fontWeight","color","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","id","options","onSelect","onRemove","displayValue","placeholder","avoidHighlightFirstOption","chips","background","display","gap","onClick","type","formatTime","convertUserTimezoneTime","slotStartTime","slotEndTime","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/feature_component/exponent_feature_component/interview_supporter_feature_component/create_interview_support_component/CreateInterviewSupport.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './CreateInterviewSupport.css';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\r\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\r\nimport Constants from '../../../../../Constants';\r\nimport { FaRedo } from 'react-icons/fa';\r\nimport { Button } from 'react-bootstrap';\r\nimport InterviewSupporterService from '../../../../../../Services/exponent_service/InterviewSupporterService';\r\n\r\nfunction CreateInterviewSupport() {\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n\r\n    // technology code\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [technologiesList, setTechnologiesList] = useState([]);\r\n    const onSelectTechnology = (selectedList, selectedItem) => {\r\n        setTechnologies([...selectedList]);\r\n        console.log(technologies);\r\n    }\r\n    const onRemoveTechnology = (selectedList, removedItem) => {\r\n        setTechnologies([...selectedList]);\r\n        console.log(technologies);\r\n    }\r\n\r\n    // time slot code\r\n    const [timeSlotList, setTimeSlotList] = useState([]);\r\n    const [selectedSlots, setSelectedSlots] = useState([]);\r\n    const handleTimeSlotClick = (slot) => {\r\n        if (selectedSlots.includes(slot)) {\r\n            setSelectedSlots(selectedSlots.filter(s => s !== slot));\r\n        } else {\r\n            setSelectedSlots([...selectedSlots, slot]);\r\n        }\r\n        console.log(selectedSlots);\r\n    };\r\n    const handleTimeSlotReload = () => {\r\n        setSelectedSlots([]);\r\n    };\r\n\r\n    const handleSelectAllSlots = () => {\r\n        setSelectedSlots(timeSlotList);\r\n    };\r\n\r\n    useEffect(() => {\r\n\r\n        const request = {\r\n            userId: userId,\r\n        }\r\n\r\n        const getTechStackByExponentId = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getTechStackByExponentId(request);\r\n                console.log(responseData);\r\n                const jsonResponseData = responseData.map((item, index) => {\r\n                    return { technologyName: item }\r\n                });\r\n                console.log(jsonResponseData);\r\n                setTechnologiesList(jsonResponseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getTechStackByExponentId();\r\n\r\n        const getAllTimeSlot = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getAllTimeSlot();\r\n                console.log(responseData);\r\n                setTimeSlotList(responseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getAllTimeSlot();\r\n\r\n    }, [userId]);\r\n\r\n    const handleCreateInterviewSupport = async () => {\r\n        console.log(technologies);\r\n        console.log(selectedSlots);\r\n\r\n        if (technologies === null || technologies.length === 0) {\r\n            createInterviewSupportFieldsDisplayErrMsg('Please select technical stack to give interview support from your technical stack');\r\n        } else if (selectedSlots === null || selectedSlots.length === 0) {\r\n            createInterviewSupportFieldsDisplayErrMsg('Please select Your Available Time Slots');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                exponentId: userId,\r\n                technologyList: technologies,\r\n                timeSlotList: selectedSlots,\r\n            }\r\n            try {\r\n                const responseData = await InterviewSupporterService.createInterviewSupport(request);\r\n                console.log(responseData);\r\n                createInterviewSupportFieldsDisplaySucMsg('Interview Support Created Successfully, Our backend team will verify shortly...');\r\n            } catch (error) {\r\n                handleCreateInterviewSupportErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCreateInterviewSupportErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            createInterviewSupportFieldsDisplayErrMsg(\"Inputs are invalid\");\r\n        else if (Constants.EXISTING_INTERVIEW_SUPPORT === errorStatus)\r\n            createInterviewSupportFieldsDisplayErrMsg(\"You have already created an Interview Support\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            createInterviewSupportFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            createInterviewSupportFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    //Fields for to display err msg div and label\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const createInterviewSupportFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n    //JS for to display success msg\r\n    const createInterviewSupportFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor(Constants.MESSAGE_COLOR);\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div className='create-interview-support' style={{ fontSize: '14px' }}>\r\n            {loadingBar && <LoadingBar />}\r\n            <div className='interview-support-form'>\r\n                <form>\r\n                    <div className='technology-multiselect mt-3'>\r\n                        <label>Add Technical Stack</label>\r\n                        <Multiselect\r\n                            id='technology'\r\n                            options={technologiesList}\r\n                            onSelect={onSelectTechnology}\r\n                            onRemove={onRemoveTechnology}\r\n                            displayValue=\"technologyName\" //technologyName\r\n                            placeholder=\"Your Technical Stack\"\r\n                            avoidHighlightFirstOption={true}\r\n                            style={{\r\n                                chips: {\r\n                                    background: childColor,\r\n                                },\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div className='time-slots mt-3'>\r\n                        <div className=\"label-container\">\r\n                            <label>Select Your Available Time Slots for a day</label>\r\n                            <div style={{display:'flex',gap:'20px'}}>\r\n                                <div className=\"reload-container\" onClick={handleSelectAllSlots}>\r\n                                    <FaRedo className=\"reload-icon\" />\r\n                                    <span className=\"reload-text\">Check All Slots</span>\r\n                                </div>\r\n                                <div className=\"reload-container\" onClick={handleTimeSlotReload}>\r\n                                    <FaRedo className=\"reload-icon\" />\r\n                                    <span className=\"reload-text\">Uncheck All Slots</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"time-slot-container\" >\r\n                            {timeSlotList.map((item, index) => (\r\n                                <button\r\n                                    key={index}\r\n                                    type='button'\r\n                                    className={`time-slot-button ${selectedSlots.includes(item) ? 'selected' : ''}`}\r\n                                    onClick={() => handleTimeSlotClick(item)}\r\n                                >\r\n                                    {Constants.formatTime(Constants.convertUserTimezoneTime(item.slotStartTime)) + ' - ' + Constants.formatTime(Constants.convertUserTimezoneTime(item.slotEndTime))}\r\n                                </button>\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                    <div className='mt-2'>\r\n                        {errMsgDiv &&\r\n                            <div style={customCssForMsg}>\r\n                                <label>{errMsg}</label>\r\n                            </div>}\r\n                    </div>\r\n                    <div className='mt-3'>\r\n                        <div style={{ fontSize: '12px' }}>\r\n                            <label htmlFor=\"name\"><span style={{ color: 'red' }}>* </span>You can create only one Interview Support.</label>\r\n                        </div>\r\n                        <Button\r\n                            className='dashboard-button mt-1'\r\n                            onClick={handleCreateInterviewSupport}\r\n                        >\r\n                            Create\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateInterviewSupport;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze (15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\admin_feature_component\\\\add_sample\\\\AddSample.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport AdminService from \"../../../../../Services/admin_service/AdminService\";\nimport Constants from \"../../../../Constants\";\nimport LoadingBar from \"../../../../loading_bar_component/LoadingBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AddSample() {\n  _s();\n  const [loadingBar, setLoadingBar] = useState(false);\n\n  // add sample intro video code\n  const [sampleIntroVideo, setSampleIntroVideo] = useState(null);\n  const handleSampleIntroVideo = event => {\n    const file = event.target.files[0];\n    if (file && file.type.startsWith('video/')) {\n      setSampleIntroVideo(file);\n    } else {\n      alert('Please select a video file');\n      event.target.value = ''; // Clear the file input\n      setSampleIntroVideo(null);\n    }\n  };\n  const handleAddSampleIntroVideo = async () => {\n    if (!sampleIntroVideo) {\n      addSampleIntroVideoFieldsDisplayErrMsg('Please upload sample introduction video');\n    } else if (sampleIntroVideo.size > 5 * 1024 * 1024) {\n      addSampleIntroVideoFieldsDisplayErrMsg('Sample introduction video file size exceeds the maximum limit of 5MB');\n    } else {\n      setLoadingBar(true);\n      const formData = new FormData();\n      formData.append('sampleIntroVideo', sampleIntroVideo);\n      try {\n        const responseData = await AdminService.addSampleIntroVideo(formData);\n        console.log(responseData);\n        addSampleIntroVideoFieldsDisplaySucMsg('Sample introduction Video Added Successfully');\n      } catch (error) {\n        handleAddSampleIntroVideoErrors(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleAddSampleIntroVideoErrors = errorStatus => {\n    if (Constants.FILES_NOT_UPLOADED === errorStatus) addSampleIntroVideoFieldsDisplayErrMsg(\"Files could not uploaded\");else addSampleIntroVideoFieldsDisplayErrMsg(\"Could not process your request\");\n  };\n\n  //Fields for to display err msg div and label\n  const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  //JS for to display err msg\n  const addSampleIntroVideoFieldsDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n  //JS for to display success msg\n  const addSampleIntroVideoFieldsDisplaySucMsg = errorMessage => {\n    setMessageColor('green');\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n      setMessageColor('#be3144');\n    }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\n  };\n  const customCssForMsg = {\n    fontSize: 'medium',\n    fontWeight: '700',\n    color: messageColor\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-sample-intro-video-file mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Upload Sample Intro Video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        className: \"form-control\",\n        id: \"AddSampleIntroVideoFile\",\n        accept: \"video/*\",\n        onChange: handleSampleIntroVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-2\",\n        children: errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: customCssForMsg,\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: errMsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"dashboard-button\",\n        onClick: handleAddSampleIntroVideo,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(AddSample, \"9bBqFLAaIK1bR1hFyLmdzRi0afE=\");\n_c = AddSample;\nexport default AddSample;\nvar _c;\n$RefreshReg$(_c, \"AddSample\");","map":{"version":3,"names":["useState","AdminService","Constants","LoadingBar","jsxDEV","_jsxDEV","AddSample","_s","loadingBar","setLoadingBar","sampleIntroVideo","setSampleIntroVideo","handleSampleIntroVideo","event","file","target","files","type","startsWith","alert","value","handleAddSampleIntroVideo","addSampleIntroVideoFieldsDisplayErrMsg","size","formData","FormData","append","responseData","addSampleIntroVideo","console","log","addSampleIntroVideoFieldsDisplaySucMsg","error","handleAddSampleIntroVideoErrors","message","errorStatus","FILES_NOT_UPLOADED","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","SET_TIME_OUT_FOR_SUCCESS_MSG","customCssForMsg","fontSize","fontWeight","color","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","accept","onChange","style","onClick","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/feature_component/admin_feature_component/add_sample/AddSample.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport AdminService from \"../../../../../Services/admin_service/AdminService\";\r\nimport Constants from \"../../../../Constants\";\r\nimport LoadingBar from \"../../../../loading_bar_component/LoadingBar\";\r\n\r\nfunction AddSample() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    // add sample intro video code\r\n    const [sampleIntroVideo, setSampleIntroVideo] = useState(null);\r\n    const handleSampleIntroVideo = (event) => {\r\n        const file = event.target.files[0];\r\n        if (file && file.type.startsWith('video/')) {\r\n            setSampleIntroVideo(file);\r\n        } else {\r\n            alert('Please select a video file');\r\n            event.target.value = ''; // Clear the file input\r\n            setSampleIntroVideo(null);\r\n        }\r\n    };\r\n\r\n    const handleAddSampleIntroVideo = async () => {\r\n        if (!sampleIntroVideo) {\r\n            addSampleIntroVideoFieldsDisplayErrMsg('Please upload sample introduction video');\r\n        } else if (sampleIntroVideo.size > 5 * 1024 * 1024) { \r\n            addSampleIntroVideoFieldsDisplayErrMsg('Sample introduction video file size exceeds the maximum limit of 5MB');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const formData = new FormData();\r\n            formData.append('sampleIntroVideo',sampleIntroVideo);\r\n\r\n            try { \r\n                const responseData = await AdminService.addSampleIntroVideo(formData); \r\n                console.log(responseData);\r\n                addSampleIntroVideoFieldsDisplaySucMsg('Sample introduction Video Added Successfully');\r\n            } catch (error) {\r\n                handleAddSampleIntroVideoErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    const handleAddSampleIntroVideoErrors = (errorStatus) => {\r\n        if (Constants.FILES_NOT_UPLOADED === errorStatus)\r\n            addSampleIntroVideoFieldsDisplayErrMsg(\"Files could not uploaded\");\r\n        else\r\n            addSampleIntroVideoFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    //Fields for to display err msg div and label\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const addSampleIntroVideoFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n    //JS for to display success msg\r\n    const addSampleIntroVideoFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            { loadingBar && <LoadingBar /> }\r\n            <div className=\"add-sample-intro-video-file mt-4\">\r\n                <label>Upload Sample Intro Video</label>\r\n                <input\r\n                    type=\"file\"\r\n                    className=\"form-control\"\r\n                    id=\"AddSampleIntroVideoFile\"\r\n                    accept=\"video/*\"\r\n                    onChange={handleSampleIntroVideo}\r\n                />\r\n                <div className='mt-2'>\r\n                    {errMsgDiv &&\r\n                        <div style={customCssForMsg}>\r\n                            <label>{errMsg}</label>\r\n                        </div>}\r\n                </div>\r\n                <button\r\n                    className=\"dashboard-button\"\r\n                    onClick={handleAddSampleIntroVideo}\r\n                >\r\n                    Upload\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AddSample;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import{useState}from'react';import'../Dashboard.css';import'./NavBar.css';import{CDBNavbar,CDBNavBrand,CDBBtn}from'cdbreact';import{Button,Col,Container,Modal,Row}from'react-bootstrap';import Multiselect from'multiselect-react-dropdown';import{PhoneInput}from'react-international-phone';import'react-international-phone/style.css';import GlobalService from'../../../Services/global_service/GlobalService';import UserService from'../../../Services/user_service/UserService';import Constants from'../../Constants';import LoadingBar from'../../loading_bar_component/LoadingBar';import appLogo from'../../../assets/appicon.jpeg';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function NavBar(){const userId=localStorage.getItem(\"breezeUserId\");const userType=localStorage.getItem(\"breezeUserType\");const userFullName=localStorage.getItem(\"breezeUserFullName\");const userMailId=localStorage.getItem(\"breezeUsername\");const[loadingBar,setLoadingBar]=useState(false);const[messageColor,setMessageColor]=useState(Constants.MESSAGE_COLOR);const childColor=getComputedStyle(document.documentElement).getPropertyValue('--child-color');//Fields for to display err msg div and label\nconst[errMsgDiv,setErrMsgDiv]=useState(false);const[errMsg,setErrMsg]=useState(\"\");//JS for to display err msg\nconst updateFieldsDisplayErrMsg=errorMessage=>{setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);},Constants.SET_TIME_OUT_FOR_ERROR_MSG);};//JS for to display success msg\nconst updateFieldsDisplaySucMsg=errorMessage=>{setMessageColor('green');setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);setMessageColor('#be3144');handleModalClose();},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};const updateFieldsDisplaySucMsgToVerify=errorMessage=>{setMessageColor('green');setErrMsg(errorMessage);setErrMsgDiv(true);setTimeout(()=>{setErrMsg(\"\");setErrMsgDiv(false);setMessageColor('#be3144');},Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);};const[isUserProfileDropdown,setIsUserProfileDropdown]=useState(false);const toggleUserProfileDropdown=()=>{setIsUserProfileDropdown(!isUserProfileDropdown);};const[showModal,setShowModal]=useState(false);const handleModalClose=()=>{setShowModal(false);setNewlyAddedTechnologies([]);setTechnologiesList([]);setExponentTechnicalStack([]);setUserPhone('');setPhone('');setCountryCode('');setPhoneWithCountryCode(null);setExperience(0);setUserMail('');setIsOtpSentToPhoneNumber(false);setIsContactInfoVerified(false);setOtpToPhoneNumber('');setIsDisableContactInfo(true);setIsOtpSentToMail(false);setIsMailInfoVerified(false);setOtpToMail('');setIsDisableMailInfo(true);};// technology code\nconst[newlyAddedTechnologies,setNewlyAddedTechnologies]=useState([]);const[technologiesList,setTechnologiesList]=useState([]);const[exponentTechnicalStack,setExponentTechnicalStack]=useState([]);const onSelectTechnology=(selectedList,selectedItem)=>{setNewlyAddedTechnologies([...selectedList]);};const onRemoveTechnology=(selectedList,removedItem)=>{setNewlyAddedTechnologies([...selectedList]);};// phone code\nconst[userPhone,setUserPhone]=useState('');const[phone,setPhone]=useState('');const[countryCode,setCountryCode]=useState('');const[phoneWithCountryCode,setPhoneWithCountryCode]=useState(null);const[iso2,setIso2]=useState('');const handleContactInfo=(phone,country)=>{const countryCodeWithPlus='+'+country.country.dialCode;const phoneWithOutCountryCode=phone.replace(countryCodeWithPlus,'');setPhone(phoneWithOutCountryCode);console.log(country);setPhoneWithCountryCode(country.inputValue);setCountryCode(country.country.dialCode);setIso2(country.country.iso2);};const[isOtpSentToPhoneNumber,setIsOtpSentToPhoneNumber]=useState(false);const[isContactInfoVerified,setIsContactInfoVerified]=useState(false);const handleSendOtpToPhoneNumber=async()=>{if(phone===null||phone===''||phone===undefined){updateFieldsDisplayErrMsg(\"please enter your contact information\");}else{setLoadingBar(true);const request={countryCode:countryCode,phoneNumber:phone,phoneNumberWithCountryCode:phoneWithCountryCode,regionCode:iso2,userId:userId};console.log(request);try{const responseData=await UserService.sendOtpToPhoneNumber(request);console.log(responseData);updateFieldsDisplaySucMsgToVerify(responseData);setIsOtpSentToPhoneNumber(true);}catch(error){handleSendOtpToPhoneNumberErrors(error.message);setIsOtpSentToPhoneNumber(false);}finally{setLoadingBar(false);}}};const handleSendOtpToPhoneNumberErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)updateFieldsDisplayErrMsg(\"Please enter valid contact information\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)updateFieldsDisplayErrMsg(\"Your are not registered\");else if(Constants.INVALID_PHONE_NUMBER===errorStatus)updateFieldsDisplayErrMsg(\"Entered Phone Number is Invalid\");else if(Constants.OTP_NOT_SENT===errorStatus)updateFieldsDisplayErrMsg(\"Failed to send otp\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else updateFieldsDisplayErrMsg(\"Could not process your request\");};const handleEditContactInfo=()=>{setIsOtpSentToPhoneNumber(false);};const[otpToPhoneNumber,setOtpToPhoneNumber]=useState('');const handleOtpInput=e=>setOtpToPhoneNumber(e.target.value);const handleVerifyOtpToPhoneNumber=async()=>{if(otpToPhoneNumber===0||otpToPhoneNumber===null||otpToPhoneNumber===''||otpToPhoneNumber===undefined){updateFieldsDisplayErrMsg(\"please enter otp\");}else if(otpToPhoneNumber.length!==6){updateFieldsDisplayErrMsg(\"invalid otp\");}else{setLoadingBar(true);const request={emailOtp:otpToPhoneNumber,userId:userId};console.log(request);try{const responseData=await UserService.verifyOtpToPhoneNumber(request);console.log(responseData);setIsContactInfoVerified(true);}catch(error){handleVerifyOtpToPhoneNumberErrors(error.message);setIsContactInfoVerified(false);}finally{setLoadingBar(false);}}};const handleVerifyOtpToPhoneNumberErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)updateFieldsDisplayErrMsg(\"Please enter valid otp\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)updateFieldsDisplayErrMsg(\"Your are not registered\");else if(Constants.OTP_NOT_MATCHED===errorStatus)updateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else updateFieldsDisplayErrMsg(\"Could not process your request\");};// experience code\nconst[experience,setExperience]=useState(0);const handleExperienceInput=e=>setExperience(e.target.value);const emailPattern=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;// mail code\nconst[userMail,setUserMail]=useState('');const handleMailInput=e=>setUserMail(e.target.value);const[isOtpSentToMail,setIsOtpSentToMail]=useState(false);const[isMailInfoVerified,setIsMailInfoVerified]=useState(false);const handleSendOtpToMail=async()=>{if(!emailPattern.test(userMail)||!userMail.slice(-4).includes('.co')){updateFieldsDisplayErrMsg(\"please enter a valid mail id\");}else{setLoadingBar(true);const request={userId:userId,username:userMail};console.log(request);try{const responseData=await UserService.sendOtpToMail(request);console.log(responseData);updateFieldsDisplaySucMsgToVerify(responseData);setIsOtpSentToMail(true);}catch(error){handleSendOtpToMailErrors(error.message);setIsOtpSentToMail(false);}finally{setLoadingBar(false);}}};const handleSendOtpToMailErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)updateFieldsDisplayErrMsg(\"Please enter valid mail information\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)updateFieldsDisplayErrMsg(\"Your are not registered\");else if(Constants.ADDRESS_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Entered Mail Id is Invalid\");else if(Constants.MESSAGING_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Mail not sent, try again\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else updateFieldsDisplayErrMsg(\"Could not process your request\");};const handleEditMailInfo=()=>{setIsOtpSentToMail(false);};const[otpToMail,setOtpToMail]=useState('');const handleOtpInputForMail=e=>setOtpToMail(e.target.value);const handleVerifyOtpToMail=async()=>{if(otpToMail===0||otpToMail===null||otpToMail===''||otpToMail===undefined){updateFieldsDisplayErrMsg(\"please enter otp\");}else if(otpToMail.length!==6){updateFieldsDisplayErrMsg(\"invalid otp\");}else{setLoadingBar(true);const request={emailOtp:otpToMail,userId:userId};console.log(request);try{const responseData=await UserService.verifyOtpToMail(request);console.log(responseData);setIsMailInfoVerified(true);}catch(error){handleVerifyOtpToMailErrors(error.message);setIsMailInfoVerified(false);}finally{setLoadingBar(false);}}};const handleVerifyOtpToMailErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)updateFieldsDisplayErrMsg(\"Please enter valid otp\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)updateFieldsDisplayErrMsg(\"Your are not registered\");else if(Constants.OTP_NOT_MATCHED===errorStatus)updateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else updateFieldsDisplayErrMsg(\"Could not process your request\");};const handleUpdateDetailsClick=async()=>{setLoadingBar(true);try{const request={userId:userId};if(userType===Constants.EXPONENT){const allTechResponseData=await GlobalService.getAllTechnology();console.log(allTechResponseData);setTechnologiesList(allTechResponseData);const expoTechResponseData=await GlobalService.getTechStackByExponentId(request);console.log(expoTechResponseData);const jsonResponseData=expoTechResponseData.map((item,index)=>{return{technologyName:item};});console.log(jsonResponseData);setExponentTechnicalStack(jsonResponseData);setNewlyAddedTechnologies(jsonResponseData);}const userResponseData=await UserService.getUserDataByUserId(request);console.log(userResponseData);setUserPhone(userResponseData.phoneNumberWithCountryCode);if(userType===Constants.EXPONENT){setExperience(userResponseData.userExperience);}setUserMail(userResponseData.username);}catch(error){}finally{setLoadingBar(false);setShowModal(true);}};const handleUpdateFieldsSubmit=async()=>{if(userType===Constants.EXPONENT&&(newlyAddedTechnologies===null||newlyAddedTechnologies.length===0||newlyAddedTechnologies.length<3)){// console.log('Technologies array is null or empty.');\nupdateFieldsDisplayErrMsg('Please choose your minimum 3 technical stacks');}else if(!isContactInfoVerified&&!isDisableContactInfo){updateFieldsDisplayErrMsg('verify your contact information');}else if(phone===null||phone===''||phone===undefined){console.log('phone is null or empty.');updateFieldsDisplayErrMsg('please enter your contact information');}else if(userType===Constants.EXPONENT&&(experience===null||experience===''||experience===undefined||experience===0)){console.log('experience is null or empty or greater than 50.');updateFieldsDisplayErrMsg('please enter you experience');}else if(userType===Constants.EXPONENT&&(experience===null||experience===''||experience===undefined||experience===0||experience>50)){console.log('experience is null or empty or greater than 50.');updateFieldsDisplayErrMsg('experience should be less than or equal to 50');}else if(!isMailInfoVerified&&!isDisableMailInfo){updateFieldsDisplayErrMsg('verify your mail information');}else if(!emailPattern.test(userMail)||!userMail.slice(-4).includes('.co')){console.log('experience is null or empty or greater than 20.');updateFieldsDisplayErrMsg('please enter a valid mail id');}else{setLoadingBar(true);const request={userId:userId,userType:userType,technologyList:newlyAddedTechnologies,phoneNumber:phone,countryCode:countryCode,phoneNumberWithCountryCode:phoneWithCountryCode,userExperience:experience,username:userMail};console.log(request);try{const responseData=await UserService.updateUserDetails(request);console.log(responseData);localStorage.setItem(\"breezeUsername\",responseData.username);updateFieldsDisplaySucMsg('Details Updated Successfully');}catch(error){handleUpdateFieldsErrors(error.message);}finally{setLoadingBar(false);}}};const handleUpdateFieldsErrors=errorStatus=>{if(Constants.INVALID_REQUEST_FIELD===errorStatus)updateFieldsDisplayErrMsg(\"Please enter valid inputs fields\");else if(Constants.ENTITY_NOT_FOUND===errorStatus)updateFieldsDisplayErrMsg(\"Entity Not Found\");else if(Constants.BREEZE_DATABASE_EXCEPTION===errorStatus)updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else updateFieldsDisplayErrMsg(\"Could not process your request\");};const[isDisableContactInfo,setIsDisableContactInfo]=useState(true);const handleEditClickOnContactInfo=()=>{setIsDisableContactInfo(false);};const[isDisableMailInfo,setIsDisableMailInfo]=useState(true);const handleEditClickOnMailInfo=()=>{setIsDisableMailInfo(false);};// logout code\nconst handleLogout=()=>{localStorage.removeItem('breezeUserId');localStorage.removeItem('breezeUserType');localStorage.removeItem('breezeUsername');localStorage.removeItem('breezeUserFullName');localStorage.removeItem('breezeUserFirstTimeLogin');localStorage.removeItem('breezeExponentType');localStorage.removeItem('breezeJwtToken');localStorage.removeItem('breezeSelectedExponentType');window.location.href='/login';};const customCssForMsg={fontSize:'medium',fontWeight:'700',color:messageColor};return/*#__PURE__*/_jsxs(\"div\",{children:[loadingBar&&/*#__PURE__*/_jsx(LoadingBar,{}),/*#__PURE__*/_jsxs(CDBNavbar,{className:\"app-bg-color justify-content-between px-4\",children:[/*#__PURE__*/_jsxs(CDBNavBrand,{href:\"/\",style:{display:'flex',alignItems:'center'},children:[/*#__PURE__*/_jsx(\"img\",{src:appLogo,alt:\"Logo\",style:{width:'30px',height:'30px',borderRadius:'50%',objectFit:'contain',marginRight:'7px',boxShadow:'0 0 0 2px white',backgroundColor:'white'}}),/*#__PURE__*/_jsx(\"strong\",{className:\"white-color\",style:{margin:0},children:\"Prepswise\"})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"ul\",{className:\"nav\",children:/*#__PURE__*/_jsxs(\"li\",{className:\"nav-item dropdown\",children:[/*#__PURE__*/_jsx(CDBBtn,{onClick:toggleUserProfileDropdown,\"aria-expanded\":isUserProfileDropdown?\"true\":\"false\",className:\"child-bg-color\",style:{fontSize:'16px',fontWeight:'bold'},children:userFullName&&userFullName.charAt(0).toUpperCase()}),/*#__PURE__*/_jsxs(\"ul\",{className:\"dropdown-menu \".concat(isUserProfileDropdown?'show dropdown-menu-start':''),style:{marginTop:isUserProfileDropdown?'20px':'0',marginRight:isUserProfileDropdown?'5px':'0',left:isUserProfileDropdown?'-200px':'auto',width:'240px',maxWidth:'240px',overflow:'auto',fontSize:'12px'},children:[/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"dropdown-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-user\"}),\" \",userFullName]})}),/*#__PURE__*/_jsx(\"li\",{children:/*#__PURE__*/_jsxs(\"label\",{className:\"dropdown-item\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-envelope\"}),\" \",userMailId]})}),userType!==Constants.ADMIN&&/*#__PURE__*/_jsx(\"li\",{onClick:handleUpdateDetailsClick,children:/*#__PURE__*/_jsxs(\"label\",{className:\"dropdown-item\",style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-edit\"}),\" Update Details\"]})}),/*#__PURE__*/_jsx(\"li\",{onClick:handleLogout,children:/*#__PURE__*/_jsxs(\"label\",{className:\"dropdown-item\",style:{cursor:'pointer'},children:[/*#__PURE__*/_jsx(\"i\",{class:\"fas fa-sign-out-alt\"}),\" Logout\"]})})]})]})})})]}),showModal&&/*#__PURE__*/_jsxs(Modal,{className:\"update-details-modal\",size:\"lg\",show:showModal,onHide:handleModalClose,centered:true,backdrop:\"static\",children:[/*#__PURE__*/_jsx(Container,{className:\"px-5\",children:/*#__PURE__*/_jsx(Modal.Header,{closeButton:true,children:/*#__PURE__*/_jsx(Modal.Title,{style:{fontSize:'20px'},children:\"Update Details\"})})}),/*#__PURE__*/_jsx(Modal.Body,{children:/*#__PURE__*/_jsxs(Container,{className:\"px-5\",style:{fontSize:'15px'},children:[userType===Constants.EXPONENT&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"label\",{children:\"Add Technical Stack\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(\"div\",{className:\"technology-multiselect\",children:/*#__PURE__*/_jsx(Multiselect,{id:\"technology\",options:technologiesList,selectedValues:exponentTechnicalStack,onSelect:onSelectTechnology,onRemove:onRemoveTechnology,displayValue:\"technologyName\",placeholder:\"Add Technical Stack\",avoidHighlightFirstOption:true,style:{chips:{background:childColor}}})})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"experience\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Experience\"}),/*#__PURE__*/_jsx(\"input\",{type:\"number\",className:\"expInput\",placeholder:\"Your Experience\",value:experience,onChange:handleExperienceInput,onKeyDown:e=>{const allowedKeys=['.','Backspace'];for(let i=0;i<=9;i++){allowedKeys.push(i.toString());}if(!allowedKeys.includes(e.key)){e.preventDefault();}if(e.key==='.'&&e.target.value.includes('.')){e.preventDefault();}if(e.key==='-'&&e.target.selectionStart!==0){e.preventDefault();}},step:\"any\"// Allows for decimals\n,min:\"1\",max:\"50\"})]})})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Mail Info\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"mail-info\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"div\",{style:{width:'50%'},children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",className:\"form-control\",value:userMail,onChange:handleMailInput,inputStyle:{width:'100%'},disabled:isDisableMailInfo||isOtpSentToMail})}),isDisableMailInfo&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleEditClickOnMailInfo,children:\"Edit\"}),!isMailInfoVerified&&!isDisableMailInfo&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleSendOtpToMail,disabled:isOtpSentToMail,children:\"Send Otp\"}),isMailInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",children:\"Verified\"}),isOtpSentToMail&&!isMailInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleSendOtpToMail,children:\"ReSend\"})]})})})]}),!isMailInfoVerified&&isOtpSentToMail&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Enter Otp\"]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"mail-info\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter Otp\",style:{borderRadius:'4px'},value:otpToMail,onChange:handleOtpInputForMail}),/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleVerifyOtpToMail,children:\"Verify\"}),/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleEditMailInfo,children:\"Edit Mail Info\"})]})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsx(\"label\",{children:\"Contact Info\"}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(PhoneInput,{forceDialCode:true,value:userPhone,onChange:handleContactInfo,inputStyle:{width:'100%'},hideDropdown:true,disabled:isDisableContactInfo||isOtpSentToPhoneNumber}),isDisableContactInfo&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleEditClickOnContactInfo,children:\"Edit\"}),!isContactInfoVerified&&!isDisableContactInfo&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleSendOtpToPhoneNumber,disabled:isOtpSentToPhoneNumber,children:\"Send Otp\"}),isContactInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",children:\"Verified\"}),isOtpSentToPhoneNumber&&!isContactInfoVerified&&/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleSendOtpToPhoneNumber,children:\"ReSend\"})]})})})]}),!isContactInfoVerified&&isOtpSentToPhoneNumber&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(\"span\",{style:{color:'red'},children:\"*\"}),\"Enter Otp\"]}),/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsxs(\"div\",{className:\"contact-info\",style:{display:'flex'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"number\",placeholder:\"Enter Otp\",style:{borderRadius:'4px'},value:otpToPhoneNumber,onChange:handleOtpInput}),/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleVerifyOtpToPhoneNumber,children:\"Verify\"}),/*#__PURE__*/_jsx(Button,{className:\"button-otp\",onClick:handleEditContactInfo,children:\"Edit Contact Info\"})]})})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"mt-2\",children:/*#__PURE__*/_jsx(Row,{children:/*#__PURE__*/_jsx(Col,{})})}),/*#__PURE__*/_jsx(\"div\",{children:errMsgDiv&&/*#__PURE__*/_jsx(\"div\",{style:customCssForMsg,children:/*#__PURE__*/_jsx(\"label\",{children:errMsg})})}),/*#__PURE__*/_jsx(Button,{className:\"dashboard-button mt-3\",onClick:handleUpdateFieldsSubmit,children:\"Update\"})]})})]})]});}export default NavBar;","map":{"version":3,"names":["useState","CDBNavbar","CDBNavBrand","CDBBtn","Button","Col","Container","Modal","Row","Multiselect","PhoneInput","GlobalService","UserService","Constants","LoadingBar","appLogo","jsx","_jsx","jsxs","_jsxs","NavBar","userId","localStorage","getItem","userType","userFullName","userMailId","loadingBar","setLoadingBar","messageColor","setMessageColor","MESSAGE_COLOR","childColor","getComputedStyle","document","documentElement","getPropertyValue","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","updateFieldsDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","updateFieldsDisplaySucMsg","handleModalClose","SET_TIME_OUT_FOR_SUCCESS_MSG","updateFieldsDisplaySucMsgToVerify","isUserProfileDropdown","setIsUserProfileDropdown","toggleUserProfileDropdown","showModal","setShowModal","setNewlyAddedTechnologies","setTechnologiesList","setExponentTechnicalStack","setUserPhone","setPhone","setCountryCode","setPhoneWithCountryCode","setExperience","setUserMail","setIsOtpSentToPhoneNumber","setIsContactInfoVerified","setOtpToPhoneNumber","setIsDisableContactInfo","setIsOtpSentToMail","setIsMailInfoVerified","setOtpToMail","setIsDisableMailInfo","newlyAddedTechnologies","technologiesList","exponentTechnicalStack","onSelectTechnology","selectedList","selectedItem","onRemoveTechnology","removedItem","userPhone","phone","countryCode","phoneWithCountryCode","iso2","setIso2","handleContactInfo","country","countryCodeWithPlus","dialCode","phoneWithOutCountryCode","replace","console","log","inputValue","isOtpSentToPhoneNumber","isContactInfoVerified","handleSendOtpToPhoneNumber","undefined","request","phoneNumber","phoneNumberWithCountryCode","regionCode","responseData","sendOtpToPhoneNumber","error","handleSendOtpToPhoneNumberErrors","message","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","INVALID_PHONE_NUMBER","OTP_NOT_SENT","BREEZE_DATABASE_EXCEPTION","handleEditContactInfo","otpToPhoneNumber","handleOtpInput","e","target","value","handleVerifyOtpToPhoneNumber","length","emailOtp","verifyOtpToPhoneNumber","handleVerifyOtpToPhoneNumberErrors","OTP_NOT_MATCHED","experience","handleExperienceInput","emailPattern","userMail","handleMailInput","isOtpSentToMail","isMailInfoVerified","handleSendOtpToMail","test","slice","includes","username","sendOtpToMail","handleSendOtpToMailErrors","ADDRESS_EXCEPTION","MESSAGING_EXCEPTION","handleEditMailInfo","otpToMail","handleOtpInputForMail","handleVerifyOtpToMail","verifyOtpToMail","handleVerifyOtpToMailErrors","handleUpdateDetailsClick","EXPONENT","allTechResponseData","getAllTechnology","expoTechResponseData","getTechStackByExponentId","jsonResponseData","map","item","index","technologyName","userResponseData","getUserDataByUserId","userExperience","handleUpdateFieldsSubmit","isDisableContactInfo","isDisableMailInfo","technologyList","updateUserDetails","setItem","handleUpdateFieldsErrors","handleEditClickOnContactInfo","handleEditClickOnMailInfo","handleLogout","removeItem","window","location","href","customCssForMsg","fontSize","fontWeight","color","children","className","style","display","alignItems","src","alt","width","height","borderRadius","objectFit","marginRight","boxShadow","backgroundColor","margin","onClick","charAt","toUpperCase","concat","marginTop","left","maxWidth","overflow","ADMIN","cursor","class","size","show","onHide","centered","backdrop","Header","closeButton","Title","Body","id","options","selectedValues","onSelect","onRemove","displayValue","placeholder","avoidHighlightFirstOption","chips","background","type","onChange","onKeyDown","allowedKeys","i","push","toString","key","preventDefault","selectionStart","step","min","max","inputStyle","disabled","forceDialCode","hideDropdown"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze (15)-frontend/breeze/src/components/dashboard_component/navbar_component/NavBar.js"],"sourcesContent":["import { useState } from 'react';\r\nimport '../Dashboard.css';\r\nimport './NavBar.css';\r\nimport {\r\n    CDBNavbar,\r\n    CDBNavBrand,\r\n    CDBBtn,\r\n} from 'cdbreact';\r\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport { PhoneInput } from 'react-international-phone';\r\nimport 'react-international-phone/style.css';\r\nimport GlobalService from '../../../Services/global_service/GlobalService';\r\nimport UserService from '../../../Services/user_service/UserService';\r\nimport Constants from '../../Constants';\r\nimport LoadingBar from '../../loading_bar_component/LoadingBar';\r\nimport appLogo from '../../../assets/appicon.jpeg';\r\n\r\nfunction NavBar() {\r\n\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n    const userType = localStorage.getItem(\"breezeUserType\");\r\n    const userFullName = localStorage.getItem(\"breezeUserFullName\");\r\n    const userMailId = localStorage.getItem(\"breezeUsername\");\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n\r\n    //Fields for to display err msg div and label\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const updateFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    //JS for to display success msg\r\n    const updateFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n            handleModalClose();\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n    const updateFieldsDisplaySucMsgToVerify = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n\r\n    const [isUserProfileDropdown, setIsUserProfileDropdown] = useState(false);\r\n\r\n    const toggleUserProfileDropdown = () => {\r\n        setIsUserProfileDropdown(!isUserProfileDropdown);\r\n    };\r\n\r\n    const [showModal, setShowModal] = useState(false);\r\n    const handleModalClose = () => {\r\n        setShowModal(false)\r\n        setNewlyAddedTechnologies([]);\r\n        setTechnologiesList([]);\r\n        setExponentTechnicalStack([]);\r\n        setUserPhone('');\r\n        setPhone('');\r\n        setCountryCode('');\r\n        setPhoneWithCountryCode(null);\r\n        setExperience(0);\r\n        setUserMail('');\r\n        setIsOtpSentToPhoneNumber(false);\r\n        setIsContactInfoVerified(false);\r\n        setOtpToPhoneNumber('');\r\n        setIsDisableContactInfo(true);\r\n        setIsOtpSentToMail(false);\r\n        setIsMailInfoVerified(false);\r\n        setOtpToMail('');\r\n        setIsDisableMailInfo(true);\r\n    };\r\n\r\n    // technology code\r\n    const [newlyAddedTechnologies, setNewlyAddedTechnologies] = useState([]);\r\n    const [technologiesList, setTechnologiesList] = useState([]);\r\n    const [exponentTechnicalStack, setExponentTechnicalStack] = useState([]);\r\n    const onSelectTechnology = (selectedList, selectedItem) => {\r\n        setNewlyAddedTechnologies([...selectedList]);\r\n    }\r\n    const onRemoveTechnology = (selectedList, removedItem) => {\r\n        setNewlyAddedTechnologies([...selectedList]);\r\n    }\r\n\r\n    // phone code\r\n    const [userPhone, setUserPhone] = useState('');\r\n    const [phone, setPhone] = useState('');\r\n    const [countryCode, setCountryCode] = useState('');\r\n    const [phoneWithCountryCode, setPhoneWithCountryCode] = useState(null);\r\n    const [iso2, setIso2] = useState('');\r\n    const handleContactInfo = (phone, country) => {\r\n        const countryCodeWithPlus = '+' + country.country.dialCode;\r\n        const phoneWithOutCountryCode = phone.replace(countryCodeWithPlus, '');\r\n        setPhone(phoneWithOutCountryCode);\r\n        console.log(country);\r\n        setPhoneWithCountryCode(country.inputValue);\r\n        setCountryCode(country.country.dialCode);\r\n        setIso2(country.country.iso2);\r\n    }\r\n\r\n    const [isOtpSentToPhoneNumber, setIsOtpSentToPhoneNumber] = useState(false);\r\n    const [isContactInfoVerified, setIsContactInfoVerified] = useState(false);\r\n    const handleSendOtpToPhoneNumber = async () => {\r\n\r\n        if (phone === null || phone === '' || phone === undefined) {\r\n            updateFieldsDisplayErrMsg(\"please enter your contact information\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                countryCode: countryCode,\r\n                phoneNumber: phone,\r\n                phoneNumberWithCountryCode: phoneWithCountryCode,\r\n                regionCode: iso2,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.sendOtpToPhoneNumber(request);\r\n                console.log(responseData);\r\n                updateFieldsDisplaySucMsgToVerify(responseData);\r\n                setIsOtpSentToPhoneNumber(true);\r\n            } catch (error) {\r\n                handleSendOtpToPhoneNumberErrors(error.message);\r\n                setIsOtpSentToPhoneNumber(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSendOtpToPhoneNumberErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Please enter valid contact information\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.INVALID_PHONE_NUMBER === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Entered Phone Number is Invalid\");\r\n        else if (Constants.OTP_NOT_SENT === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Failed to send otp\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            updateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleEditContactInfo = () => {\r\n        setIsOtpSentToPhoneNumber(false);\r\n    }\r\n\r\n    const [otpToPhoneNumber, setOtpToPhoneNumber] = useState('');\r\n    const handleOtpInput = (e) => setOtpToPhoneNumber(e.target.value);\r\n    const handleVerifyOtpToPhoneNumber = async () => {\r\n        if (otpToPhoneNumber === 0 || otpToPhoneNumber === null || otpToPhoneNumber === '' || otpToPhoneNumber === undefined) {\r\n            updateFieldsDisplayErrMsg(\"please enter otp\");\r\n        } else if (otpToPhoneNumber.length !== 6) {\r\n            updateFieldsDisplayErrMsg(\"invalid otp\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                emailOtp: otpToPhoneNumber,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.verifyOtpToPhoneNumber(request);\r\n                console.log(responseData);\r\n                setIsContactInfoVerified(true);\r\n            } catch (error) {\r\n                handleVerifyOtpToPhoneNumberErrors(error.message);\r\n                setIsContactInfoVerified(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleVerifyOtpToPhoneNumberErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Please enter valid otp\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.OTP_NOT_MATCHED === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            updateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    // experience code\r\n    const [experience, setExperience] = useState(0);\r\n    const handleExperienceInput = (e) => setExperience(e.target.value);\r\n    const emailPattern = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n\r\n    // mail code\r\n    const [userMail, setUserMail] = useState('');\r\n    const handleMailInput = (e) => setUserMail(e.target.value);\r\n\r\n    const [isOtpSentToMail, setIsOtpSentToMail] = useState(false);\r\n    const [isMailInfoVerified, setIsMailInfoVerified] = useState(false);\r\n    const handleSendOtpToMail = async () => {\r\n\r\n        if (!emailPattern.test(userMail) || !((userMail).slice(-4)).includes('.co')) {\r\n            updateFieldsDisplayErrMsg(\"please enter a valid mail id\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                userId: userId,\r\n                username: userMail\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.sendOtpToMail(request);\r\n                console.log(responseData);\r\n                updateFieldsDisplaySucMsgToVerify(responseData);\r\n                setIsOtpSentToMail(true);\r\n            } catch (error) {\r\n                handleSendOtpToMailErrors(error.message);\r\n                setIsOtpSentToMail(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSendOtpToMailErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Please enter valid mail information\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.ADDRESS_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Entered Mail Id is Invalid\");\r\n        else if (Constants.MESSAGING_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Mail not sent, try again\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            updateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleEditMailInfo = () => {\r\n        setIsOtpSentToMail(false);\r\n    }\r\n\r\n    const [otpToMail, setOtpToMail] = useState('');\r\n    const handleOtpInputForMail = (e) => setOtpToMail(e.target.value);\r\n    const handleVerifyOtpToMail = async () => {\r\n        if (otpToMail === 0 || otpToMail === null || otpToMail === '' || otpToMail === undefined) {\r\n            updateFieldsDisplayErrMsg(\"please enter otp\");\r\n        } else if (otpToMail.length !== 6) {\r\n            updateFieldsDisplayErrMsg(\"invalid otp\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                emailOtp: otpToMail,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.verifyOtpToMail(request);\r\n                console.log(responseData);\r\n                setIsMailInfoVerified(true);\r\n            } catch (error) {\r\n                handleVerifyOtpToMailErrors(error.message);\r\n                setIsMailInfoVerified(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleVerifyOtpToMailErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Please enter valid otp\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.OTP_NOT_MATCHED === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            updateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleUpdateDetailsClick = async () => {\r\n        setLoadingBar(true);\r\n        try {\r\n            const request = {\r\n                userId: userId\r\n            }\r\n\r\n            if (userType === Constants.EXPONENT) {\r\n                const allTechResponseData = await GlobalService.getAllTechnology();\r\n                console.log(allTechResponseData);\r\n                setTechnologiesList(allTechResponseData);\r\n\r\n                const expoTechResponseData = await GlobalService.getTechStackByExponentId(request);\r\n                console.log(expoTechResponseData);\r\n                const jsonResponseData = expoTechResponseData.map((item, index) => {\r\n                    return { technologyName: item }\r\n                });\r\n                console.log(jsonResponseData);\r\n                setExponentTechnicalStack(jsonResponseData);\r\n                setNewlyAddedTechnologies(jsonResponseData);\r\n            }\r\n\r\n            const userResponseData = await UserService.getUserDataByUserId(request);\r\n            console.log(userResponseData);\r\n            setUserPhone(userResponseData.phoneNumberWithCountryCode);\r\n            if (userType === Constants.EXPONENT) {\r\n                setExperience(userResponseData.userExperience);\r\n            }\r\n            setUserMail(userResponseData.username);\r\n\r\n        } catch (error) {\r\n\r\n        } finally {\r\n            setLoadingBar(false);\r\n            setShowModal(true);\r\n        }\r\n    }\r\n\r\n    const handleUpdateFieldsSubmit = async () => {\r\n        if (userType === Constants.EXPONENT && (newlyAddedTechnologies === null || newlyAddedTechnologies.length === 0 || newlyAddedTechnologies.length < 3)) {\r\n            // console.log('Technologies array is null or empty.');\r\n            updateFieldsDisplayErrMsg('Please choose your minimum 3 technical stacks');\r\n        } else if (!isContactInfoVerified && !isDisableContactInfo) {\r\n            updateFieldsDisplayErrMsg('verify your contact information');\r\n        } else if (phone === null || phone === '' || phone === undefined) {\r\n            console.log('phone is null or empty.');\r\n            updateFieldsDisplayErrMsg('please enter your contact information');\r\n        } else if (userType === Constants.EXPONENT && (experience === null || experience === '' || experience === undefined || experience === 0)) {\r\n            console.log('experience is null or empty or greater than 50.');\r\n            updateFieldsDisplayErrMsg('please enter you experience');\r\n        } else if (userType === Constants.EXPONENT && (experience === null || experience === '' || experience === undefined || experience === 0 || experience > 50)) {\r\n            console.log('experience is null or empty or greater than 50.');\r\n            updateFieldsDisplayErrMsg('experience should be less than or equal to 50');\r\n        } else if (!isMailInfoVerified && !isDisableMailInfo) {\r\n            updateFieldsDisplayErrMsg('verify your mail information');\r\n        } else if (!emailPattern.test(userMail) || !((userMail).slice(-4)).includes('.co')) {\r\n            console.log('experience is null or empty or greater than 20.');\r\n            updateFieldsDisplayErrMsg('please enter a valid mail id');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                userId: userId,\r\n                userType: userType,\r\n                technologyList: newlyAddedTechnologies,\r\n                phoneNumber: phone,\r\n                countryCode: countryCode,\r\n                phoneNumberWithCountryCode: phoneWithCountryCode,\r\n                userExperience: experience,\r\n                username: userMail,\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.updateUserDetails(request);\r\n                console.log(responseData);\r\n                localStorage.setItem(\"breezeUsername\", responseData.username);\r\n                updateFieldsDisplaySucMsg('Details Updated Successfully');\r\n            } catch (error) {\r\n                handleUpdateFieldsErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleUpdateFieldsErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Entity Not Found\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            updateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            updateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const [isDisableContactInfo, setIsDisableContactInfo] = useState(true);\r\n    const handleEditClickOnContactInfo = () => {\r\n        setIsDisableContactInfo(false);\r\n    }\r\n\r\n    const [isDisableMailInfo, setIsDisableMailInfo] = useState(true);\r\n    const handleEditClickOnMailInfo = () => {\r\n        setIsDisableMailInfo(false);\r\n    }\r\n\r\n    // logout code\r\n    const handleLogout = () => {\r\n        localStorage.removeItem('breezeUserId');\r\n        localStorage.removeItem('breezeUserType');\r\n        localStorage.removeItem('breezeUsername');\r\n        localStorage.removeItem('breezeUserFullName');\r\n        localStorage.removeItem('breezeUserFirstTimeLogin');\r\n        localStorage.removeItem('breezeExponentType');\r\n        localStorage.removeItem('breezeJwtToken');\r\n        localStorage.removeItem('breezeSelectedExponentType');\r\n\r\n        window.location.href = '/login';\r\n    };\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loadingBar && <LoadingBar />}\r\n            <CDBNavbar className='app-bg-color justify-content-between px-4'>\r\n                <CDBNavBrand href='/' style={{ display: 'flex', alignItems: 'center' }} >\r\n                    <img src={appLogo} alt=\"Logo\" style={{ width: '30px', height: '30px', borderRadius: '50%', objectFit: 'contain', marginRight: '7px', boxShadow: '0 0 0 2px white', backgroundColor: 'white' }} />\r\n                    <strong className='white-color' style={{ margin: 0 }}>Prepswise</strong>\r\n                </CDBNavBrand>\r\n                <div>\r\n                    <ul className=\"nav\">\r\n                        <li className=\"nav-item dropdown\" >\r\n                            <CDBBtn\r\n                                onClick={toggleUserProfileDropdown}\r\n                                aria-expanded={isUserProfileDropdown ? \"true\" : \"false\"}\r\n                                className='child-bg-color'\r\n                                style={{ fontSize: '16px', fontWeight: 'bold' }}\r\n                            >\r\n                                {userFullName && userFullName.charAt(0).toUpperCase()}\r\n                            </CDBBtn>\r\n                            <ul\r\n                                className={`dropdown-menu ${isUserProfileDropdown ? 'show dropdown-menu-start' : ''}`}\r\n                                style={{\r\n                                    marginTop: isUserProfileDropdown ? '20px' : '0',\r\n                                    marginRight: isUserProfileDropdown ? '5px' : '0',\r\n                                    left: isUserProfileDropdown ? '-200px' : 'auto',\r\n                                    width: '240px',\r\n                                    maxWidth: '240px',\r\n                                    overflow: 'auto',\r\n                                    fontSize: '12px',\r\n                                }}\r\n                            >\r\n                                <li><label className=\"dropdown-item\" ><i className='fas fa-user'></i> {userFullName}</label></li>\r\n                                <li><label className=\"dropdown-item\" ><i className='fas fa-envelope'></i> {userMailId}</label></li>\r\n                                {userType !== Constants.ADMIN && (\r\n                                    <li onClick={handleUpdateDetailsClick} >\r\n                                        <label className=\"dropdown-item\" style={{ cursor: 'pointer' }} ><i class=\"fas fa-edit\"></i> Update Details</label>\r\n                                    </li>\r\n                                )}\r\n                                <li onClick={handleLogout} >\r\n                                    <label className=\"dropdown-item\" style={{ cursor: 'pointer' }}><i class=\"fas fa-sign-out-alt\"></i> Logout</label>\r\n                                </li>\r\n                            </ul>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </CDBNavbar>\r\n            {showModal && (\r\n                <Modal className='update-details-modal' size='lg' show={showModal} onHide={handleModalClose} centered backdrop=\"static\">\r\n                    <Container className='px-5'>\r\n                        <Modal.Header closeButton >\r\n                            <Modal.Title style={{ fontSize: '20px' }}>\r\n                                Update Details\r\n                            </Modal.Title>\r\n                        </Modal.Header>\r\n                    </Container>\r\n                    <Modal.Body>\r\n                        <Container className='px-5' style={{ fontSize: '15px' }}>\r\n                            {userType === Constants.EXPONENT && (\r\n                                <div>\r\n                                    <div>\r\n                                        <label>Add Technical Stack</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className='technology-multiselect'>\r\n                                                    <Multiselect\r\n                                                        id='technology'\r\n                                                        options={technologiesList}\r\n                                                        selectedValues={exponentTechnicalStack}\r\n                                                        onSelect={onSelectTechnology}\r\n                                                        onRemove={onRemoveTechnology}\r\n                                                        displayValue=\"technologyName\"\r\n                                                        placeholder=\"Add Technical Stack\"\r\n                                                        avoidHighlightFirstOption={true}\r\n                                                        style={{\r\n                                                            chips: {\r\n                                                                background: childColor,\r\n                                                            },\r\n                                                        }}\r\n                                                    />\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                    <div className='mt-2'>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className='experience'>\r\n                                                    <label>Experience</label>\r\n                                                    <input\r\n                                                        type='number'\r\n                                                        className='expInput'\r\n                                                        placeholder='Your Experience'\r\n                                                        value={experience}\r\n                                                        onChange={handleExperienceInput}\r\n                                                        onKeyDown={(e) => {\r\n                                                            const allowedKeys = ['.', 'Backspace'];\r\n                                                            for (let i = 0; i <= 9; i++) {\r\n                                                                allowedKeys.push(i.toString());\r\n                                                            }\r\n                                                            if (!allowedKeys.includes(e.key)) {\r\n                                                                e.preventDefault();\r\n                                                            }\r\n                                                            if (e.key === '.' && e.target.value.includes('.')) {\r\n                                                                e.preventDefault();\r\n                                                            }\r\n                                                            if (e.key === '-' && e.target.selectionStart !== 0) {\r\n                                                                e.preventDefault();\r\n                                                            }\r\n                                                        }}\r\n                                                        step=\"any\" // Allows for decimals\r\n                                                        min=\"1\"\r\n                                                        max=\"50\"\r\n                                                    />\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </div>\r\n                            )}\r\n                            <div className='mt-2'>\r\n                                <label>Mail Info</label>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className='mail-info' style={{ display: 'flex' }}>\r\n                                            <div style={{ width: '50%'}}>\r\n                                                <input\r\n                                                    type='email'\r\n                                                    className='form-control'\r\n                                                    value={userMail}\r\n                                                    onChange={handleMailInput}\r\n                                                    inputStyle={{ width: '100%' }}\r\n                                                    disabled={(isDisableMailInfo || isOtpSentToMail)}\r\n                                                />\r\n                                            </div>\r\n                                            {isDisableMailInfo && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleEditClickOnMailInfo}\r\n                                                >\r\n                                                    Edit\r\n                                                </Button>\r\n                                            )}\r\n                                            {(!isMailInfoVerified && !isDisableMailInfo) && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleSendOtpToMail}\r\n                                                    disabled={isOtpSentToMail}\r\n                                                >\r\n                                                    Send Otp\r\n                                                </Button>\r\n                                            )}\r\n                                            {isMailInfoVerified && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                >\r\n                                                    Verified\r\n                                                </Button>\r\n                                            )}\r\n                                            {(isOtpSentToMail && !isMailInfoVerified) && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleSendOtpToMail}\r\n                                                >\r\n                                                    ReSend\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            {!isMailInfoVerified && (\r\n                                isOtpSentToMail && (\r\n                                    <div className='mt-2'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>Enter Otp</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className='mail-info' style={{ display: 'flex' }}>\r\n                                                    <input\r\n                                                        type='number'\r\n                                                        placeholder='Enter Otp'\r\n                                                        style={{ borderRadius: '4px' }}\r\n                                                        value={otpToMail}\r\n                                                        onChange={handleOtpInputForMail}\r\n                                                    />\r\n                                                    <Button\r\n                                                        className='button-otp'\r\n                                                        onClick={handleVerifyOtpToMail}\r\n                                                    >\r\n                                                        Verify\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className='button-otp'\r\n                                                        onClick={handleEditMailInfo}\r\n                                                    >\r\n                                                        Edit Mail Info\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                )\r\n                            )}\r\n                            <div className='mt-2'>\r\n                                <label>Contact Info</label>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className='contact-info' style={{ display: 'flex' }}>\r\n                                            <PhoneInput\r\n                                                forceDialCode={true}\r\n                                                value={userPhone}\r\n                                                onChange={handleContactInfo}\r\n                                                inputStyle={{ width: '100%' }}\r\n                                                hideDropdown={true}\r\n                                                disabled={(isDisableContactInfo || isOtpSentToPhoneNumber)}\r\n                                            />\r\n                                            {isDisableContactInfo && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleEditClickOnContactInfo}\r\n                                                >\r\n                                                    Edit\r\n                                                </Button>\r\n                                            )}\r\n                                            {(!isContactInfoVerified && !isDisableContactInfo) && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleSendOtpToPhoneNumber}\r\n                                                    disabled={isOtpSentToPhoneNumber}\r\n                                                >\r\n                                                    Send Otp\r\n                                                </Button>\r\n                                            )}\r\n                                            {isContactInfoVerified && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                >\r\n                                                    Verified\r\n                                                </Button>\r\n                                            )}\r\n                                            {(isOtpSentToPhoneNumber && !isContactInfoVerified) && (\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleSendOtpToPhoneNumber}\r\n                                                >\r\n                                                    ReSend\r\n                                                </Button>\r\n                                            )}\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            {!isContactInfoVerified && (\r\n                                isOtpSentToPhoneNumber && (\r\n                                    <div className='mt-2'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>Enter Otp</label>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <div className='contact-info' style={{ display: 'flex' }}>\r\n                                                    <input\r\n                                                        type='number'\r\n                                                        placeholder='Enter Otp'\r\n                                                        style={{ borderRadius: '4px' }}\r\n                                                        value={otpToPhoneNumber}\r\n                                                        onChange={handleOtpInput}\r\n                                                    />\r\n                                                    <Button\r\n                                                        className='button-otp'\r\n                                                        onClick={handleVerifyOtpToPhoneNumber}\r\n                                                    >\r\n                                                        Verify\r\n                                                    </Button>\r\n                                                    <Button\r\n                                                        className='button-otp'\r\n                                                        onClick={handleEditContactInfo}\r\n                                                    >\r\n                                                        Edit Contact Info\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                )\r\n                            )}\r\n                            <div className='mt-2'>\r\n                                <Row>\r\n                                    <Col>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                            <div>\r\n                                {errMsgDiv &&\r\n                                    <div style={customCssForMsg}>\r\n                                        <label>{errMsg}</label>\r\n                                    </div>}\r\n                            </div>\r\n                            <Button\r\n                                className='dashboard-button mt-3'\r\n                                onClick={handleUpdateFieldsSubmit}\r\n                            >\r\n                                Update\r\n                            </Button>\r\n                        </Container>\r\n                    </Modal.Body>\r\n                </Modal>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default NavBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
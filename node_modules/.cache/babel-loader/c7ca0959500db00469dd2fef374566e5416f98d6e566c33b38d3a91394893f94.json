{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze(15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\mandatory_update_fields_component\\\\MandatoryUpdateFields.js\",\n  _s = $RefreshSig$();\nimport './MandatoryUpdateFields.css';\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\nimport { useEffect, useState } from 'react';\nimport Multiselect from \"multiselect-react-dropdown\";\nimport { PhoneInput } from 'react-international-phone';\nimport 'react-international-phone/style.css';\nimport Select from 'react-select';\nimport { City, Country, State } from 'country-state-city';\nimport GlobalService from '../../../../Services/global_service/GlobalService';\nimport Constants from '../../../Constants';\nimport UserService from '../../../../Services/user_service/UserService';\nimport LoadingBar from '../../../loading_bar_component/LoadingBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MandatoryUpdateFields() {\n  _s();\n  const userId = localStorage.getItem(\"breezeUserId\");\n  const userType = localStorage.getItem(\"breezeUserType\");\n  const [loadingBar, setLoadingBar] = useState(false);\n  const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\n  const [showModal, setShowModal] = useState(true);\n  const handleModalClose = () => setShowModal(false);\n  const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\n  const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\n\n  //Fields for to display err msg div and label\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  //JS for to display err msg\n  const mandatoryUpdateFieldsDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n\n  //JS for to display success msg\n  const mandatoryUpdateFieldsDisplaySucMsg = errorMessage => {\n    setMessageColor('green');\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    setTimeout(() => {\n      setErrMsg(\"\");\n      setErrMsgDiv(false);\n      setMessageColor('#be3144');\n    }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\n  };\n\n  // experience code\n  const [experience, setExperience] = useState(0);\n  const handleExperienceInput = e => setExperience(e.target.value);\n\n  // phone code\n  const [phone, setPhone] = useState('');\n  const [countryCode, setCountryCode] = useState('');\n  const [phoneWithCountryCode, setPhoneWithCountryCode] = useState(null);\n  const [iso2, setIso2] = useState('');\n  const handleContactInfo = (phone, country) => {\n    const countryCodeWithPlus = '+' + country.country.dialCode;\n    const phoneWithOutCountryCode = phone.replace(countryCodeWithPlus, '');\n    setPhone(phoneWithOutCountryCode);\n    // console.log(country);\n    // console.log(phone.replace(countryCodeWithPlus, ''));\n    // console.log(country.inputValue);\n    // console.log(country.country.dialCode);\n    // console.log(country.country.iso2); // region code\n    setPhoneWithCountryCode(country.inputValue);\n    setCountryCode(country.country.dialCode);\n    setIso2(country.country.iso2);\n    updateCountryWhenPhoneNumberChanged(country.country.iso2);\n  };\n  const updateCountryWhenPhoneNumberChanged = selectedIso2Code => {\n    if (selectedIso2Code) {\n      const countries = Country.getAllCountries();\n      const foundCountry = countries.find(country => country.isoCode === selectedIso2Code.toUpperCase());\n      if (foundCountry) {\n        setSelectedCountry(foundCountry);\n      }\n    }\n  };\n\n  // gender code\n  const [gender, setGender] = useState('');\n  const genderList = [{\n    name: 'Male'\n  }, {\n    name: 'Female'\n  }, {\n    name: 'Others'\n  }];\n  const onSelectGender = item => {\n    setGender(item.name);\n  };\n\n  // technology code\n  const [technologies, setTechnologies] = useState([]);\n  const [technologiesList, setTechnologiesList] = useState([]);\n  const onSelectTechnology = (selectedList, selectedItem) => {\n    setTechnologies([...selectedList]);\n  };\n  const onRemoveTechnology = (selectedList, removedItem) => {\n    setTechnologies([...selectedList]);\n  };\n  useEffect(() => {\n    const getAllTechnology = async () => {\n      setLoadingBar(true);\n      try {\n        const responseData = await GlobalService.getAllTechnology();\n        console.log(responseData);\n        setTechnologiesList(responseData);\n      } catch (error) {\n        console.log(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    };\n    getAllTechnology();\n  }, []);\n\n  // country state city code\n  const [selectedCountry, setSelectedCountry] = useState(null);\n  const [selectedState, setSelectedState] = useState(null);\n  const [selectedCity, setSelectedCity] = useState(null);\n  const handleMandatoryUpdateFieldsSubmit = async () => {\n    console.log(userType);\n    if (userType === Constants.EXPONENT && (technologies === null || technologies.length === 0 || technologies.length < 3)) {\n      // console.log('Technologies array is null or empty.');\n      mandatoryUpdateFieldsDisplayErrMsg('please choose your minimum 3 technical stacks');\n    } else if (userType === Constants.EXPONENT && (experience === null || experience === '' || experience === undefined || experience === 0)) {\n      console.log('experience is null or empty or greater than 50.');\n      mandatoryUpdateFieldsDisplayErrMsg('please enter you experience');\n    } else if (userType === Constants.EXPONENT && (experience === null || experience === 0 || experience > 50)) {\n      console.log('experience is null or empty or greater than 50.');\n      mandatoryUpdateFieldsDisplayErrMsg('experience should be less than or equal to 50');\n    } else if (!isContactInfoVerified) {\n      mandatoryUpdateFieldsDisplayErrMsg('verify your contact information');\n    } else if (phone === null || phone === '' || phone === undefined) {\n      console.log('phone is null or empty.');\n      mandatoryUpdateFieldsDisplayErrMsg('please enter your contact information');\n    } else if (gender === null || gender === '') {\n      console.log('Gender is null or empty.');\n      mandatoryUpdateFieldsDisplayErrMsg('please select your gender');\n    } else if (selectedCountry === null || selectedState === null || selectedCity === null) {\n      console.log('location is null or empty.');\n      mandatoryUpdateFieldsDisplayErrMsg('please select your country, state, city');\n    } else {\n      setLoadingBar(true);\n      const request = {\n        userId: userId,\n        userType: userType,\n        technologyList: technologies,\n        phoneNumber: phone,\n        countryCode: countryCode,\n        phoneNumberWithCountryCode: phoneWithCountryCode,\n        userExperience: experience,\n        gender: gender,\n        country: selectedCountry.name,\n        state: selectedState.name,\n        city: selectedCity.name\n      };\n      console.log(request);\n      try {\n        const responseData = await UserService.mandatoryUpdateFields(request);\n        console.log(responseData);\n        localStorage.setItem('breezeUserFirstTimeLogin', responseData.firstTimeLogin);\n        mandatoryUpdateFieldsDisplaySucMsg('Mandatory Fields Updated Successfully');\n        setTimeout(() => {\n          handleModalClose();\n        }, 2000);\n      } catch (error) {\n        handleMandatoryUpdateFieldsErrors(error.message);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleMandatoryUpdateFieldsErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid inputs fields\");else if (Constants.ENTITY_NOT_FOUND === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"You are not registered\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\n  };\n  const [isOtpSent, setIsOtpSent] = useState(false);\n  const handleSendOtp = async () => {\n    if (phone === null || phone === '' || phone === undefined) {\n      mandatoryUpdateFieldsDisplayErrMsg(\"please enter your contact information\");\n    } else {\n      setLoadingBar(true);\n      const request = {\n        countryCode: countryCode,\n        phoneNumber: phone,\n        phoneNumberWithCountryCode: phoneWithCountryCode,\n        regionCode: iso2,\n        userId: userId\n      };\n      console.log(request);\n      try {\n        const responseData = await UserService.sendOtpToPhoneNumber(request);\n        console.log(responseData);\n        mandatoryUpdateFieldsDisplaySucMsg(responseData);\n        setIsOtpSent(true);\n      } catch (error) {\n        handleSendOtpToPhoneNumberErrors(error.message);\n        setIsOtpSent(false);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleSendOtpToPhoneNumberErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid contact information\");else if (Constants.ENTITY_NOT_FOUND === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");else if (Constants.INVALID_PHONE_NUMBER === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Entered Phone Number is Invalid\");else if (Constants.OTP_NOT_SENT === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Failed to send otp\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\n  };\n  const handleEditContactInfo = () => {\n    setIsOtpSent(false);\n  };\n  const [otp, setOtp] = useState('');\n  const handleOtpInput = e => setOtp(e.target.value);\n  const [isContactInfoVerified, setIsContactInfoVerified] = useState(false);\n  const handleVerifyOtp = async () => {\n    if (otp === 0 || otp === null || otp === '' || otp === undefined) {\n      mandatoryUpdateFieldsDisplayErrMsg(\"please enter otp\");\n    } else if (otp.length !== 6) {\n      mandatoryUpdateFieldsDisplayErrMsg(\"invalid otp\");\n    } else {\n      setLoadingBar(true);\n      const request = {\n        emailOtp: otp,\n        userId: userId\n      };\n      console.log(request);\n      try {\n        const responseData = await UserService.verifyOtpToPhoneNumber(request);\n        console.log(responseData);\n        setIsContactInfoVerified(true);\n      } catch (error) {\n        handleVerifyOtpErrors(error.message);\n        setIsContactInfoVerified(false);\n      } finally {\n        setLoadingBar(false);\n      }\n    }\n  };\n  const handleVerifyOtpErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid otp\");else if (Constants.ENTITY_NOT_FOUND === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");else if (Constants.OTP_NOT_MATCHED === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");else mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\n  };\n\n  // custom css for mandatory input fields for Select component from react-select\n  const customCssForMandUpdFlds = {\n    option: (provided, state) => ({\n      ...provided,\n      backgroundColor: state.isFocused ? childColor : '',\n      color: state.isFocused ? whiteColor : '',\n      ':hover': {\n        backgroundColor: childColor,\n        color: whiteColor\n      }\n    })\n  };\n  const customCssForMsg = {\n    fontSize: 'medium',\n    fontWeight: '700',\n    color: messageColor\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      className: \"mandatory-update-fields-modal\",\n      size: \"lg\",\n      show: showModal,\n      onHide: handleModalClose,\n      centered: true,\n      backdrop: \"static\",\n      children: [/*#__PURE__*/_jsxDEV(Container, {\n        className: \"px-5\",\n        children: /*#__PURE__*/_jsxDEV(Modal.Header, {\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            style: {\n              fontSize: '20px'\n            },\n            children: \"Mandatory Fields\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          className: \"px-5\",\n          style: {\n            fontSize: '15px'\n          },\n          children: [userType === Constants.EXPONENT && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 40\n              }, this), \"Technologies\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"technology-multiselect\",\n                  children: /*#__PURE__*/_jsxDEV(Multiselect, {\n                    id: \"technology\",\n                    options: technologiesList,\n                    onSelect: onSelectTechnology,\n                    onRemove: onRemoveTechnology,\n                    displayValue: \"technologyName\",\n                    placeholder: \"Your Technical Stack\",\n                    avoidHighlightFirstOption: true,\n                    style: {\n                      chips: {\n                        background: childColor\n                      }\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 36\n              }, this), \"Contact Info\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-info\",\n                  style: {\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(PhoneInput, {\n                    forceDialCode: true,\n                    onChange: handleContactInfo,\n                    inputStyle: {\n                      width: '100%'\n                    },\n                    disabled: isOtpSent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 41\n                  }, this), !isContactInfoVerified && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"button-otp\",\n                    onClick: handleSendOtp,\n                    disabled: isOtpSent,\n                    children: \"Send Otp\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 353,\n                    columnNumber: 45\n                  }, this), isContactInfoVerified && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"button-otp\",\n                    children: \"Verified\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 362,\n                    columnNumber: 45\n                  }, this), isOtpSent && !isContactInfoVerified && /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"button-otp\",\n                    onClick: handleSendOtp,\n                    children: \"ReSend\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 369,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this), !isContactInfoVerified && isOtpSent && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'red'\n                },\n                children: \"*\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 44\n              }, this), \"Enter Otp\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"contact-info\",\n                  style: {\n                    display: 'flex'\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    placeholder: \"Enter Otp\",\n                    style: {\n                      borderRadius: '4px'\n                    },\n                    value: otp,\n                    onChange: handleOtpInput\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"button-otp\",\n                    onClick: handleVerifyOtp,\n                    children: \"Verify\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 394,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(Button, {\n                    className: \"button-otp\",\n                    onClick: handleEditContactInfo,\n                    children: \"Edit Contact Info\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [userType === Constants.EXPONENT && /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"experience\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 52\n                    }, this), \"Experience\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 417,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"number\",\n                    className: \"expInput\",\n                    placeholder: \"Your Experience\",\n                    value: experience,\n                    onChange: handleExperienceInput,\n                    onKeyDown: e => {\n                      const allowedKeys = ['.', 'Backspace'];\n                      for (let i = 0; i <= 9; i++) {\n                        allowedKeys.push(i.toString());\n                      }\n                      if (!allowedKeys.includes(e.key)) {\n                        e.preventDefault();\n                      }\n                      if (e.key === '.' && e.target.value.includes('.')) {\n                        e.preventDefault();\n                      }\n                      if (e.key === '-' && e.target.selectionStart !== 0) {\n                        e.preventDefault();\n                      }\n                    },\n                    step: \"any\" // Allows for decimals\n                    ,\n                    min: \"1\",\n                    max: \"50\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 416,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"gender-singleselect\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 448,\n                      columnNumber: 48\n                    }, this), \"Gender\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 448,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    id: \"gender\",\n                    options: genderList,\n                    getOptionLabel: options => {\n                      return options[\"name\"];\n                    },\n                    getOptionValue: options => {\n                      return options[\"name\"];\n                    },\n                    onChange: onSelectGender,\n                    placeholder: \"Select Gender\",\n                    styles: customCssForMandUpdFlds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 449,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 446,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 413,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"country\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 470,\n                      columnNumber: 48\n                    }, this), \"Country\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 470,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    options: Country.getAllCountries(),\n                    getOptionLabel: options => {\n                      return options[\"name\"];\n                    },\n                    getOptionValue: options => {\n                      return options[\"name\"];\n                    },\n                    value: selectedCountry,\n                    onChange: item => {\n                      setSelectedCountry(item);\n                    },\n                    placeholder: \"Select Country\",\n                    styles: customCssForMandUpdFlds,\n                    isDisabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 471,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 469,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 468,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"state\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 491,\n                      columnNumber: 48\n                    }, this), \"State\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    options: State === null || State === void 0 ? void 0 : State.getStatesOfCountry(selectedCountry === null || selectedCountry === void 0 ? void 0 : selectedCountry.isoCode),\n                    getOptionLabel: options => {\n                      return options[\"name\"];\n                    },\n                    getOptionValue: options => {\n                      return options[\"name\"];\n                    },\n                    value: selectedState,\n                    onChange: item => {\n                      setSelectedState(item);\n                    },\n                    placeholder: \"Select State\",\n                    styles: customCssForMandUpdFlds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 489,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"city\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: 'red'\n                      },\n                      children: \"*\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 48\n                    }, this), \"City\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 511,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Select, {\n                    options: City.getCitiesOfState(selectedState === null || selectedState === void 0 ? void 0 : selectedState.countryCode, selectedState === null || selectedState === void 0 ? void 0 : selectedState.isoCode),\n                    getOptionLabel: options => {\n                      return options[\"name\"];\n                    },\n                    getOptionValue: options => {\n                      return options[\"name\"];\n                    },\n                    value: selectedCity,\n                    onChange: item => {\n                      setSelectedCity(item);\n                    },\n                    placeholder: \"Select City\",\n                    styles: customCssForMandUpdFlds\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 512,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 510,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n              style: customCssForMsg,\n              children: /*#__PURE__*/_jsxDEV(\"label\", {\n                children: errMsg\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 564,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"dashboard-button mt-3\",\n            onClick: handleMandatoryUpdateFieldsSubmit,\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n}\n_s(MandatoryUpdateFields, \"pxsdnL0mT9bqxspy8BPQrN3Ie6I=\");\n_c = MandatoryUpdateFields;\nexport default MandatoryUpdateFields;\n\n/**<Multiselect\r\n                                            id='gender'\r\n                                            options={genderList}\r\n                                            onSelect={onSelectGender}\r\n                                            displayValue=\"name\"\r\n                                            placeholder=\"Select Your Gender\"\r\n                                            singleSelect={true}\r\n                                            avoidHighlightFirstOption={true}\r\n                                            style={{\r\n                                                chips: {\r\n                                                    color: whiteColor,\r\n                                                    background: childColor,\r\n                                                },\r\n                                            }}\r\n                                        /> */\n\n/**\r\n *  <div>\r\n            <Multiselect\r\n                options={technologies} \r\n                onSelect={onSelect} \r\n                onRemove={onRemove} \r\n                displayValue=\"name\"\r\n                placeholder=\"Select Technical Stack\"\r\n            />\r\n        </div>\r\n */\n\n/**\r\n * {\r\n                                multiselectContainer: { // To change css for multiselect (Width,height,etc..)\r\n                                  \r\n                                },\r\n                                searchBox: { // To change search box element look\r\n                                //   border: 'none',\r\n                                //   fontSize: '10px',\r\n                                //   minHeight: '50px',\r\n                                },\r\n                                inputField: { // To change input field position or margin\r\n                                    // margin: '5px',\r\n                                },\r\n                                chips: { // To change css chips(Selected options)\r\n                                  background: '#8CB9BD',\r\n                                },\r\n                                optionContainer: { // To change css for option container \r\n                                //   border: '2px solid',\r\n                                },\r\n                                option: { // To change css for dropdown options\r\n                                //   color: 'black',\r\n                                },\r\n                                groupHeading: { // To chanage group heading style\r\n                                  \r\n                                }\r\n                              }\r\n */\n\n/**\r\n * <div>\r\n            <Modal show={showModal} onHide={handleClose} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    ...\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\">\r\n                        Save changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n */\nvar _c;\n$RefreshReg$(_c, \"MandatoryUpdateFields\");","map":{"version":3,"names":["Button","Col","Container","Modal","Row","useEffect","useState","Multiselect","PhoneInput","Select","City","Country","State","GlobalService","Constants","UserService","LoadingBar","jsxDEV","_jsxDEV","MandatoryUpdateFields","_s","userId","localStorage","getItem","userType","loadingBar","setLoadingBar","messageColor","setMessageColor","MESSAGE_COLOR","showModal","setShowModal","handleModalClose","childColor","getComputedStyle","document","documentElement","getPropertyValue","whiteColor","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","mandatoryUpdateFieldsDisplayErrMsg","errorMessage","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","mandatoryUpdateFieldsDisplaySucMsg","SET_TIME_OUT_FOR_SUCCESS_MSG","experience","setExperience","handleExperienceInput","e","target","value","phone","setPhone","countryCode","setCountryCode","phoneWithCountryCode","setPhoneWithCountryCode","iso2","setIso2","handleContactInfo","country","countryCodeWithPlus","dialCode","phoneWithOutCountryCode","replace","inputValue","updateCountryWhenPhoneNumberChanged","selectedIso2Code","countries","getAllCountries","foundCountry","find","isoCode","toUpperCase","setSelectedCountry","gender","setGender","genderList","name","onSelectGender","item","technologies","setTechnologies","technologiesList","setTechnologiesList","onSelectTechnology","selectedList","selectedItem","onRemoveTechnology","removedItem","getAllTechnology","responseData","console","log","error","message","selectedCountry","selectedState","setSelectedState","selectedCity","setSelectedCity","handleMandatoryUpdateFieldsSubmit","EXPONENT","length","undefined","isContactInfoVerified","request","technologyList","phoneNumber","phoneNumberWithCountryCode","userExperience","state","city","mandatoryUpdateFields","setItem","firstTimeLogin","handleMandatoryUpdateFieldsErrors","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","BREEZE_DATABASE_EXCEPTION","isOtpSent","setIsOtpSent","handleSendOtp","regionCode","sendOtpToPhoneNumber","handleSendOtpToPhoneNumberErrors","INVALID_PHONE_NUMBER","OTP_NOT_SENT","handleEditContactInfo","otp","setOtp","handleOtpInput","setIsContactInfoVerified","handleVerifyOtp","emailOtp","verifyOtpToPhoneNumber","handleVerifyOtpErrors","OTP_NOT_MATCHED","customCssForMandUpdFlds","option","provided","backgroundColor","isFocused","color","customCssForMsg","fontSize","fontWeight","children","fileName","_jsxFileName","lineNumber","columnNumber","className","size","show","onHide","centered","backdrop","Header","Title","style","Body","id","options","onSelect","onRemove","displayValue","placeholder","avoidHighlightFirstOption","chips","background","display","forceDialCode","onChange","inputStyle","width","disabled","onClick","type","borderRadius","onKeyDown","allowedKeys","i","push","toString","includes","key","preventDefault","selectionStart","step","min","max","getOptionLabel","getOptionValue","styles","isDisabled","getStatesOfCountry","getCitiesOfState","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/mandatory_update_fields_component/MandatoryUpdateFields.js"],"sourcesContent":["import './MandatoryUpdateFields.css';\r\nimport { Button, Col, Container, Modal, Row } from 'react-bootstrap';\r\nimport { useEffect, useState } from 'react';\r\nimport Multiselect from \"multiselect-react-dropdown\";\r\nimport { PhoneInput } from 'react-international-phone';\r\nimport 'react-international-phone/style.css';\r\nimport Select from 'react-select';\r\nimport { City, Country, State } from 'country-state-city';\r\nimport GlobalService from '../../../../Services/global_service/GlobalService';\r\nimport Constants from '../../../Constants';\r\nimport UserService from '../../../../Services/user_service/UserService';\r\nimport LoadingBar from '../../../loading_bar_component/LoadingBar';\r\n\r\nfunction MandatoryUpdateFields() {\r\n\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n    const userType = localStorage.getItem(\"breezeUserType\");\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n\r\n    const [showModal, setShowModal] = useState(true);\r\n    const handleModalClose = () => setShowModal(false);\r\n\r\n    const childColor = getComputedStyle(document.documentElement).getPropertyValue('--child-color');\r\n    const whiteColor = getComputedStyle(document.documentElement).getPropertyValue('--white-color');\r\n\r\n    //Fields for to display err msg div and label\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const mandatoryUpdateFieldsDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    //JS for to display success msg\r\n    const mandatoryUpdateFieldsDisplaySucMsg = (errorMessage) => {\r\n        setMessageColor('green');\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        setTimeout(() => {\r\n            setErrMsg(\"\");\r\n            setErrMsgDiv(false);\r\n            setMessageColor('#be3144');\r\n        }, Constants.SET_TIME_OUT_FOR_SUCCESS_MSG);\r\n    }\r\n\r\n    // experience code\r\n    const [experience, setExperience] = useState(0);\r\n    const handleExperienceInput = (e) => setExperience(e.target.value);\r\n\r\n    // phone code\r\n    const [phone, setPhone] = useState('');\r\n    const [countryCode, setCountryCode] = useState('');\r\n    const [phoneWithCountryCode, setPhoneWithCountryCode] = useState(null);\r\n    const [iso2, setIso2] = useState('');\r\n    const handleContactInfo = (phone, country) => {\r\n        const countryCodeWithPlus = '+' + country.country.dialCode;\r\n        const phoneWithOutCountryCode = phone.replace(countryCodeWithPlus, '');\r\n        setPhone(phoneWithOutCountryCode);\r\n        // console.log(country);\r\n        // console.log(phone.replace(countryCodeWithPlus, ''));\r\n        // console.log(country.inputValue);\r\n        // console.log(country.country.dialCode);\r\n        // console.log(country.country.iso2); // region code\r\n        setPhoneWithCountryCode(country.inputValue);\r\n        setCountryCode(country.country.dialCode);\r\n        setIso2(country.country.iso2);\r\n        updateCountryWhenPhoneNumberChanged(country.country.iso2);\r\n    }\r\n\r\n    const updateCountryWhenPhoneNumberChanged = (selectedIso2Code) => {\r\n        if (selectedIso2Code) {\r\n            const countries = Country.getAllCountries();\r\n            const foundCountry = countries.find(country => country.isoCode === selectedIso2Code.toUpperCase());\r\n            if (foundCountry) {\r\n                setSelectedCountry(foundCountry);\r\n            }\r\n        }\r\n    }\r\n\r\n    // gender code\r\n    const [gender, setGender] = useState('');\r\n    const genderList = [\r\n        { name: 'Male' },\r\n        { name: 'Female' },\r\n        { name: 'Others' },\r\n    ];\r\n    const onSelectGender = (item) => {\r\n        setGender(item.name);\r\n    }\r\n\r\n    // technology code\r\n    const [technologies, setTechnologies] = useState([]);\r\n    const [technologiesList, setTechnologiesList] = useState([]);\r\n    const onSelectTechnology = (selectedList, selectedItem) => {\r\n        setTechnologies([...selectedList]);\r\n    }\r\n    const onRemoveTechnology = (selectedList, removedItem) => {\r\n        setTechnologies([...selectedList]);\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getAllTechnology = async () => {\r\n            setLoadingBar(true);\r\n            try {\r\n                const responseData = await GlobalService.getAllTechnology();\r\n                console.log(responseData);\r\n                setTechnologiesList(responseData);\r\n            } catch (error) {\r\n                console.log(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        };\r\n        getAllTechnology();\r\n    }, []);\r\n\r\n    // country state city code\r\n    const [selectedCountry, setSelectedCountry] = useState(null);\r\n    const [selectedState, setSelectedState] = useState(null);\r\n    const [selectedCity, setSelectedCity] = useState(null);\r\n\r\n    const handleMandatoryUpdateFieldsSubmit = async () => {\r\n        console.log(userType);\r\n        if (userType === Constants.EXPONENT && (technologies === null || technologies.length === 0 || technologies.length < 3)) {\r\n            // console.log('Technologies array is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please choose your minimum 3 technical stacks');\r\n        } else if (userType === Constants.EXPONENT && (experience === null || experience === '' || experience === undefined || experience === 0)) {\r\n            console.log('experience is null or empty or greater than 50.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please enter you experience');\r\n        } else if (userType === Constants.EXPONENT && (experience === null || experience === 0 || experience > 50)) {\r\n            console.log('experience is null or empty or greater than 50.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('experience should be less than or equal to 50');\r\n        } else if (!isContactInfoVerified) {\r\n            mandatoryUpdateFieldsDisplayErrMsg('verify your contact information');\r\n        }  else if (phone === null || phone === '' || phone === undefined) {\r\n            console.log('phone is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please enter your contact information');\r\n        } else if (gender === null || gender === '') {\r\n            console.log('Gender is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please select your gender');\r\n        } else if (selectedCountry === null || selectedState === null || selectedCity === null) {\r\n            console.log('location is null or empty.');\r\n            mandatoryUpdateFieldsDisplayErrMsg('please select your country, state, city');\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                userId: userId,\r\n                userType: userType,\r\n                technologyList: technologies,\r\n                phoneNumber: phone,\r\n                countryCode: countryCode,\r\n                phoneNumberWithCountryCode: phoneWithCountryCode,\r\n                userExperience: experience,\r\n                gender: gender,\r\n                country: selectedCountry.name,\r\n                state: selectedState.name,\r\n                city: selectedCity.name,\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.mandatoryUpdateFields(request);\r\n                console.log(responseData);\r\n                localStorage.setItem('breezeUserFirstTimeLogin', responseData.firstTimeLogin);\r\n                mandatoryUpdateFieldsDisplaySucMsg('Mandatory Fields Updated Successfully');\r\n                setTimeout(() => {\r\n                    handleModalClose();\r\n                }, 2000);\r\n            } catch (error) {\r\n                handleMandatoryUpdateFieldsErrors(error.message);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleMandatoryUpdateFieldsErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid inputs fields\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"You are not registered\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const [isOtpSent, setIsOtpSent] = useState(false);\r\n    const handleSendOtp = async () => {\r\n\r\n        if (phone === null || phone === '' || phone === undefined) {\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"please enter your contact information\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                countryCode: countryCode,\r\n                phoneNumber: phone,\r\n                phoneNumberWithCountryCode: phoneWithCountryCode,\r\n                regionCode: iso2,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.sendOtpToPhoneNumber(request);\r\n                console.log(responseData);\r\n                mandatoryUpdateFieldsDisplaySucMsg(responseData);\r\n                setIsOtpSent(true);\r\n            } catch (error) {\r\n                handleSendOtpToPhoneNumberErrors(error.message);\r\n                setIsOtpSent(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            } \r\n        }\r\n    }\r\n\r\n    const handleSendOtpToPhoneNumberErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid contact information\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.INVALID_PHONE_NUMBER === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Entered Phone Number is Invalid\");\r\n        else if (Constants.OTP_NOT_SENT === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Failed to send otp\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    const handleEditContactInfo = () => {\r\n        setIsOtpSent(false);\r\n    }\r\n\r\n    const [otp, setOtp] = useState('');\r\n    const handleOtpInput = (e) => setOtp(e.target.value);\r\n    const [isContactInfoVerified, setIsContactInfoVerified] = useState(false);\r\n    const handleVerifyOtp = async () => {\r\n        if (otp === 0 || otp === null || otp === '' || otp === undefined) {\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"please enter otp\");\r\n        } else if (otp.length !== 6) {\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"invalid otp\");\r\n        } else {\r\n            setLoadingBar(true);\r\n            const request = {\r\n                emailOtp: otp,\r\n                userId: userId\r\n            }\r\n            console.log(request);\r\n            try {\r\n                const responseData = await UserService.verifyOtpToPhoneNumber(request);\r\n                console.log(responseData);\r\n                setIsContactInfoVerified(true);\r\n            } catch (error) {\r\n                handleVerifyOtpErrors(error.message);\r\n                setIsContactInfoVerified(false);\r\n            } finally {\r\n                setLoadingBar(false);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleVerifyOtpErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Please enter valid otp\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Your are not registered\");\r\n        else if (Constants.OTP_NOT_MATCHED === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Entered Otp is Incorrect\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            mandatoryUpdateFieldsDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    // custom css for mandatory input fields for Select component from react-select\r\n    const customCssForMandUpdFlds = {\r\n        option: (provided, state) => ({\r\n            ...provided,\r\n            backgroundColor: state.isFocused ? childColor : '',\r\n            color: state.isFocused ? whiteColor : '',\r\n            ':hover': {\r\n                backgroundColor: childColor,\r\n                color: whiteColor,\r\n            },\r\n        }),\r\n    };\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {loadingBar && <LoadingBar />}\r\n            <Modal className='mandatory-update-fields-modal' size='lg' show={showModal} onHide={handleModalClose} centered backdrop=\"static\">\r\n                <Container className='px-5'>\r\n                    <Modal.Header>\r\n                        <Modal.Title style={{ fontSize: '20px' }}>\r\n                            Mandatory Fields\r\n                        </Modal.Title>\r\n                    </Modal.Header>\r\n                </Container>\r\n                <Modal.Body>\r\n                    <Container className='px-5' style={{ fontSize: '15px' }}>\r\n                        {userType === Constants.EXPONENT && (\r\n                            <div>\r\n                                <label><span style={{ color: 'red' }}>*</span>Technologies</label>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <div className='technology-multiselect'>\r\n                                            <Multiselect\r\n                                                id='technology'\r\n                                                options={technologiesList}\r\n                                                onSelect={onSelectTechnology}\r\n                                                onRemove={onRemoveTechnology}\r\n                                                displayValue=\"technologyName\"\r\n                                                placeholder=\"Your Technical Stack\"\r\n                                                avoidHighlightFirstOption={true}\r\n                                                style={{\r\n                                                    chips: {\r\n                                                        background: childColor,\r\n                                                    },\r\n                                                }}\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        )}\r\n                        <div className='mt-2'>\r\n                            <label><span style={{ color: 'red' }}>*</span>Contact Info</label>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className='contact-info' style={{ display: 'flex' }}>\r\n                                        <PhoneInput\r\n                                            forceDialCode={true}\r\n                                            onChange={handleContactInfo}\r\n                                            inputStyle={{ width: '100%' }}\r\n                                            disabled={isOtpSent}\r\n                                        />\r\n                                        {!isContactInfoVerified && (\r\n                                            <Button\r\n                                                className='button-otp'\r\n                                                onClick={handleSendOtp}\r\n                                                disabled={isOtpSent}\r\n                                            >\r\n                                                Send Otp\r\n                                            </Button>\r\n                                        )}\r\n                                        {isContactInfoVerified && (\r\n                                            <Button\r\n                                                className='button-otp'\r\n                                            >\r\n                                                Verified\r\n                                            </Button>\r\n                                        )}\r\n                                        {(isOtpSent && !isContactInfoVerified) && (\r\n                                            <Button\r\n                                                className='button-otp'\r\n                                                onClick={handleSendOtp}\r\n                                            >\r\n                                                ReSend\r\n                                            </Button>\r\n                                        )}\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        {!isContactInfoVerified && (\r\n                            isOtpSent && (\r\n                                <div className='mt-2'>\r\n                                    <label><span style={{ color: 'red' }}>*</span>Enter Otp</label>\r\n                                    <Row>\r\n                                        <Col>\r\n                                            <div className='contact-info' style={{ display: 'flex' }}>\r\n                                                <input\r\n                                                    type='number'\r\n                                                    placeholder='Enter Otp'\r\n                                                    style={{ borderRadius: '4px' }}\r\n                                                    value={otp}\r\n                                                    onChange={handleOtpInput}\r\n                                                />\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleVerifyOtp}\r\n                                                >\r\n                                                    Verify\r\n                                                </Button>\r\n                                                <Button\r\n                                                    className='button-otp'\r\n                                                    onClick={handleEditContactInfo}\r\n                                                >\r\n                                                    Edit Contact Info\r\n                                                </Button>\r\n                                            </div>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            )\r\n                        )}\r\n                        <div className='mt-2'>\r\n                            <Row>\r\n                                {userType === Constants.EXPONENT && (\r\n                                    <Col>\r\n                                        <div className='experience'>\r\n                                            <label><span style={{ color: 'red' }}>*</span>Experience</label>\r\n                                            <input\r\n                                                type='number'\r\n                                                className='expInput'\r\n                                                placeholder='Your Experience'\r\n                                                value={experience}\r\n                                                onChange={handleExperienceInput}\r\n                                                onKeyDown={(e) => {\r\n                                                    const allowedKeys = ['.', 'Backspace'];\r\n                                                    for (let i = 0; i <= 9; i++) {\r\n                                                        allowedKeys.push(i.toString());\r\n                                                    }\r\n                                                    if (!allowedKeys.includes(e.key)) {\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                    if (e.key === '.' && e.target.value.includes('.')) {\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                    if (e.key === '-' && e.target.selectionStart !== 0) {\r\n                                                        e.preventDefault();\r\n                                                    }\r\n                                                }}\r\n                                                step=\"any\" // Allows for decimals\r\n                                                min=\"1\"\r\n                                                max=\"50\"\r\n                                            />\r\n                                        </div>\r\n                                    </Col>\r\n                                )}\r\n                                <Col>\r\n                                    <div className='gender-singleselect'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>Gender</label>\r\n                                        <Select\r\n                                            id='gender'\r\n                                            options={genderList}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            onChange={onSelectGender}\r\n                                            placeholder='Select Gender'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        <div className='mt-2'>\r\n                            <Row>\r\n                                <Col>\r\n                                    <div className='country'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>Country</label>\r\n                                        <Select\r\n                                            options={Country.getAllCountries()}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            value={selectedCountry}\r\n                                            onChange={(item) => {\r\n                                                setSelectedCountry(item);\r\n                                            }}\r\n                                            placeholder='Select Country'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                            isDisabled={true}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className='state'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>State</label>\r\n                                        <Select\r\n                                            options={State?.getStatesOfCountry(selectedCountry?.isoCode)}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            value={selectedState}\r\n                                            onChange={(item) => {\r\n                                                setSelectedState(item);\r\n                                            }}\r\n                                            placeholder='Select State'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                                <Col>\r\n                                    <div className='city'>\r\n                                        <label><span style={{ color: 'red' }}>*</span>City</label>\r\n                                        <Select\r\n                                            options={City.getCitiesOfState(\r\n                                                selectedState?.countryCode,\r\n                                                selectedState?.isoCode\r\n                                            )}\r\n                                            getOptionLabel={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            getOptionValue={(options) => {\r\n                                                return options[\"name\"];\r\n                                            }}\r\n                                            value={selectedCity}\r\n                                            onChange={(item) => {\r\n                                                setSelectedCity(item);\r\n                                            }}\r\n                                            placeholder='Select City'\r\n                                            styles={customCssForMandUpdFlds}\r\n                                        />\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n                        {/* <div>\r\n                            <div className='mt-3'>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        // checked={false}\r\n                                    //   onChange={(e) => setConsentGiven(e.target.checked)}\r\n                                    />\r\n                                    {' '}I agree to receive text messages (e.g., mobile number verification with one time passcode) at the mobile number provided, and I acknowledge that message frequency may vary. Message and data rates may apply. View our <a href=\"/privacy-policy\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>.\r\n                                </label>\r\n                            </div>\r\n                            <div className='mt-3'>\r\n                                <label>\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        // checked={false}\r\n                                    //   onChange={(e) => setOwnershipConfirmed(e.target.checked)}\r\n                                    />\r\n                                    {' '}I confirm that I am the owner or authorized user of the mobile number provided.\r\n                                </label>\r\n                            </div>\r\n                            <div className='mt-3'>\r\n                                <p>\r\n                                    We respect your privacy and are committed to protecting your personal data. For more information, please read our <a href=\"/privacy-policy\" target=\"_blank\" rel=\"noopener noreferrer\">Privacy Policy</a>.\r\n                                </p>\r\n                            </div>\r\n                        </div> */}\r\n                        <div>\r\n                            {errMsgDiv &&\r\n                                <div style={customCssForMsg}>\r\n                                    <label>{errMsg}</label>\r\n                                </div>}\r\n                        </div>\r\n                        <Button\r\n                            className='dashboard-button mt-3'\r\n                            onClick={handleMandatoryUpdateFieldsSubmit}\r\n                        >\r\n                            Submit\r\n                        </Button>\r\n                    </Container>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MandatoryUpdateFields;\r\n\r\n/**<Multiselect\r\n                                            id='gender'\r\n                                            options={genderList}\r\n                                            onSelect={onSelectGender}\r\n                                            displayValue=\"name\"\r\n                                            placeholder=\"Select Your Gender\"\r\n                                            singleSelect={true}\r\n                                            avoidHighlightFirstOption={true}\r\n                                            style={{\r\n                                                chips: {\r\n                                                    color: whiteColor,\r\n                                                    background: childColor,\r\n                                                },\r\n                                            }}\r\n                                        /> */\r\n\r\n/**\r\n *  <div>\r\n            <Multiselect\r\n                options={technologies} \r\n                onSelect={onSelect} \r\n                onRemove={onRemove} \r\n                displayValue=\"name\"\r\n                placeholder=\"Select Technical Stack\"\r\n            />\r\n        </div>\r\n */\r\n\r\n/**\r\n * {\r\n                                multiselectContainer: { // To change css for multiselect (Width,height,etc..)\r\n                                  \r\n                                },\r\n                                searchBox: { // To change search box element look\r\n                                //   border: 'none',\r\n                                //   fontSize: '10px',\r\n                                //   minHeight: '50px',\r\n                                },\r\n                                inputField: { // To change input field position or margin\r\n                                    // margin: '5px',\r\n                                },\r\n                                chips: { // To change css chips(Selected options)\r\n                                  background: '#8CB9BD',\r\n                                },\r\n                                optionContainer: { // To change css for option container \r\n                                //   border: '2px solid',\r\n                                },\r\n                                option: { // To change css for dropdown options\r\n                                //   color: 'black',\r\n                                },\r\n                                groupHeading: { // To chanage group heading style\r\n                                  \r\n                                }\r\n                              }\r\n */\r\n\r\n/**\r\n * <div>\r\n            <Modal show={showModal} onHide={handleClose} centered>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Modal title</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    ...\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                        Close\r\n                    </Button>\r\n                    <Button variant=\"primary\">\r\n                        Save changes\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        </div>\r\n */"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
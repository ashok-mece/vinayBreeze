{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\Documents\\\\prepswisefinalprojects\\\\breeze(15)-frontend\\\\breeze\\\\src\\\\components\\\\dashboard_component\\\\feature_component\\\\exponent_feature_component\\\\interview_supporter_feature_component\\\\interview_supporter_bookings_component\\\\InterviewSupporterBookings.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport './InterviewSupporterBookings.css';\nimport InterviewSupporterService from '../../../../../../Services/exponent_service/InterviewSupporterService';\nimport Constants from '../../../../../Constants';\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\nimport { Card } from 'react-bootstrap';\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction InterviewSupporterBookings() {\n  _s();\n  const [loadingBar, setLoadingBar] = useState(false);\n  const [interviewSupportBookings, setInterviewSupportBookings] = useState([]);\n  const userId = localStorage.getItem(\"breezeUserId\");\n  const getInterviewSupportBookingsByExponentId = async () => {\n    setLoadingBar(true);\n    const request = {\n      exponentId: userId\n    };\n    try {\n      const responseData = await InterviewSupporterService.getInterviewSupporterBookingByExponentId(request);\n      console.log(responseData);\n      if (responseData.length === 0) {\n        interviewSupportBookingDisplayErrMsg(\"Interview Support Bookings are not found\");\n      } else {\n        setInterviewSupportBookings(responseData);\n      }\n    } catch (error) {\n      console.log(error.message);\n      handleInterviewSupportBookingsByExponentIdErrors(error.message);\n    } finally {\n      setLoadingBar(false);\n    }\n  };\n  useEffect(() => {\n    getInterviewSupportBookingsByExponentId();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const handleInterviewSupportBookingsByExponentIdErrors = errorStatus => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) interviewSupportBookingDisplayErrMsg(\"Your Id is invalid\");else if (Constants.ENTITY_NOT_FOUND === errorStatus) interviewSupportBookingDisplayErrMsg(\"You Have No Interview Support Bookings\");else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus) interviewSupportBookingDisplayErrMsg(\"Sorry, Our service is down\");else interviewSupportBookingDisplayErrMsg(\"Could not process your request\");\n  };\n\n  //Fields for to display err msg div and label\n  const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\n  const [errMsgDiv, setErrMsgDiv] = useState(false);\n  const [errMsg, setErrMsg] = useState(\"\");\n  //JS for to display err msg\n  const interviewSupportBookingDisplayErrMsg = errorMessage => {\n    setErrMsg(errorMessage);\n    setErrMsgDiv(true);\n    // setTimeout(() => {\n    //     setErrMsg(\"\");\n    //     setErrMsgDiv(false);\n    // }, 3000);\n  };\n\n  // open Resume code\n  const [resumeUrl, setResumeUrl] = useState('');\n  useEffect(() => {\n    if (resumeUrl) {\n      window.open(resumeUrl, '_blank');\n    }\n  }, [resumeUrl]);\n  const handleOpenResume = async (path, interviewSupportBookingId) => {\n    setLoadingBar(true);\n    console.log(path);\n    try {\n      const resumeRequest = {\n        courseContent: path\n      };\n      const resumeResponse = await GlobalService.getCourseContentByPath(resumeRequest);\n      console.log(resumeResponse);\n      const resumeFile = new Blob([resumeResponse.data], {\n        type: resumeResponse.headers['content-type']\n      });\n      const resumeFileUrl = URL.createObjectURL(resumeFile);\n      setResumeUrl(resumeFileUrl);\n    } catch (error) {\n      console.error('Error fetching data for path:', path, error);\n      handleResumeErrors(error.message, interviewSupportBookingId);\n    } finally {\n      setLoadingBar(false);\n    }\n  };\n  const handleResumeErrors = (errorStatus, interviewSupportBookingId) => {\n    if (Constants.INVALID_REQUEST_FIELD === errorStatus) handleInterviewSupportCardErrMsg(\"Resume Path is invalid\", interviewSupportBookingId);else if (Constants.FILES_NOT_FOUND === errorStatus) handleInterviewSupportCardErrMsg(\"File Not Found\", interviewSupportBookingId);else handleInterviewSupportCardErrMsg(\"Could not process your request\", interviewSupportBookingId);\n  };\n  const [interviewSupportCard, setInterviewSupportCard] = useState(0);\n  const [interviewSupportCardErr, setInterviewSupportCardErr] = useState('');\n  const handleInterviewSupportCardErrMsg = (errorMessage, interviewSupportBookingId) => {\n    setInterviewSupportCardErr(errorMessage);\n    setInterviewSupportCard(interviewSupportBookingId);\n    setTimeout(() => {\n      setInterviewSupportCardErr('');\n      setInterviewSupportCard(0);\n    }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\n  };\n  const customCssForMsg = {\n    fontSize: 'medium',\n    fontWeight: '700',\n    color: messageColor\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"exponent-interview-supporter-bookings\",\n    children: [loadingBar && /*#__PURE__*/_jsxDEV(LoadingBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"interview-supporter-bookings\",\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: interviewSupportBookings.map((item, index) => /*#__PURE__*/_jsxDEV(Card, {\n        className: \"card\",\n        style: {\n          width: '100%',\n          margin: '0.5rem',\n          fontSize: '13px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"interview-supporter-booking-data\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  style: {\n                    textDecoration: 'underline',\n                    fontSize: '15px'\n                  },\n                  children: 'Interview Support Booking'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Candidate-Name : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.candidate.userFirstname + ' ' + item.candidate.userLastname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 70\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 150\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Technical-Stack : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: item.interviewSupportDto.technologyList.map(tech => tech.technologyName).join(', ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 71\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 170\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Booked Date : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: Constants.convertUserTimezoneDateTime(item.interviewSupportBookingDto.bookedDate).date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 67\n              }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 171\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time-slots\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"Booked Slots : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"time-slot-container\",\n                  children: item.interviewSupportBookingDto.timeSlotList.map((item, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    className: \"time-slot-button\",\n                    children: Constants.formatTime(Constants.convertUserTimezoneTime(item.slotStartTime)) + ' - ' + Constants.formatTime(Constants.convertUserTimezoneTime(item.slotEndTime))\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 49\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Job Description(JD) : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 33\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"job-description\",\n              children: item.interviewSupportBookingDto.jobDescription ? item.interviewSupportBookingDto.jobDescription : 'Not Provided'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 71\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 229\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: interviewSupportCard === item.interviewSupportBookingDto.interviewSupportBookingId && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: customCssForMsg,\n                children: /*#__PURE__*/_jsxDEV(\"label\", {\n                  children: interviewSupportCardErr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: errMsgDiv && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: customCssForMsg,\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: errMsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n_s(InterviewSupporterBookings, \"j+l/kuzW0/MWbvpa23cmBUlYFug=\");\n_c = InterviewSupporterBookings;\nexport default InterviewSupporterBookings;\nvar _c;\n$RefreshReg$(_c, \"InterviewSupporterBookings\");","map":{"version":3,"names":["useEffect","useState","InterviewSupporterService","Constants","LoadingBar","Card","GlobalService","jsxDEV","_jsxDEV","InterviewSupporterBookings","_s","loadingBar","setLoadingBar","interviewSupportBookings","setInterviewSupportBookings","userId","localStorage","getItem","getInterviewSupportBookingsByExponentId","request","exponentId","responseData","getInterviewSupporterBookingByExponentId","console","log","length","interviewSupportBookingDisplayErrMsg","error","message","handleInterviewSupportBookingsByExponentIdErrors","errorStatus","INVALID_REQUEST_FIELD","ENTITY_NOT_FOUND","BREEZE_DATABASE_EXCEPTION","messageColor","setMessageColor","MESSAGE_COLOR","errMsgDiv","setErrMsgDiv","errMsg","setErrMsg","errorMessage","resumeUrl","setResumeUrl","window","open","handleOpenResume","path","interviewSupportBookingId","resumeRequest","courseContent","resumeResponse","getCourseContentByPath","resumeFile","Blob","data","type","headers","resumeFileUrl","URL","createObjectURL","handleResumeErrors","handleInterviewSupportCardErrMsg","FILES_NOT_FOUND","interviewSupportCard","setInterviewSupportCard","interviewSupportCardErr","setInterviewSupportCardErr","setTimeout","SET_TIME_OUT_FOR_ERROR_MSG","customCssForMsg","fontSize","fontWeight","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","flexWrap","map","item","index","width","margin","Body","Text","textDecoration","candidate","userFirstname","userLastname","interviewSupportDto","technologyList","tech","technologyName","join","convertUserTimezoneDateTime","interviewSupportBookingDto","bookedDate","date","timeSlotList","formatTime","convertUserTimezoneTime","slotStartTime","slotEndTime","Footer","jobDescription","_c","$RefreshReg$"],"sources":["C:/Users/DELL/Documents/prepswisefinalprojects/breeze(15)-frontend/breeze/src/components/dashboard_component/feature_component/exponent_feature_component/interview_supporter_feature_component/interview_supporter_bookings_component/InterviewSupporterBookings.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport './InterviewSupporterBookings.css';\r\nimport InterviewSupporterService from '../../../../../../Services/exponent_service/InterviewSupporterService';\r\nimport Constants from '../../../../../Constants';\r\nimport LoadingBar from '../../../../../loading_bar_component/LoadingBar';\r\nimport { Card } from 'react-bootstrap';\r\nimport GlobalService from '../../../../../../Services/global_service/GlobalService';\r\n\r\nfunction InterviewSupporterBookings() {\r\n\r\n    const [loadingBar, setLoadingBar] = useState(false);\r\n\r\n    const [interviewSupportBookings, setInterviewSupportBookings] = useState([]);\r\n    const userId = localStorage.getItem(\"breezeUserId\");\r\n    const getInterviewSupportBookingsByExponentId = async () => {\r\n        setLoadingBar(true);\r\n        const request = {\r\n            exponentId: userId,\r\n        }\r\n        try {\r\n            const responseData = await InterviewSupporterService.getInterviewSupporterBookingByExponentId(request);\r\n            console.log(responseData);\r\n            if (responseData.length === 0) {\r\n                interviewSupportBookingDisplayErrMsg(\"Interview Support Bookings are not found\");\r\n            } else {\r\n                setInterviewSupportBookings(responseData);\r\n            }\r\n        } catch (error) {\r\n            console.log(error.message);\r\n            handleInterviewSupportBookingsByExponentIdErrors(error.message);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        getInterviewSupportBookingsByExponentId();\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, []);\r\n\r\n    const handleInterviewSupportBookingsByExponentIdErrors = (errorStatus) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            interviewSupportBookingDisplayErrMsg(\"Your Id is invalid\");\r\n        else if (Constants.ENTITY_NOT_FOUND === errorStatus)\r\n            interviewSupportBookingDisplayErrMsg(\"You Have No Interview Support Bookings\");\r\n        else if (Constants.BREEZE_DATABASE_EXCEPTION === errorStatus)\r\n            interviewSupportBookingDisplayErrMsg(\"Sorry, Our service is down\");\r\n        else\r\n            interviewSupportBookingDisplayErrMsg(\"Could not process your request\");\r\n    }\r\n\r\n    //Fields for to display err msg div and label\r\n    const [messageColor, setMessageColor] = useState(Constants.MESSAGE_COLOR);\r\n    const [errMsgDiv, setErrMsgDiv] = useState(false);\r\n    const [errMsg, setErrMsg] = useState(\"\");\r\n    //JS for to display err msg\r\n    const interviewSupportBookingDisplayErrMsg = (errorMessage) => {\r\n        setErrMsg(errorMessage);\r\n        setErrMsgDiv(true);\r\n        // setTimeout(() => {\r\n        //     setErrMsg(\"\");\r\n        //     setErrMsgDiv(false);\r\n        // }, 3000);\r\n    }\r\n\r\n    // open Resume code\r\n    const [resumeUrl, setResumeUrl] = useState('');\r\n    useEffect(() => {\r\n        if (resumeUrl) {\r\n            window.open(resumeUrl, '_blank');\r\n        }\r\n    }, [resumeUrl]);\r\n    const handleOpenResume = async (path, interviewSupportBookingId) => {\r\n        setLoadingBar(true);\r\n        console.log(path);\r\n        try {\r\n            const resumeRequest = {\r\n                courseContent: path,\r\n            }\r\n            const resumeResponse = await GlobalService.getCourseContentByPath(resumeRequest);\r\n            console.log(resumeResponse);\r\n            const resumeFile = new Blob([resumeResponse.data], { type: resumeResponse.headers['content-type'] });\r\n            const resumeFileUrl = URL.createObjectURL(resumeFile);\r\n            setResumeUrl(resumeFileUrl);\r\n        } catch (error) {\r\n            console.error('Error fetching data for path:', path, error);\r\n            handleResumeErrors(error.message, interviewSupportBookingId);\r\n        } finally {\r\n            setLoadingBar(false);\r\n        }\r\n    }\r\n    const handleResumeErrors = (errorStatus, interviewSupportBookingId) => {\r\n        if (Constants.INVALID_REQUEST_FIELD === errorStatus)\r\n            handleInterviewSupportCardErrMsg(\"Resume Path is invalid\", interviewSupportBookingId);\r\n        else if (Constants.FILES_NOT_FOUND === errorStatus)\r\n            handleInterviewSupportCardErrMsg(\"File Not Found\", interviewSupportBookingId);\r\n        else\r\n            handleInterviewSupportCardErrMsg(\"Could not process your request\", interviewSupportBookingId);\r\n    }\r\n\r\n    const [interviewSupportCard, setInterviewSupportCard] = useState(0);\r\n    const [interviewSupportCardErr, setInterviewSupportCardErr] = useState('');\r\n    const handleInterviewSupportCardErrMsg = (errorMessage, interviewSupportBookingId) => {\r\n        setInterviewSupportCardErr(errorMessage);\r\n        setInterviewSupportCard(interviewSupportBookingId);\r\n        setTimeout(() => {\r\n            setInterviewSupportCardErr('');\r\n            setInterviewSupportCard(0);\r\n        }, Constants.SET_TIME_OUT_FOR_ERROR_MSG);\r\n    }\r\n\r\n    const customCssForMsg = {\r\n        fontSize: 'medium',\r\n        fontWeight: '700',\r\n        color: messageColor,\r\n    }\r\n\r\n    return (\r\n        <div className='exponent-interview-supporter-bookings'>\r\n            {loadingBar && <LoadingBar />}\r\n            <div className='interview-supporter-bookings' style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                {interviewSupportBookings.map((item, index) => (\r\n                    <Card className='card' key={index} style={{ width: '100%', margin: '0.5rem', fontSize: '13px' }}>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <div className='interview-supporter-booking-data'>\r\n                                    <div>\r\n                                        <label style={{ textDecoration: 'underline', fontSize: '15px' }}>{'Interview Support Booking'}</label>\r\n                                    </div>\r\n                                    <label>Candidate-Name : </label> <span>{item.candidate.userFirstname + ' ' + item.candidate.userLastname}</span> <br />\r\n                                    <label>Technical-Stack : </label> <span>{item.interviewSupportDto.technologyList.map(tech => tech.technologyName).join(', ')}</span> <br />\r\n                                    <label>Booked Date : </label> <span>{(Constants.convertUserTimezoneDateTime(item.interviewSupportBookingDto.bookedDate)).date}</span> <br />\r\n                                    <div className='time-slots'>\r\n                                        <label>Booked Slots : </label>\r\n                                        <div className='time-slot-container'>\r\n                                            {item.interviewSupportBookingDto.timeSlotList.map((item, index) => (\r\n                                                <button\r\n                                                    key={index}\r\n                                                    type='button'\r\n                                                    className='time-slot-button'\r\n                                                >\r\n                                                    {Constants.formatTime(Constants.convertUserTimezoneTime(item.slotStartTime)) + ' - ' + Constants.formatTime(Constants.convertUserTimezoneTime(item.slotEndTime))}\r\n                                                </button>\r\n                                            ))}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                        <Card.Footer>\r\n                            <div>\r\n                                {/* <label>Resume Link : </label>\r\n                                <span>\r\n                                    {item.interviewSupportBookingDto.resume ? (\r\n                                        <button\r\n                                            onClick={() => handleOpenResume(item.interviewSupportBookingDto.resume, item.interviewSupportBookingDto.interviewSupportBookingId)}\r\n                                            style={{\r\n                                                border: 'none',\r\n                                                background: 'none',\r\n                                                padding: '0',\r\n                                                color: '#1b4962',\r\n                                                textDecoration: 'underline',\r\n                                                cursor: 'pointer',\r\n                                            }}\r\n                                        >\r\n                                            Open Resume\r\n                                        </button>\r\n                                    ) : (' Not Provided')}\r\n                                </span><br /> */}\r\n                                <label>Job Description(JD) : </label> <span className='job-description'>{item.interviewSupportBookingDto.jobDescription ? item.interviewSupportBookingDto.jobDescription : ('Not Provided')}</span> <br />\r\n                                <div>\r\n                                    {interviewSupportCard === item.interviewSupportBookingDto.interviewSupportBookingId && (\r\n                                        <div style={customCssForMsg}>\r\n                                            <label>{interviewSupportCardErr}</label>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                            </div>\r\n                        </Card.Footer>\r\n                    </Card>\r\n                ))}\r\n            </div>\r\n            <div>\r\n                {errMsgDiv &&\r\n                    <div style={customCssForMsg}>\r\n                        <label>{errMsg}</label>\r\n                    </div>}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InterviewSupporterBookings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}